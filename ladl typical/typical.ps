%!PS-Adobe-2.0
%%Creator: dvips(k) 5.994 Copyright 2014 Radical Eye Software
%%Title: typical.dvi
%%CreationDate: Sun Oct  4 19:39:41 2015
%%Pages: 3
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: NimbusRomNo9L-Medi CMR9 NimbusSanL-Bold NimbusSanL-Regu
%%+ CMR8 NimbusRomNo9L-ReguItal CMMI9 CMSY9 CMSS9 CMR6 CMSY6 MSAM10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips typical.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2015.10.04:1939
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
% $Id: pstricks.pro 919 2014-05-19 18:42:47Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 1.23, 2014/05/15
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
% Define the follwing gs-functions if not known, eg when using distiller
%
systemdict /.setopacityalpha known not {/.setopacityalpha { pop } def } if
systemdict /.setblendmode known not {/.setblendmode { pop } def } if
systemdict /.setshapealpha known not {/.setshapealpha { pop } def } if
%
/tx@Dict 200 dict def 				% the main PSTricks dictionary
tx@Dict begin
/ADict 25 dict def				% The arrow dictionary
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/Log { dup 1e-20 lt { pop -1e30 }{ log } ifelse } def % control the log
/tan { dup cos abs 1.e-10 lt 
  { pop 1.e10 } 				% return 1.e10 as infinit
  { dup sin exch cos div } ifelse 		% default sin/cos
} def
/Tan { dup sin exch cos Div } def 		% sin(x)/cos(x) x in degrees
/Acos {dup dup mul neg 1 add dup 0 lt {		% arc cos, returns 0 when negative root
  pop pop 0 }{ sqrt exch atan} ifelse } def
/Acos2 { 2 dict begin 
  /x ED /y ED
  y abs 1.0e-20 lt { 1.0e30 } if
  x y div 
  dup dup mul neg 1 add dup 0 lt {		% arc cos needs two values x,y
  pop pop 0 }{ sqrt exch atan} ifelse 
  y 0 lt { 180 add } if
} def
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, expects 2 parameter
/Pyth2 {					% Pythagoras, xA yA xB yB
  3 -1 roll 		% xA xB yB yA
  sub			% xA xB yB-yA
  3 1 roll 		% yB-yA xA xB
  sub			% yB-yA xA-xB
  Pyth } def
/PtoC { 2 copy cos mul 3 1 roll sin mul } def % Polar to Cartesian
/PtoCab { dup cos 4 -1 roll mul 3 1 roll sin mul } def % Polar to Cartesian (Ellipse) a b phi-> x y 
%/Rand { rand 4294967295 div } def		% a real random number
/Rand { rand 2147483447 div } def		% a real random number between 0 and 1
%----------------- hv added 20050516 ---------------
/PiDiv2 1.57079632680 def
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
%/e Euler bind def
%
/RadtoDeg { 180 mul Pi div } bind def 		% convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def 		% viceversa
%
/startGlobal { true setglobal globaldict begin } bind def
/endGlobal { end false setglobal } bind def
/pssetRGBcolor /setrgbcolor load def
/pssetCMYKcolor /setcmykcolor load def
/pssetGraycolor /setgray load def
%
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
%
/PathLength { 
  flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def }
  { /y ED /x ED PathLength@ } 
  {} 
  { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if 
  z 
} def
%
/STP { .996264 dup scale } def			% BP/PT scaling
/STV { SDict begin normalscale end STP  } def	% 
%
/DashLine {
    dup 0 gt
    { /a .5 def PathLength exch div }
    { pop /a 1 def PathLength } ifelse
    /b ED % pattern should fit evenly in b
    dup /X ED % pattern array
    0 get /y ED % length of first black segment
    /z 0 X {add} forall def % length of the full pattern
    %% Computation of the scaling factor as described by van Zandt:
    b a .5 sub 2 mul y mul sub z Div round
    z mul a .5 sub 2 mul y mul add b exch Div
    %%%% scaling factor on stack.
    /z ED %% now, z is the scaling factor
    false % for the length test below
    X { z mul } forall X astore %% modification TN 04-08-07
    %%% Checking whether at least one dash in X has positive length:
    {0 gt or} forall
    { X 1 a sub y mul }
    { [ 1 0 ] 0 }
    ifelse
    setdash stroke
} def
%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/SymbolLine {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 div cvi /n ED     				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    %% for negative SymStep we calculate the distance 
    SymStep 0 lt 
      { %XYLength SymStep div abs cvi 
        /nSym SymStep abs cvi def } 
      { /nSym XYLength SymStep div cvi def }
    ifelse
    0.5 setflat
    /Shift Symbol stringwidth pop 2 div def 
    /deltaX XLength nSym div def
    /deltaY YLength nSym div def
    curveticks 
      { XA YA moveto }
      { XA Shift sub YA Shift sub moveto }
    ifelse 
    nSym { 
      gsave 
      curveticks 
        { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
          currentpoint translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
          Symbol show 
        }
      ifelse 
      grestore 
      deltaX deltaY rmoveto
    } repeat
    /YA YB def /XA XB def
  } repeat 
  curveticks 
    { XA YA moveto }
    { XA Shift sub YA Shift sub moveto }
  ifelse 
  gsave 
  curveticks 
    { PAngle 180 sub CorrAngle sub tickAngle add /rotAngle ED  
      XA YA translate rotAngle rotate 
      0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
      SymbolLinewidth setlinewidth stroke
    }
    { 
      rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
    }
  ifelse 
  grestore
  pop 				% delete the mark symbol
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
/DotFill {%	 on stack: dot radius
  /dotRadius ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform 
  pathbbox % llx lly urx ury of smallest bounding box
  /y2 ED /x2 ED /y1 ED /x1 ED 
  y2 y1 sub a div 2 add cvi /Ny ED
  x2 x1 sub a div 2 add cvi /Nx ED
  clipType   % must be defined in pstricks.tex: clip -- eoclip 
  newpath 
  /yA y1 dotRadius add CLW add def
  /xA0 x1 dotRadius add CLW add def
  Ny {
     /xA xA0 def
     Nx { 
       newpath 
       xA yA dotRadius 0 360 arc 
       SolidDot { gsave fill grestore } if 
       stroke
       xA a add /xA ED
     } repeat
     yA a add /yA ED
  } repeat
  grestore
} def
%
/PenroseFill {%	 on stack: scaling factor
  /Scale ED
%  1 exch div round /penroseFactor ED 
%  a 0 dtransform round exch round exch
%  2 copy idtransform 
%  exch Atan rotate 
%  idtransform pop /a ED 
%  .25 .25 itransform pathbbox 
%  /y2 ED 
%  a Div ceiling cvi /x2 ED /y1 ED 
%  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
gsave
  220 150 translate
  Scale dup scale
  systemdict /setstrokeadjust known { true setstrokeadjust } if 
  /I/S/L/W/G/+/Z/F/E/D[/def/exch/for{E D}/add{s E get mul}
 { Z -36.2001 1 33 }{25 E S rlineto}{/q Z dup q G E q 1 + G}{Z 2 2}]{cvx def}forall
  [0 72 1008 {dup sin E cos }F ]1 setlinejoin/s W{/a W{/b I 10{/i I 4{/m I moveto
  i m +/j I 10{/l Z b m l + G a l G sub s m get div .2 + floor .3 + 25
  mul j l + S rmoveto}F i L j L stroke }F}F}F}F 
  grestore 
%  pop pop 
} def
%
/PenroseFillA {%  on stack: scaling factor, border color, kite color, dart color
  /Scale ED
  Scale dup scale
  /border_colour ED 
  /kite_colour ED 
  /dart_colour ED
  clip 
  newpath 
  gsave
  100 100 translate
  6 
  Scale 1 lt { 1 Scale dup add div mul cvi } if %%%%   Number of iterations
  10					%%%%   Long side length in millimeters
  /border_width { L 0.06 mul }def		%%%%   Choose the scalefactor for the borders
  /L exch 25.4 div 72 mul def		%%%%   Conversion: mm -> inches -> points
  /f{-1 5 sqrt add 2 div}bind def		%%%%   The reciprocal of the golden ratio
  /l{L f mul}bind def			%%%%   Short side length l = L*f
  /Ll{L l add}bind def			%%%%   Ll =  L + l
  /c{36 cos L mul}bind def		%%%%   c  =  L*cos(36)
  /s{36 sin L mul}bind def		%%%%   s  =  L*sin(36)
  /draw_tile { 0 0 moveto c s lineto 0 lineto gsave closepath gsave fill grestore
	     0 setlinewidth stroke grestore border_colour stroke } bind def
  /half_kite { dup dup 0 gt{ 1 sub gsave f f neg scale -36 rotate half_dart
			   Ll 0 translate 144 rotate kite grestore }
	      		 { kite_colour L draw_tile }ifelse
	     pop } bind def
  /half_dart { dup dup 0 gt{ 1 sub gsave f f scale half_kite
			   -144 rotate Ll neg 0 translate half_dart grestore }
	      		 { dart_colour l draw_tile }ifelse
  	     pop } bind def
  /kite{ gsave half_kite 1 -1 scale half_kite grestore }bind def
  border_width setlinewidth  1 setlinejoin  1 setlinecap
%  450 0 translate  
  dup f exch neg exp dup scale
  5 {kite 72 rotate } repeat stroke 
  grestore
} def
%
%
/TruchetFill { %	 on stack: scaling factor
  10 dict begin
  dup dup scale
  1 exch div round /penroseFactor ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  /ma a neg def
  /ha a 2 div def 
  /mha ha neg def
  /tile { 
    rand dup 2 idiv 2 mul eq { 90 rotate } if
    mha mha moveto ha mha lineto
    ha ha lineto mha ha lineto
%    closepath .1 setlinewidth stroke
    contents
  } def
  /contents{ 
    0 ha moveto ha 0 lineto
    0 mha moveto mha 0 lineto
%    1 setlinewidth stroke
  } def
  /dotiling {
    f ma mul a f a mul { 
      /i exch def
      f ma mul a f a mul { 
        /j exch def
        gsave i j translate
        tile stroke grestore
      } for
    } for
  } def
%
  /f 3 def 
  5 srand dotiling 
  end % local user dict
} def
%
/BeginArrow { 
  ADict begin 			% hold it local, for end see EndArrow
  /@mtrx CM def 
  gsave 
  2 copy T 
  2 index sub neg exch 
  3 index sub exch Atan 
  rotate newpath 
} def
%
/EndArrow { @mtrx setmatrix CP grestore end } def % end the ADict
%
/Arrow { 
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /a ED 
  { 0 h T 1 -1 scale } if 
  w neg h moveto 
  0 0 L w h L w neg a neg rlineto 
  gsave fill grestore 
} def
%
/ArrowD { % the sides are drawn as curves (hv 20071211)
  CLW mul add dup 
  2 div /w ED 
  mul dup /h ED 
  mul /Inset ED 
  { 0 h T 1 -1 scale } if % changes the direction
% we use y=w/h^2 * x^2 as equation for the control points
% for the coordinates the arrow is seen from top to bottom
% the bottom (tip) is (0;0)
  w neg h moveto % lower left of >
  w 9 div 4 mul neg h 3 div 2 mul
  w 9 div neg       h 3 div  
  0 0 curveto    % tip of >
  w 9 div        h 3 div  
  w 9 div 4 mul  h 3 div 2 mul
  w h curveto % upper left of >
  w neg Inset neg rlineto % move to x=0 and inset
  gsave fill grestore 
} def 
%
/Tbar { 
  CLW mul add /z ED 
  z -2 div CLW 2 div moveto 
  z 0 rlineto stroke 
  0 CLW moveto 
} def
%
/Bracket { 
  CLW mul add dup CLW sub 2 div 
  /x ED mul CLW add /y ED /z CLW 2 div def 
  x neg y moveto 
  x neg CLW 2 div L x CLW 2 div L x y L stroke 
  0 CLW moveto 
} def
%
/RoundBracket { 
  CLW mul add dup 2 div 
  /x ED mul /y ED /mtrx CM def 
  0 CLW 2 div T x y mul 0 ne { x y scale } if 
  1 1 moveto 
  .85 .5 .35 0 0 0 curveto 
  -.35 0 -.85 .5 -1 1 curveto 
  mtrx setmatrix stroke 0 CLW moveto 
} def
%
/SD { 0 360 arc fill } def
%
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse  	% outer or inner dimen 
  /b ED 				% the color definition
  0 z DS SD 
  b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub 
  moveto 
} def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /showpoints ED 
  counttomark 2 div dup cvi /n ED  	% n 2 div on stack 
  n eq not { exch pop } if		% even numbers of points? delete one
  ] aload /Points ED 
  showpoints not { Points aload pop } if
%    { ] aload /Points ED } 
%    { n 2 mul 1 add -1 roll pop } ifelse	% delete the mark symbol 
} def
%
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
%
/LineToYAxis {
  /Ox ED		% Save the x origin value 
  NArray            % all x-y pairs on stack
  n { 2 copy moveto % go to current point
    Ox exch Lineto   % line to y-axis
    pop             % delete old x-value
  } repeat
} def
%
/LineToXAxis{
  /Oy ED		% Save the y origin value 
  NArray		% all x-y pairs on stack
  n 0 eq not
    { n 1 eq { 0 0 /n 2 def } if
      ArrowA
      /n n 2 sub def
      CP 2 copy moveto pop Oy Lineto
      n { 2 copy moveto pop Oy Lineto } repeat
      CP
      4 2 roll
      ArrowB
      2 copy moveto pop Oy
      L
      pop pop } if
} def
%
/Arcto { 
  /a [ 6 -2 roll ] cvx def 
  a r 
  /arcto load stopped { 5 } { 4 } ifelse { pop } repeat 
  a 
} def
%
/CheckClosed { 
  dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if 
} def
%
/Polygon { 
  NArray n 2 eq { 0 0 /n 3 def } if 
  n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      n 2 mul -2 roll 
      /y0 ED /x0 ED /y1 ED /x1 ED  
      x1 y1 
      /x1 x0 x1 add 2 div def 
      /y1 y0 y1 add 2 div def 
      x1 y1 moveto 
      /n n 2 sub def 
      n { Lineto } repeat 
      x1 y1 x0 y0 6 4 roll Lineto
      Lineto pop pop closepath } ifelse 
} def
%
/SymbolPolygon {   % on stack [ x y x y ...
  counttomark 					% number of elements
  2 add /m ED
  2 copy m 2 roll				% copy last two
  m 2 div cvi /n ED    				% n pairs
  /YA ED /XA ED					% the start point
  n 1 sub { 
    /YB ED /XB ED
    /XLength XB XA sub def
    /YLength YB YA sub def
    /PAngle YLength XLength Atan def
    /XYLength XLength YLength Pyth def
    /nSym XYLength SymStep Div cvi def
    /Shift Symbol stringwidth pop 2 Div def 
    /deltaX XLength nSym Div def
    /deltaY YLength nSym Div def
    XA Shift sub YA Shift sub moveto 
    nSym { 
      gsave rotateSymbol { PAngle 180 sub CorrAngle sub rotate } if
      Symbol show 
      grestore 
      deltaX deltaY rmoveto
    } repeat
%    XB Shift sub YB Shift sub moveto Symbol show
    /YA YB def /XA XB def
  } repeat 
  pop	% delete the mark symbol
} def
%
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
%
/Triangle { 
  /mtrx CM def 
  translate 
  rotate /h ED 2 div /w ED 
  dup CLW mul /d ED 
  /h h d w h Atan sin Div sub def 
  /w w d h w Atan 2 div dup cos exch sin Div mul sub def 
  mark 
  0 d w neg d 0 h w d 0 d 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false 
  Line 
  closepath 
  mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
  setmatrix pop 
} def
% DG/SR modification end
%
/CCA { 
  /y ED /x ED 
  2 copy y sub /dy1 ED 
  x sub /dx1 ED 
  /l1 dx1 dy1 Pyth def 
} def
%
/CC { 
  /l0 l1 def 
  /x1 x dx sub def 
  /y1 y dy sub def 
  /dx0 dx1 def 
  /dy0 dy1 def 
  CCA 
  /dx dx0 l1 c exp mul dx1 l0 c exp mul add def 
  /dy dy0 l1 c exp mul dy1 l0 c exp mul add def 
  /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos abs b exp a mul dx dy Pyth Div 2 div def 
  /x2 x l0 dx mul m mul sub def
  /y2 y l0 dy mul m mul sub def 
  /dx l1 dx mul m mul neg def 
  /dy l1 dy mul m mul neg def 
} def
%
/IC { 
  /c c 1 add def 
  c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if } ifelse 
  /a a 2 mul 3 div 45 cos b exp div def 
  CCA 
  /dx 0 def 
  /dy 0 def 
} def
%
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
%
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
%
/CurvePath { 
  %% for negative SymStep we calculate the distance 
  SymStep 0 lt { gsave PathLength SymStep div abs /SymStep ED grestore } if
  0.5 setflat
  flattenpath /z 0 def /z0 0 def
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def 
    x1 Shift sub y1 Shift sub moveto 
    gsave 
    curveticks 
      { x1 y1 translate startAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke      
      }
      { startAngle rotate Symbol show }
    ifelse 
    grestore /z0 z def }
  { /y ED /x ED PathLength@ z z0 sub SymStep ge {
      x Shift sub y Shift sub moveto 
      gsave 
      curveticks 
        { y yOld sub x xOld sub Atan 180 sub CorrAngle sub /rotAngle ED  
          x y translate rotAngle rotate 
          0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
          SymbolLinewidth setlinewidth stroke
        }
        { 
          rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
          Symbol show 
        }
      ifelse 
      grestore /z0 z def } if 
    /yOld y def /xOld x def } 
  {} %% the lineto part
  { /y y2 def /x x2 def PathLength@ 
    x Shift sub y Shift sub moveto 
    gsave
    curveticks 
      { y yOld sub x xOld sub Atan 180 sub /rotAngle ED  
        x y translate rotAngle rotate 
        0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
        SymbolLinewidth setlinewidth stroke
      }
      { 
        x Shift sub y Shift sub moveto 
        rotateSymbol { y yOld sub x xOld sub Atan 180 sub CorrAngle sub rotate } if        
        Symbol show 
      }
    ifelse 
    grestore
  }
  pathforall 
%  curveticks 
%   { gsave 
%     x y translate rotAngle rotate 
%     0 SymbolWidth 2 div moveto 0 SymbolWidth 2 div neg lineto 
%     SymbolLinewidth setlinewidth stroke grestore
%   } if
  z 
} def
%
/OpenSymbolCurve { 
  OpenCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/AltCurve { 
  { false NArray n 2 mul 2 roll 
    [ n 2 mul 3 sub 1 roll ] aload
    /Points ED 
    n 2 mul -2 roll } 
  { false NArray } ifelse 
  n 4 lt { n { pop pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse 
} def
%
/AltOpenSymbolCurve { 
  AltCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { n 3 gt { CheckClosed } if 
      6 copy n 2 mul 6 add 6 roll 
      IC CC x y moveto n { NC } repeat 
      closepath pop pop 
    } ifelse 
} def
%
/ClosedSymbolCurve { 
  ClosedCurve
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/CalcBezierSpline {%  Christoph Bersch
  10 dict begin
  /getX { Points exch 2 mul get } def
  /getY { Points exch 2 mul 1 add get } def
  /n Points length 1 sub 2 idiv def
  /GetFirstControlPoints {
    /x n array def
    /tmp n array def
    /b 2 def
    x 0 rhs 0 get b div put
    1 1 n 1 sub {
      /i exch def
      tmp i 1 b div dup 4 1 roll put
      i n 1 sub lt { 4 }{ 3.5 } ifelse exch sub /b exch def
      x i rhs i get x i 1 sub get sub b div put
    } for
    1 1 n 1 sub {
      n exch sub
      dup dup x exch 1 sub 2 copy 6 2 roll
      get 3 1 roll tmp exch get
      exch x exch get mul sub
      put	
    } for
    x
  } def
  % 
  n 1 eq {
    0 getX 2 mul 1 getX add 3 div
    0 getY 2 mul 1 getY add 3 div
    exch dup 3 1 roll 2 mul 0 getX sub
    exch dup 3 1 roll 2 mul 0 getY sub
    [ 0 getX 0 getY 7 3 roll 1 getX 1 getY ] /outPoints exch def
  } {
    /outPoints 6 n mul 2 add array def
    0 1 n {
      dup dup 6 mul dup 1 add
      outPoints exch 5 -1 roll getY put
      outPoints exch 3 -1 roll getX put
    } for
    /rhs n array def
    1 1 n 2 sub {
      rhs exch dup dup getX 4 mul exch 1 add getX 2 mul add put
    } for
    rhs 0 0 getX 1 getX 2 mul add put
    rhs n 1 sub dup getX 8 mul n getX add 2 div put
    GetFirstControlPoints
    1 1 n 2 sub {
      rhs exch dup dup getY 4 mul exch 1 add getY 2 mul add put
    } for
    rhs 0 0 getY 1 getY 2 mul add put
    rhs n 1 sub dup getY 8 mul n getY add 2 div put
    GetFirstControlPoints
    0 1 n 1 sub {
      /i exch def
      2 copy
      i get outPoints 6 i mul 3 add 3 -1 roll put
      i get outPoints 6 i mul 2 add 3 -1 roll put
      2 copy
      i n 1 sub lt {
        i 1 add get i 1 add getY 2 mul exch sub outPoints 6 i mul 5 add 3 -1 roll put
        i 1 add get i 1 add getX 2 mul exch sub outPoints 6 i mul 4 add 3 -1 roll put
      }{
        n 1 sub get n getY add 2 div outPoints 6 n 1 sub mul 5 add 3 -1 roll put
        n 1 sub get n getX add 2 div outPoints 6 n 1 sub mul 4 add 3 -1 roll put
      } ifelse
    } for
    pop pop
  } ifelse
  outPoints
  end
} def
/Spline {
  /showpoints ED
  counttomark 2 div dup cvi /n ED
  n eq not { exch pop } if
  ] /Points ED
  n 1 gt {
    CalcBezierSpline
    mark exch aload pop
    ArrowA
    n 2 sub {
      6 2 roll 4 2 roll curveto
    } repeat
    6 2 roll 4 2 roll ArrowB curveto
  } if
} def
/OpenSymbolSpline {
  Spline
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def

%
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore } def
%
/FontDot { 
  DS 2 mul dup 
  matrix scale matrix concatmatrix exch matrix
  rotate matrix concatmatrix exch 
  findfont exch makefont setfont 
} def
%
/Rect { 
  x1 y1 y2 add 2 div moveto 
  x1 y2 lineto 
  x2 y2 lineto 
  x2 y1 lineto
  x1 y1 lineto 
  closepath 
} def
%
/OvalFrame { 
  x1 x2 eq y1 y2 eq or 
    { pop pop x1 y1 moveto x2 y2 L } 
    { y1 y2 sub abs x1 x2 sub abs 2 copy gt 
      { exch pop } { pop } ifelse 
      2 div exch { dup 3 1 roll mul exch } if 
      2 copy lt { pop } { exch pop } ifelse
      /b ED 
      x1 y1 y2 add 2 div moveto 
      x1 y2 x2 y2 b arcto 
      x2 y2 x2 y1 b arcto
      x2 y1 x1 y1 b arcto 
      x1 y1 x1 y2 b arcto 
      16 { pop } repeat 
      closepath 
    } ifelse 
} def
%
/Frame { 
  CLW mul /a ED 
  3 -1 roll 
  2 copy gt { exch } if 
  a sub /y2 ED 
  a add /y1 ED 
  2 copy gt { exch } if 
  a sub /x2 ED 
  a add /x1 ED 
  1 index 0 eq { pop pop Rect } { OvalFrame } ifelse 
} def
%
/BezierNArray { 
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if 
  n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat 
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
%
/OpenBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { ArrowA n 4 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      6 2 roll 4 2 roll ArrowB curveto } ifelse 
} def
%
/OpenSymbolBezier { 
  OpenBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
} def
%
/ClosedBezier { 
  BezierNArray 
  n 1 eq 
    { pop pop } 
    { moveto n 1 sub 3 idiv 
      { 6 2 roll 4 2 roll curveto } repeat 
      closepath } ifelse 
} def
%
/ClosedSymbolBezier { 
  /f ED				 % save showpoints value 
  2 copy /yEnd ED /xEnd ED
  counttomark -2 roll 2 copy /yStart ED /xStart ED
  counttomark 2 roll
  f
  ClosedBezier
  0.1 setflat
  /Shift Symbol stringwidth pop 2 div def 
  CurvePath 
  [ xEnd yEnd xStart yStart SymbolLine 
} def
%
/BezierShowPoints { 
  gsave 
  Points aload length 2 div cvi /n ED 
  moveto 
  n 1 sub { lineto } repeat 
  CLW 2 div SLW [ 4 4 ] 0 setdash stroke 
  grestore 
} def
%
/Parab { 
  /y0 ED /x0 ED /y1 ED /x1 ED 
  /dx x0 x1 sub 3 div def 
  /dy y0 y1 sub 3 div def 
  x0 dx sub y0 dy add x1 y1 ArrowA
  x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 x0 y0 x0 2 mul x1 sub y1 ] def 
} def
%
/Parab1 { % 1 end  |  0 SP
  /ySP ED /xSP ED /y1 ED /x1 ED 
  /dx xSP x1 sub 3 div def 
  /dy ySP y1 sub 3 div def 
  newpath x1 y1 moveto xSP y1 lineto xSP ySP lineto 
                       x1 ySP lineto closepath clip 
  currentpoint
  newpath moveto
  xSP dx sub ySP dy add x1 y1 ArrowA
  xSP dx add ySP dy add xSP 2 mul x1 sub y1 ArrowB 
  curveto 
  /Points [ x1 y1 xSP ySP xSP 2 mul x1 sub y1 ] def 
} def
%
/Grid { 
  newpath 
  /a 4 string def 
  /b ED % 				psk@gridlabels in pt
  /c ED % 				{ \pst@usecolor\psgridlabelcolor }
  /n ED % 				psk@griddots
  cvi dup 1 lt { pop 1 } if 
  /s ED % 				\psk@subgriddiv
  s div dup 0 eq { pop 1 } if 
  /dy ED s div dup 0 eq { pop 1 } if %	\pst@number\psyunit abs
  /dx ED dy div round dy mul %		\pst@number\psxunit abs
  /y0 ED dx div round dx mul 
  /x0 ED dy div round cvi 
  /y2 ED dx div round cvi 
  /x2 ED dy div round cvi 
  /y1 ED dx div round cvi 
  /x1 ED 
  /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def 
  /w x2 x1 sub 0 gt { 1 } { -1 } ifelse def 
  b 0 gt { 
    /z1 b 4 div CLW 2 div add def
%    /Helvetica findfont b scalefont setfont 
    /b b .95 mul CLW 2 div add def } if 
  systemdict /setstrokeadjust known 
    { true setstrokeadjust /t { } def }
    { /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
       exch itransform } bind def } ifelse 
  gsave n 0 gt { 1 setlinecap [ 0 dy n div ] dy n div 2 div setdash } { 2 setlinecap } ifelse 
  /i x1 def 
  /f y1 dy mul n 0 gt { dy n div 2 div h mul sub } if def 
  /g y2 dy mul n 0 gt { dy n div 2 div h mul add } if def 
  x2 x1 sub w mul 1 add dup 1000 gt { pop 1000 } if 
  { i dx mul dup y0 moveto 
    b 0 gt 
      { gsave c i a cvs dup stringwidth pop 
        /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse 
	h 0 gt {b neg}{z1} ifelse 
        rmoveto show grestore } if 
    dup t f moveto 
    g t L stroke 
    /i i w add def 
  } repeat 
  grestore 
  gsave 
  n 0 gt
  % DG/SR modification begin - Nov. 7, 1997 - Patch 1
  %{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
    { 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
  % DG/SR modification end
    { 2 setlinecap } ifelse 
  /i y1 def 
  /f x1 dx mul n 0 gt { dx n div 2 div w mul sub } if def 
  /g x2 dx mul n 0 gt { dx n div 2 div w mul add } if def 
  y2 y1 sub h mul 1 add dup 1000 gt { pop 1000 } if 
  { newpath i dy mul dup x0 exch moveto 
    b 0 gt { gsave c i a cvs dup stringwidth pop 
      /z2 ED 
      w 0 gt {z1 z2 add neg} {z1} ifelse 
      h 0 gt {z1} {b neg} ifelse 
      rmoveto show grestore } if 
    dup f exch t moveto 
    g exch t L stroke 
    /i i h add def 
  } repeat 
  grestore 
} def
%
/ArcArrow { 
  /d ED /b ED /a ED 
  gsave 
  newpath 0 -1000 moveto clip 
  newpath 
  0 1 0 0 b 
  grestore 
  c mul 
  /e ED 
  pop pop pop r a e d PtoC y add exch x add
  exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
  mul neg d 
} def
%
/Ellipse { 
  /rotAngle ED
  /mtrx CM def 
  T 
  rotAngle rotate
  scale 
  0 0 moveto 1 0 rmoveto  % move to the start position
  0 0 1 5 3 roll arc 
  mtrx setmatrix 
} def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % is add or sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul xOrig add % hv 2007-08-29   x->xOrig
  a2 sin ry mul yOrig add % hv 2007-08-29   y->yOrig
  a1 cos rx mul xOrig add % 
  a1 sin ry mul yOrig add % 
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
%
/RotBegin { 
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
  /a ED 
  a Rot /RAngle [ RAngle dup a add ] cvx def 
} def
%
/RotEnd { 
  /TMatrix [ TMatrix setmatrix ] cvx def 
  /RAngle [ RAngle pop ] cvx def 
} def
%
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/Uput {
  /a ED 
  add 2 div /h ED 2 
  div /w ED 
  /s a sin def 
  /c a cos def 
  /b s abs c abs 2 copy gt dup 
    /q ED 
    { pop } { exch pop } ifelse def 
  /w1 c b div w mul def 
  /h1 s b div h mul def 
  q { w1 abs w sub dup c mul abs }{ h1 abs h sub dup s mul abs } ifelse 
} def
%
/UUput { 
  5 dict begin
  /z ED 
  abs /y ED 
  /x ED 
  q { x s div c mul abs y gt }{ x c div s mul abs y gt } ifelse 
    { x x mul y y mul sub z z mul add sqrt z add } 
    { q { x s div } { x c div } ifelse abs 
    } ifelse 
  a PtoC 
  h1 add exch 
  w1 add exch 
  end
} def
%
end
%-----------------------------------------------------------------------------%
%
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-algparser.pro 0 0
% $Id: pst-algparser.pro 919 2014-05-19 18:42:47Z herbert $
%%
%% PostScript prologue for PSTricks algorithm parser
%% Version 0.06, 2014/05/19
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%%-----------------------------------------------------------------------------%
%
%currentdict /Pi known not { /Pi 3.14159265359 def } if
%
/AlgParser { tx@AlgToPs begin AlgToPs end } def  % Dominique Rodriguez
%
/tx@CoreAnalyzerDict 100 dict def tx@CoreAnalyzerDict begin
%
% PS ANALYZER FOR ALGEBRAIC EXPRESSION V1.13
%
% 09/2011 DR factorial with ! added
%
% E->T|E+T
% T->FS|T*FS
% FS -> F | +FS | -FS
% F->P|F^SF|P!
% P->(E)|literal
% literal->number|var|var[E]|func(params)
% params->E|E,param
% number->TOBEFINISHED
%
%% E expression, T term, SF signed factor, F factor, P power
%
%% parser
%
%% str
%
%% C->E<condition_operators>E
%% STR index -> STR index+lenExpr
/AnalyzeCond { AnalyzeExpr ReadCondOp AnalyzeExpr EvalCondOp  } def
%
%% analyze Expression List (separator , or | )
%% STR index -> STR index+lenExpr
%% /AnalyzeListOfE {
%%   { NextNonBlankChar pop AnalyzeExpr%%dup Strlen eq { exit } if NextNonBlankChar
%%     NextNonBlankChar dup 0 eq { pop exit } if
%%     dup 44 ne 1 index 124 ne and { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse } if
%%     pop NextNonBlankChar dup 0 eq { exit } if 124 ne { PROBLEMCONTACTBILLOU } if 1 add NextNonBlankChar 0 eq {toto} if } loop
%%   AnalyzeListOfEPostHook
%% } def
/AnalyzeListOfE {
  /NotFirst false def
  { NextNonBlankChar pop AnalyzeExpr
    NotFirst { EvalListOfExpr } { /NotFirst true def } ifelse
    dup Strlen eq { exit } if NextNonBlankChar
    dup 44 ne 1 index 124 ne and
    { dup 41 ne { PROBLEMCONTACTBILLOU } { pop exit } ifelse }
    if  pop 1 add } loop
  AnalyzeListOfEPostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% E->T|E+T
%% STR index -> STR index+lenExpr
/AnalyzeExpr {
  AnalyzePreHook AnalyzeTerm IsEndingExpr
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeTerm PreEvalHook EvalAddSub IsEndingExpr { pop exit } if } loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% T->FS|T*FS
%% STR index
/AnalyzeTerm {
  AnalyzePreHook AnalyzeSignedFactor IsEndingTerm
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor PreEvalHook EvalMulDiv IsEndingTerm { pop exit } if} loop }
  ifelse
  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% FS -> F | +FS | -FS
%% STR index
/AnalyzeSignedFactor {
  AnalyzePreHook 2 copy get dup IsUnaryOp
  { RollOp 1 add NextNonBlankChar pop AnalyzeSignedFactor EvalUnaryOp }
  { pop AnalyzeFactor }
  ifelse AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% F->P|F^P|P!
%% STR index
/AnalyzeFactor {
  AnalyzePreHook AnalyzePower IsEndingFactor
  { dup 0 ne { 32 eq { NextNonBlankChar } if } { pop } ifelse }
  { { dup 33 eq%% is there a ! DR 09/2011
      { pop 1 add NextNonBlankChar pop EvalFactorial }
      { RollOp 1 add NextNonBlankChar pop AnalyzePower PreEvalHook EvalPower }
      ifelse
      IsEndingFactor { pop exit } if } loop }
  ifelse  AnalyzePostHook
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% P->(E)|literal
%% STR index
/AnalyzePower {
  %% depending of first char either a number, or a literal
  2 copy get dup 40 eq%%an open par
  { pop 1 add NextNonBlankChar pop AnalyzeExpr 1 add NextNonBlankChar pop }
  { AnalyzeLiteral }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index STR[index] -> STR index
%/AnalyzeLiteral { IsNumber { EvalNumber } { EvalLiteral } ifelse } def
/AnalyzeLiteral { dup IsUnaryOp exch IsNumber or { EvalNumber } { EvalLiteral } ifelse } def%%dr 09102006
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% recognize + or -
%% chr -> T/F
/IsUnaryOp { dup 43 eq exch 45 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsNumber { dup 48 ge exch dup 57 le 3 -1 roll and exch 46 eq or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadNumber {
  exch dup 3 -1 roll dup 3 1 roll
  %%read mantissa
  { 1 add  2 copy dup Strlen eq { pop pop 0 exit } if get dup IsNumber not { exit } if pop } loop
  dup 101 eq exch 69 eq or
  %%% there is a "e" or "E" -> read exponant
  { 1 add 2 copy get dup IsUnaryOp
    { pop 1 add 2 copy get } if
    { IsNumber not { exit } if 1 add 2 copy get } loop }
  if
  dup 4 1 roll
  3 -1 roll exch 1 index sub getinterval
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a number can contain only : 0123456789.
%% chr -> T/F
/IsCondOp { dup 30 eq exch dup 60 ge exch 62 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index number
%% a number can be of the form [0-9]*.[0-9]*\([eE][+-]?[0-9]+\)?
%% STR index -> STR index' number
/ReadCondOp {
  NextNonBlankChar 1 index 4 1 roll
  { IsCondOp not { exit } if 1 add  2 copy get } loop
  2 copy 5 -1 roll
  exch 1 index sub getinterval 3 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can contain only : 0123456789.
%% chr -> T/F
/IsLiteral {%
  dup 48 ge exch dup  57 le 3 -1 roll and exch
  dup 65 ge exch dup  90 le 3 -1 roll and 3 -1 roll or exch
  dup 97 ge exch     122 le and or } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% a literal can be of the form [a-zA-Z][a-zA-Z0-9]*\(\((Expression)\)|\(\[Expression\]\)\)?
%% STR index -> literal STR index' nextchr
/ReadLiteral {
  exch dup 3 -1 roll dup 3 1 roll
  %%read literal core
  { 2 copy dup Strlen eq { pop pop 0 exit } if get dup IsLiteral not { exit } if pop 1 add } loop
  4 1 roll dup 5 1 roll 3 -1 roll exch 1 index sub getinterval 4 1 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a clpar
%% STR index -> STR index STR[index] T/F
/IsEndingExpr {%
  2 copy dup Strlen eq
  %% if end of str is reached -> end !
  { pop pop 0 true }
  %% ending chr -> clpar, comma, |, <, >, =, !,
  {get dup  dup  41 eq
       exch dup 124 eq
       exch dup  93 eq
       exch dup  44 eq
       exch dup  30 eq
       exch dup  60 ge exch 62 le and or or or or or}
  ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or a +-
%% STR index -> STR index STR[index] T/F
/IsEndingTerm { IsEndingExpr { true } { dup dup 43 eq exch 45 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or */
%% STR index -> STR index STR[index] T/F
/IsEndingFactor { IsEndingTerm { true } { dup dup 42 eq exch 47 eq or } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% expr is ended by end of str or ^
%% STR index -> STR index STR[index] T/F
/IsEndingPower { IsEndingFactor { true } { dup 94 eq } ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% STR index -> STR index STR[index]
/NextNonBlankChar { { dup Strlen eq { 0 exit } if 2 copy get dup neBlkChar { exit } if pop 1 add } loop } bind def
/neBlkChar { dup 32 ne exch dup 10 ne exch 9 ne and and } bind def
%%%%%%%%%%%%%%%%%%%%%%%%
%% DEBUG
/BRK {false} def
/BRKtrue {/BRK true def} def
/BRKStop {BRK {BRKtoto} if } def
/BRKEvalStop {BRK exch if } def
/BRKBRK2true {BRK {BRK2true} if } def
/BRK2 {false} def
/BRK2true {/BRK2 true def} def
/BRK2Stop {BRK2 {BRK2toto} if } def/BRK {false} def
end
%
%-------------------------------------------------------------------------------%
%
/tx@AlgToPs 12 dict def tx@AlgToPs begin
%
%% algExpr -> PSVector
/AlgToPs { tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE pop pop EndingSequence end } def
/EndingSequence { ExpressionVector aload length /end cvx exch 1 add array astore } def
/InitParser { /ExpressionVector [ /tx@AddMathFunc cvx /begin cvx ] def dup length /Strlen exch def 0 } def
/Strlen 0 def
/EvalListOfExpr {} def%
/EvalNumber {%
    ReadNumber  cvr /ExpressionVector ExpressionVector aload length dup 3 add -1 roll cvx
    exch 1 add array astore def NextNonBlankChar pop } def
/EvalAddSub {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  43 eq { /add } { /sub } ifelse cvx exch 1 add array astore def
} def
/EvalMulDiv {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  42 eq { /mul } { /div } ifelse cvx exch 1 add array astore def
} def
/EvalPower {%
  /ExpressionVector ExpressionVector aload length dup 5 add -1 roll
  pop /exp cvx exch 1 add array astore def
} def
/EvalFactorial {% DR 09/2011
  /ExpressionVector ExpressionVector aload length
  /fact cvx exch 1 add array astore def
} def
/EvalLiteral {%
  ReadLiteral
  dup 40 eq%%% there is an open par -> function call
  { pop 2 index
    dup (Sum) eq { EvalSum }
    { dup (IfTE) eq { EvalCond }
      { dup (Derive) eq { pop EvalDerive }
	{ pop 1 add NextNonBlankChar pop AnalyzeListOfE 2 index TrigoFunc
          /ExpressionVector ExpressionVector aload length dup 5 add -1 roll cvn cvx
	  exch 1 add array astore def 1 add NextNonBlankChar pop } ifelse } ifelse} ifelse }
  { /ExpressionVector ExpressionVector aload length dup 6 add -1 roll cvn cvx exch 1 add array astore def
    dup 91 eq%%% there is an open bracket -> vector element
    { pop 1 add NextNonBlankChar pop AnalyzeExpr
      /ExpressionVector ExpressionVector aload length /cvi cvx exch /get cvx exch 2 add array astore def 1 add }
    { pop NextNonBlankChar pop }
    ifelse}
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% the derive function : Derive(n,f(x))
%% firstparindex lastparindex ->
/EvalDerive {
  %% manage the function descripiton
  1 add ReadNumber 3 1 roll NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  1 add NextNonBlankChar pop
  3 -1 roll cvi
  dup 0 eq
  { pop AnalyzeExpr 3 -1 roll pop 1 add }
  { 1 sub 3 1 roll (x)  exch tx@Derive begin DeriveIndexed end 4 -1 roll
    { (x) tx@Derive begin Derive end } repeat
    ExpressionVector exch /ExpressionVector [] def
    AlgToPs aload length
    /ExpressionVector 1 index 3 add -1 roll aload length dup 3 add -1 roll  /l2 exch def /l1 exch def
    l1 l2 add 1 add l2 neg roll l1 l2 add array astore def 3 -1 roll pop 1 add
    1 index length /Strlen exch def } ifelse
} def
/EvalSum {%
  pop 1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber cvi 3 1 roll
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  /ExpressionVector ExpressionVector aload length dup 7 add -3 roll 0 4 1 roll
  5 -1 roll 4 add array astore def
  %% keep ExpressionVector for later and create a new one for internal Sum computation
  ExpressionVector 3 1 roll /ExpressionVector [ 6 -1 roll cvn /exch cvx /def cvx ] def
  1 add NextNonBlankChar pop AnalyzeExpr
  %% add each term
  /ExpressionVector ExpressionVector aload length 1 add /add cvx exch array astore def
  /ExpressionVector 4 -1 roll aload length ExpressionVector cvx /for cvx 3 -1 roll 2 add
  array astore def 3 -1 roll pop 1 add
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length 3.1415926 /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
/EvalCond {%
  pop 1 add AnalyzeCond NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  ExpressionVector 3 1 roll /ExpressionVector [] def
  1 add AnalyzeExpr ExpressionVector 3 1 roll /ExpressionVector [] def
  NextNonBlankChar 44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add AnalyzeExpr
  NextNonBlankChar 41 ne { ANALYZER_ERROR_missing_ending parenthesis_in_IfTE } if
  ExpressionVector
  /ExpressionVector 6 -1 roll aload length dup
  6 add -1 roll cvx exch dup 4 add -1 roll cvx /ifelse cvx 3 -1 roll 3 add array astore def
  1 add 3 -1 roll pop
} def
%% CondOp STR index
/EvalCondOp {%
  3 -1 roll
  dup (=) eq  { /eq } {%
  dup (<) eq  { /lt } {%
  dup (>) eq  { /gt } {%
  dup (>=) eq { /ge } {%
  dup (<=) eq { /ge } {%
  dup (!=) eq { /ne } { ERROR_non_valid_conditional_operator }
  ifelse } ifelse } ifelse } ifelse } ifelse } ifelse
  cvx exch pop
  /ExpressionVector ExpressionVector aload length dup 3 add -1 roll exch 1 add array astore def } def
/EvalUnaryOp {
  3 -1 roll 45 eq { /ExpressionVector ExpressionVector aload length /neg cvx exch 1 add array astore def } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook {} bind def
/PreEvalHook {} bind def
/AnalyzeListOfEPostHook {} bind def
/AnalyzePostHook {} def
/RollOp { 3 1 roll } bind def
end   %tx@CoreAnalyzerDict
%
%--------------------------------------------------------------------%
%
/tx@Derive 41 dict def tx@Derive begin
%%increase ^^ for each function added
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable -> PSVector
/Derive {%
  10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser AnalyzeListOfE end
} def
/Strlen 0 def
/InitParser { dup length /Strlen exch def 0 } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% algExpr variable index -> PSVector
/DeriveIndexed {%
  3 1 roll 10240 string 3 1 roll 0 3 1 roll
  /Variable exch def
  tx@CoreAnalyzerDict begin InitParser pop 4 -1 roll AnalyzeExpr 4 -2 roll pop pop 4 -2 roll exch pop end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u,v)'=-(u',v')
/EvalListOfExpr {%
  4 2 roll 2 copy 9 -1 roll dup length 4 1 roll putinterval add AddPipe
           2 copy 7 -1 roll dup length 4 1 roll putinterval add
  6 -2 roll pop pop
  2 copy pop 0 6 2 roll GetIntervalNewStr 5 1 roll 2 copy 0 exch getinterval 6 1 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (-u)'=-(u')
/EvalUnaryOp {
  4 -2 roll 4 index (0) eq
  { (0) StrConcat 7 -1 roll pop }
  { 7 -1 roll 45 eq
    { AddSub AddOpPar true } { false } ifelse
    3 1 roll 5 index StrConcat 3 -1 roll { AddClPar } if } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  7 -2 roll pop pop 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (number)'=0
/EvalNumber { ReadNumber (0) 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u+v)'=u'+v'
/EvalAddSub {%
  7 index dup (0) eq
  { pop true }%% du=0 nothing added
  { dup length exch 5 index 5 index 3 -1 roll putinterval 4 -1 roll add 3 1 roll false }
  ifelse
  5 index dup (0) eq
  { pop { (0) } { 4 -2 roll 2 copy pop 0  6 2 roll GetIntervalNewStr } ifelse }%%dv=0
  { exch
    { 5 -2 roll 7 index 45 eq { AddSub } if false } %%nothing yet added
    { 5 -2 roll 7 index 43 eq%%something yet added
      { AddAdd false } { AddSub AddOpPar true } ifelse }
    ifelse 11 1 roll
    3 -1 roll StrConcat 10 -1 roll { AddClPar } if
    2 copy pop 0 6 2 roll GetIntervalNewStr }
  ifelse
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)' or (u/v)'
/EvalMulDiv { 6 index 42 eq {EvalMul} {EvalDiv} ifelse } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u*v)'=u'*v+u*v'
/EvalMul {%
  4 -2 roll 7 index dup (0) eq
  { pop false }%%du=0
  { (1) eq%%du=1
    { false }
    { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
    3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if
    true }%%du!=0
  ifelse
  5 1 roll 5 index (0) eq
  { 5 -1 roll not { (0) StrConcat } if }%%dv=0
  { 5 -1 roll { AddAdd } if
    4 index (1) eq
    { 8 index StrConcat }
    { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
    ifelse
  }%%dv!=0
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u/v)'=(u'*v-u*v')/v^2
/EvalDiv {%
  4 -2 roll
  4 index (0) eq%%dv=0 -> u'/v
  { 7 index (0) eq { (0) StrConcat } { AddOpPar 7 index StrConcat AddClPar AddDiv 5 index StrConcat } ifelse }
  { 7 index dup (0) eq
    { pop }%%du=0
    { (1) eq%%du=1
      { false }
      { AddOpPar 7 index StrConcat AddClPar AddMul AddOpPar true } ifelse
      3 1 roll 6 index StrConcat 3 -1 roll { AddClPar } if}%%du!=0
    ifelse
      AddSub
      4 index (1) eq
      { 8 index StrConcat }
      { AddOpPar 8 index StrConcat AddClPar AddMul AddOpPar 4 index StrConcat AddClPar }
      ifelse
    %}%%dv!=0
    2 copy GetIntervalNewStr 3 1 roll pop 0 AddOpPar 3 -1 roll StrConcat AddClPar
    AddDiv AddOpPar 5 index StrConcat AddClPar 2 copy (^2) putinterval 2 add }
  ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str1 index str2 -> str1 index
/StrConcat { dup length 4 2 roll 2 copy 6 -1 roll putinterval 3 -1 roll add } bind def
/GetIntervalNewStr { 0 exch getinterval dup length string copy } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (u^v)'=(u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
/EvalPower {%
  4 -2 roll 7 index (0) eq
  {%%if du=0 then (u^v)'=v'ln(u)u^v
    4 index (0) eq
    { (0) StrConcat }%%if dv=0 then (u^v)'=0
    { 4 index (1) ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if
      8 index (e) ne { (ln\() StrConcat 8 index StrConcat (\)*) StrConcat } if
      AddOpPar 8 index StrConcat (\)^\() StrConcat 5 index StrConcat AddClPar } ifelse
  }
  {%%du!=0
    4 index (0) eq
    {%%if dv=0 then (u^v)'=vu'u^(v-1)
      5 index dup IsStrNumber
      { dup (0) eq
        { StrConcat }
        { dup dup (1) eq exch (1.0) eq or
          { StrConcat  }
	  { StrConcat
	    7 index dup (1) ne exch (1.0) ne and%%%dr 09102006 insert du if <> 1
	    { (*\() StrConcat 7 index StrConcat (\)) StrConcat } if%%%dr 09102006
            (*\() StrConcat 8 index StrConcat (\)) StrConcat
            5 index  dup dup (2) eq exch (2.0) eq or
	    { pop } { cvr 1 sub 20 string cvs 3 1 roll (^) StrConcat 3 -1 roll StrConcat } ifelse } ifelse } ifelse }
      { pop AddOpPar 5 index StrConcat (\)*\() StrConcat 8 index StrConcat (\)^\() StrConcat
        5 index StrConcat (-1\)) StrConcat } ifelse
    }
    {%%if dv!=0 and du!=0 then (u^v)'=u'vu^(v-1)+v'u^(v)ln(u)
      7 index (1) ne { AddOpPar 7 index StrConcat (\)*) StrConcat } if
      AddOpPar 5 index StrConcat (\)*\() StrConcat
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (-1\)+\() StrConcat
      4 index (1) ne { 4 index StrConcat (\)*\() StrConcat } if
      8 index StrConcat (\)^\() StrConcat
      5 index StrConcat (\)*ln\() StrConcat
      8 index StrConcat AddClPar
    } ifelse
  } ifelse
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for factorial ! only cst => null derivative
/EvalFactorial {% DR 09/2011
  4 index (0) eq
  { (0) mark 8 -2 roll  cleartomark 2 index 7 index dup 4 index exch sub getinterval exch 6 2 roll }
  { DERIVATIVE_ENGINE_ERROR_no_variable_in_factorial } ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% str -> true/false
/IsStrNumber {%
  true exch
  { dup 48 lt exch dup 57 gt 3 -1 roll or
    exch dup 46 ne%%.
    exch dup 43 ne%%+
    exch 45 ne%%-
    and and and { pop false } if } forall
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalLiteral {%
  ReadLiteral dup 40 eq%%% there is an open par -> function call
  { pop (EvalFunc_             ) 9 4 index StrConcat 0 exch getinterval cvn cvx exec }
  { dup 91 eq%%% there is an open bracket -> vector element
    { DERIVATIVE_ENGINE_ERROR_vector_not_yet_implemented }
    { pop EvalVariable }
    ifelse }
  ifelse
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% first last parpos Expr[first:parpos-1] ->
/EvalVariable { 2 index Variable eq { (1) } { (0) } ifelse 4 -1 roll exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% (f(u))'=u'f'(u)
/EvalFunc {
  4 2 roll 4 index (1) ne
  { AddOpPar 4 index StrConcat (\)*) StrConcat } if
  (Eval             ) 4 8 index StrConcat 0 exch getinterval cvn cvx exec
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Func derivative -> Eval<func>
/EvalFunc_sin {%
  PreCommonFunc
  { (cos\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_cos {%
  PreCommonFunc
  { (\(-sin\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_tan {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/cos\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_asin {%
  PreCommonFunc
  { (1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_acos {%
  PreCommonFunc
  { (-1/sqrt\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_atg {%
  PreCommonFunc
  { (1/\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_floor {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ln {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_exp {%
  PreCommonFunc
  {  (exp\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_EXP {%
  PreCommonFunc
  {  (EXP\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_sqrt {%
  PreCommonFunc
  { dup 0 eq { (1) StrConcat } { 1 sub } ifelse (/\(2*sqrt\() StrConcat 5 index StrConcat (\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Fact {%
  PreCommonFunc { DERIVATIVE_ENGINE_ERROR_no_variable_expression_in_Fact } if
  PostCommonFunc } def
/EvalFunc_sh {%
  PreCommonFunc
  { (ch\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_ch {%
  PreCommonFunc
  { (sh\() StrConcat 5 index StrConcat AddClPar } if
  PostCommonFunc } def
/EvalFunc_th {%
  PreCommonFunc
  {  dup 0 eq { (1) StrConcat } { 1 sub } ifelse  (/ch\() StrConcat 5 index StrConcat (\)^2) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argsh {%
  PreCommonFunc
  { (1/sqrt\(1+\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argch {%
  PreCommonFunc
  { (1/sqrt\(\() StrConcat 5 index StrConcat (\)^2-1\)\)) StrConcat } if
  PostCommonFunc } def
/EvalFunc_Argth {%
  PreCommonFunc
  { (1/\(1-\() StrConcat 5 index StrConcat (\)^2\)\)) StrConcat } if
  PostCommonFunc } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/PreCommonFunc {
  1 add NextNonBlankChar pop 3 -1 roll 5 1 roll AnalyzeExpr 1 add NextNonBlankChar pop
  4 2 roll 4 index (0) eq
  { (0) StrConcat false }
  { 4 index (1)  ne { AddOpPar 4 index StrConcat (\)*) StrConcat } if true } ifelse
} def
/PostCommonFunc {
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
/EvalFunc_Derive {%
  1 add ReadNumber cvi 1 add dup cvr log 1 add cvi string cvs
  4 -1 roll pop 5 1 roll 1 add NextNonBlankChar pop AnalyzeExpr 1 add
  4 -2 roll (Derive\() StrConcat 7 -1 roll StrConcat (,) StrConcat 6 -1 roll StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr 6 -1 roll pop 2 index 6 index dup 4 index exch sub getinterval
  exch 6 2 roll } def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_Sum {%
  1 add NextNonBlankChar pop
  %% read the variable name
  ReadLiteral pop 3 -1 roll pop NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_Sum } if
  %% read the initial value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_second_comma_in_Sum } if
  %% read the increment value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_third_comma_in_Sum } if
  %% read the limit value
  1 add NextNonBlankChar pop ReadNumber pop
  2 copy get 44 ne { ANALYZER_ERROR_missing_fourth_comma_in_Sum } if
  1 add NextNonBlankChar pop dup 6 1 roll 3 -1 roll pop AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 8 index dup 9 index exch sub getinterval StrConcat
  4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 9 -3 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% literal switch -> func call, vector, variables
/EvalFunc_IfTE {%
  3 -1 roll pop 1 add NextNonBlankChar pop SkipCond
  NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_first_comma_in_IfTE } if
  1 add NextNonBlankChar pop dup 5 1 roll
  AnalyzeExpr NextNonBlankChar
  44 ne { ANALYZER_ERROR_missing_second_comma_in_IfTE } if
  1 add NextNonBlankChar pop
  AnalyzeExpr 1 add NextNonBlankChar pop
  4 -2 roll 3 index 10 index dup 11 index exch sub getinterval StrConcat
  6 index StrConcat (,) StrConcat 4 index StrConcat AddClPar
  2 copy pop 0 6 2 roll GetIntervalNewStr
  mark 11 -5 roll cleartomark 2 index 6 index dup 4 index exch sub getinterval exch 6 2 roll
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% advance in str until a comma is found (no error detection!)
%% str index -> str index'
/SkipCond { { 1 add 2 copy get 44 eq {exit } if } loop } bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Convert to radians if trigo function call
%% (name) ->
/TrigoFunc {
  dup (cos) eq 1 index (sin) eq or exch (tan) eq or
  { /ExpressionVector ExpressionVector aload length Pi /div cvx 180 /mul cvx 5 -1 roll 4 add
    array astore def
  } if
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% No derivative for condition....
/EvalCondOp { 3 -1 roll pop } bind def
/PutIntervalOneAdd {putinterval 1 add} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddOpPar {2 copy (\() PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add close parenthesis in string at the given index
%% str index -> str index+1
/AddClPar {2 copy (\)) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add 0 in string at the given index
%% str index -> str index+1
/AddZero {2 copy (0) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddMul {2 copy (*) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add open parenthesis in string at the given index
%% str index -> str index+1
/AddDiv {2 copy (/) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a plus sign in string at the given index
%% str index -> str index+1
/AddAdd {2 copy (+) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a minus sign in string at the given index
%% str index -> str index+1
/AddSub {2 copy (-) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% Add a pipe sign in string at the given index
%% str index -> str index+1
/AddPipe {2 copy (|) PutIntervalOneAdd} bind def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% H O O K S
/AnalyzePreHook { dup 5 1 roll } bind def
/PreEvalHook {} def
/AnalyzePostHook { 7 -1 roll pop } bind def
/AnalyzeListOfEPostHook { 6 -1 roll mark 6 1 roll cleartomark } bind def
/RollOp { 5 1 roll } bind def
end%%%tx@CoreAnalyzerDict
/tx@AddMathFunc 12 dict def tx@AddMathFunc begin
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% NEW FUNC
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% function arcsine in radians asin(x)=atan(x/sqrt(1-x^2))
%% x -> theta
/asin {%
  dup abs 1 gt { EQDFasinrangeerror  } if
  dup dup dup mul 1 exch sub sqrt atan exch 0 lt { 360 sub } if DegtoRad
} def
%% function arccosine in radians acos(x)=atan(sqrt(1-x^2)/x)
%% x -> theta
/acos {%
  dup abs 1 gt { EQDFacosrangeerror  } if
  dup dup mul 1 exch sub sqrt exch atan DegtoRad
} def
%% function arctangent in radians
%% x -> theta
/atg { 1 atan dup 90 gt { 360 sub } if DegtoRad } bind def
%% HYPERBOLIC FUNCTIONS
/sh { dup Ex exch neg Ex sub 2 div } def
/ch { dup Ex exch neg Ex add 2 div } def
/th { dup sh exch ch div } def
/Argsh { dup dup mul 1 add sqrt add ln } def
/Argch { dup dup mul 1 sub sqrt add ln } def
/Argth { dup 1 add exch 1 exch sub div ln 2 div } def
%% modified exponential funtion for 0
%% x n -> x^n
/Exp { dup 0 eq { pop pop 1 } { exp } ifelse } bind def
%% modified exponential funtion for 0
%% x -> e^x
/Ex { Euler exch exp } bind def
%%
%% factorial function
%% n -> n!
/Fact { 1 exch 2 exch 1 exch { mul } for } bind def
/fact { Fact } bind def
/! { Fact } bind def
end
%
% END pst-algparser.pro

%%EndProcSet
%%BeginProcSet: pst-tools.pro 0 0
% $Id: pst-tools.pro 842 2013-10-26 10:25:41Z herbert $
%
%% PostScript tools prologue for pstricks.tex.
%% Version 0.04, 2013/10/26
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%
/Pi2 1.57079632679489661925640 def
/factorial { % n on stack, returns n! 
  dup 0 eq { 1 }{ 
    dup 1 gt { dup 1 sub factorial mul } if }
  ifelse } def 
%
/MoverN { % m n on stack, returns the binomial coefficient m over n
  2 dict begin
  /n exch def /m exch def
  n 0 eq { 1 }{
    m n eq { 1 }{
      m factorial n factorial m n sub factorial mul div } ifelse } ifelse 
  end
} def
%
/ps@ReverseOrderOfPoints { % on stack [P1 P2 P3 ...Pn]=>[Pn,Pn-1,...,P2,P1]
  5 dict begin       % all local
  aload length /n ED % number of coors
  n 2 div cvi /m ED  % number of Points
  /n1 n def
  m { n1 2 roll /n1 n1 2 sub def } repeat
  n array astore
  end
} def
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% subroutines for complex numbers, given as an array [a b] 
% which is a+bi = Real+i Imag
%
/cxadd {		% [a1 b1] [a2 b2] = [a1+a2 b1+b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  3 -1 roll		% [a2 b2] a2 [a1 b1]
  dup 0 get		% [a2 b2] a2 [a1 b1] a1
  3 -1 roll		% [a2 b2] [a1 b1] a1 a2
  add			% [a2 b2] [a1 b1] a1+a2
  3 1 roll		% a1+a2 [a2 b2] [a1 b1]
  1 get			% a1+a2 [a2 b2] b1
  exch 1 get		% a1+a2 b1 b2
  add 2 array astore
} def
%
/cxneg {		% [a b]
  dup 1 get		% [a b] b
  exch 0 get		% b a
  neg exch neg		% -a -b
  2 array astore
} def
%
/cxsub { cxneg cxadd } def  % same as negative addition
%
% [a1 b1][a2 b2] = [a1a2-b1b2 a1b2+b1a2] = [a3 b3]
/cxmul {		% [a1 b1] [a2 b2]
  dup 0 get		% [a1 b1] [a2 b2] a2
  exch 1 get		% [a1 b1] a2 b2
  3 -1 roll		% a2 b2 [a1 b1]
  dup 0 get		% a2 b2 [a1 b1] a1
  exch 1 get		% a2 b2 a1 b1
  dup			% a2 b2 a1 b1 b1
  5 -1 roll dup		% b2 a1 b1 b1 a2 a2
  3 1 roll mul		% b2 a1 b1 a2 b1a2
  5 -2 roll dup		% b1 a2 b1a2 b2 a1 a1
  3 -1 roll dup		% b1 a2 b1a2 a1 a1 b2 b2
  3 1 roll mul		% b1 a2 b1a2 a1 b2 a1b2
  4 -1 roll add		% b1 a2 a1 b2 b3
  4 2 roll mul		% b1 b2 b3 a1a2
  4 2 roll mul sub	% b3 a3
  exch 2 array astore
} def
%
% [a b]^2 = [a^2-b^2 2ab] = [a2 b2]
/cxsqr {		% [a b]   square root
  dup 0 get exch 1 get	% a b
  dup dup mul		% a b b^2
  3 -1 roll		% b b^2 a
  dup dup mul 		% b b^2 a a^2
  3 -1 roll sub		% b a a2
  3 1 roll mul 2 mul	% a2 b2	
  2 array astore
} def
%
/cxsqrt {		% [a b]
%  dup cxnorm sqrt /r exch def
%  cxarg 2 div RadtoDeg dup cos r mul exch sin r mul cxmake2 
  cxlog 		% log[a b]
  2 cxrdiv 		% log[a b]/2
  aload pop exch	% b a
  2.781 exch exp	% b exp(a)
  exch cxconv exch	% [Re +iIm] exp(a)
  cxrmul		%
} def
%
/cxarg { 		% [a b] 
  aload pop 		% a b
  exch atan 		% arctan b/a
  DegtoRad 		% arg(z)=atan(b/a)
} def
%
% log[a b] = [a^2-b^2 2ab] = [a2 b2]
/cxlog {		% [a b]
  dup 			% [a b][a b]
  cxnorm 		% [a b] |z|
  log 			% [a b] log|z|
  exch 			% log|z|[a b]
  cxarg 		% log|z| Theta
  cxmake2 		% [log|z| Theta]
} def
%
% square of magnitude of complex number
/cxnorm2 {		% [a b]
  dup 0 get exch 1 get	% a b
  dup mul			% a b^2
  exch dup mul add	% a^2+b^2
} def
%
/cxnorm {		% [a b]
  cxnorm2 sqrt
} def
%
/cxconj {		% conjugent complex
  dup 0 get exch 1 get	% a b
  neg 2 array astore	% [a -b]
} def
%
/cxre { 0 get } def	% real value
/cxim { 1 get } def	% imag value
%
% 1/[a b] = ([a -b]/(a^2+b^2)
/cxrecip {		% [a b]
  dup cxnorm2 exch	% n2 [a b]
  dup 0 get exch 1 get	% n2 a b
  3 -1 roll		% a b n2
  dup			% a b n2 n2
  4 -1 roll exch div	% b n2 a/n2
  3 1 roll div		% a/n2 b/n2
  neg 2 array astore
} def
%
/cxmake1 { 0 2 array astore } def % make a complex number, real given
/cxmake2 { 2 array astore } def	  % dito, both given
%
/cxdiv { cxrecip cxmul } def
%
% multiplikation by a real number
/cxrmul {		% [a b] r
  exch aload pop	% r a b
  3 -1 roll dup		% a b r r
  3 1 roll mul		% a r b*r
  3 1 roll mul		% b*r a*r
  exch 2 array astore   % [a*r b*r]
} def
%
% division by a real number
/cxrdiv {		% [a b] r
  1 exch div		% [a b] 1/r
  cxrmul
} def
%
% exp(i theta) = cos(theta)+i sin(theta) polar<->cartesian
/cxconv {		% theta
  RadtoDeg dup sin exch cos cxmake2
} def

%%%%% ### bubblesort ###
%% syntax : array bubblesort --> array2 trie par ordre croissant
%% code de Bill Casselman
%% http://www.math.ubc.ca/people/faculty/cass/graphics/text/www/
/bubblesort { % on stack must be an array [ ... ]
4 dict begin
   /a exch def
   /n a length 1 sub def
   n 0 gt {
      % at this point only the n+1 items in the bottom of a remain to
      % the sorted largest item in that blocks is to be moved up into
      % position n
      n {
         0 1 n 1 sub {
            /i exch def
            a i get a i 1 add get gt {
               % if a[i] > a[i+1] swap a[i] and a[i+1]
               a i 1 add
               a i get
               a i a i 1 add get
               % set new a[i] = old a[i+1]
               put
               % set new a[i+1] = old a[i]
               put
            } if
         } for
         /n n 1 sub def
      } repeat
   } if
   a % return the sorted array
end
} def
%
/concatstringarray{  %  [(a) (b) ... (z)] --> (ab...z)  20100422
  0 1 index { length add } forall 
  string     
  0 3 2 roll      
  { 3 copy putinterval length add }forall 
  pop  
} bind def
%
/dot2comma {% on stack a string (...) 
  2 dict begin
  /Output exch def
  0 1 Output length 1 sub { 
    /Index exch def 
    Output Index get 46 eq { Output Index 44 put } if 
  } for
  Output
  end
} def
%
/rightTrim { % on stack the string and the character number to be stripped  
  /charNo exch def
  dup
  length 1 sub -1 0 { 
    /i exch def dup i get charNo ne { exit } if 
  } for
  0 i 1 add getinterval
  dup length string copy
} bind def  % leaves the stripped string on the stack

/psStringwidth /stringwidth load def
/psShow /show load def

%/stringwidth{ 32 rightTrim psStringwidth } bind def

%/show { 32 rightTrim psShow } bind def
%-----------------------------------------------------------------------------%

/pgffunctions {
    /pgfsc{}bind def% stroke color is empty by default
    /pgffc{}bind def% fill color is empty by default
    /pgfstr{stroke}bind def%
    /pgffill{fill}bind def%
    /pgfeofill{eofill}bind def%
    /pgfe{a dup 0 rlineto exch 0 exch rlineto neg 0 rlineto closepath}bind def% rectangle
    /pgfw{setlinewidth}bind def% setlinewidth
    /pgfs{save pgfpd 72 Resolution div 72 VResolution div neg scale 
      magscale{1 DVImag div dup scale}if 
      pgfx neg pgfy neg translate pgffoa .setopacityalpha}bind def% save
    /pgfr{pgfsd restore}bind def %restore
    userdict begin%
    /pgfo{pgfsd /pgfx currentpoint /pgfy exch def def @beginspecial}bind def %open
    /pgfc{newpath @endspecial pgfpd}bind def %close
    /pgfsd{globaldict /pgfdelta /delta where {pop delta} {0} ifelse put}bind def% save delta
    /pgfpd{/delta globaldict /pgfdelta get def}bind def % put delta
    /.setopacityalpha where {pop} {/.setopacityalpha{pop}def} ifelse % install .setopacityalpha 
    /.pgfsetfillopacityalpha{/pgffoa exch def
      /pgffill{gsave pgffoa .setopacityalpha fill 1 .setopacityalpha newpath fill grestore newpath}bind def
      /pgfeofill{gsave pgffoa .setopacityalpha eofill 1 .setopacityalpha newpath eofill grestore newpath}bind def}bind def
    /.pgfsetstrokeopacityalpha{/pgfsoa exch def /pgfstr{gsave pgfsoa .setopacityalpha stroke grestore newpath}bind def}bind def
    /pgffoa 1 def
    /pgfsoa 1 def
    end
} def
%-----------------------------------------------------------------------------%
% END pst-tools.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
% $Id: pst-dots.pro 801 2013-07-09 18:10:41Z herbert $
%
%% PostScript prologue for pstricks.tex.
%% Version 2.02,  2009/06/16
%%
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%% Modified by Herbert Voss (hv) - 2008/04/17 
%
10 dict dup begin			% hold local
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
%  /FontBBox [-571.5 -742.5 571.5 742.5] def % changed to next line 20060616 hv
  /FontBBox [-1000 -1000 1000 1000] def  % See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch /.notdef put} for % fill the array with /.notdef
  Encoding				   % replace with given dot names
    dup (b) 0 get /Bullet put		   % get the numerical position of b in ASCII
%					   % and save /Bullet at this place in Encoding 
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put	% 67
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (f) 0 get /Octogon put		% 2008-04-18 hv
    dup (F) 0 get /BoldOctogon put	% 2008-04-18 hv
    dup (g) 0 get /SolidOctogon put	% 2008-04-18 hv
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put 		% 65
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
CharProcs begin
  /CirclePath {0 0 500 0 360 arc closepath} def
  /Bullet {CirclePath fill} def
  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
  /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto closepath} def
  /SolidTriangle {TrianglePath fill} def
  /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
  /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
  /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto closepath} def
  /SolidSquare {SquarePath fill} def
  /Square {SquarePath .89 .89 scale SquarePath eofill} def
  /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
  /PentagonPath {
    -337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
    0 574.7 lineto -546.6 177.6 lineto closepath
  } def
  /SolidPentagon {PentagonPath fill} def
  /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
  /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
  /HexagonPath {
    0 550 moveto -476 275 lineto -476 -275 lineto
    0 -550 lineto 476 -275 lineto 476 275 lineto closepath
  } def
  /SolidHexagon {HexagonPath fill} def
  /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
  /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
%					2008-04-18 hv
  /OctogonPath { 
     550 dup 22.5 tan mul dup neg dup add /xMove exch def 
     exch moveto 7 { xMove 0 rlineto 45 rotate } repeat closepath } def 
  /SolidOctogon { OctogonPath fill                             } def
  /Octogon {      OctogonPath .89 .89 scale OctogonPath eofill } def
  /BoldOctogon {  OctogonPath .79 .79 scale OctogonPath eofill } def
%
  /AsteriskPath {
    20 0 moveto 10 250 180 500 0 500 curveto
    -180 500 -10 250 -20 0 curveto closepath
  } def
  /Asterisk {
    AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath fill
  } def
%
  /Basterp {50 250 220 500 0 500 curveto -220 500 -50 250 -50 30 cos 100 mul curveto} def
  /BoldAsteriskPath {
    50 30 cos 100 mul moveto  Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp 60 rotate Basterp
    60 rotate Basterp closepath
  } def
  /BoldAsterisk {BoldAsteriskPath fill} def
  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
  /CrossPath {
    40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
    -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
    40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath
  } def
  /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
    -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
    80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath
  } def
  /Add {CrossPath fill} def
  /Mul {45 rotate CrossPath fill} def
  /BoldAdd {BoldCrossPath fill} def
  /BoldMul {45 rotate BoldCrossPath fill} def
  /Oplus {CirclePath .9 .9 scale CirclePath eofill .775 .775 scale CrossPath fill } def 
  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
  /BOplus {CirclePath .8 .8 scale CirclePath eofill .775 .775 scale BoldCrossPath fill} def 
  /Otimes {CirclePath .9 .9 scale CirclePath eofill 45 rotate .775 .775 scale CrossPath fill} def 
  /BOtimes {CirclePath .8 .8 scale CirclePath eofill 45 rotate .775 .775 scale BoldCrossPath fill } def 
  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
  /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto closepath} def
  /Bar {BarPath fill} def
  /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto closepath} def
  /BoldBar {BoldBarPath fill} def
  /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 428.5 0 lineto closepath} def
  /SolidDiamond {DiamondPath fill} def
  /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
  /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
  /.notdef { } def
end
%
/BuildGlyph {
  exch
  begin 		
%  Metrics 1 index get exec 0
    0 0
%      BBoxes 3 index get exec
    -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
    setcachedevice
    CharProcs begin load exec end
  end
} def
%
/BuildChar {
  1 index /Encoding get exch get
  1 index /BuildGlyph get exec
} bind def
%
end
/PSTricksDotFont exch definefont pop
%
%% end

%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
% $Id: pst-node.pro 876 2014-01-28 15:03:13Z herbert $
%%
%% PostScript prologue for pst-node.tex.
%% Version 1.15, 2014/01/27.
%%
%% This program can be redistributed and/or modified under the terms
%% of the LaTeX Project Public License Distributed from CTAN archives
%% in directory macros/latex/base/lppl.txt.
%
%%%%  EMPTY lines are not aload!!! Problem with pst-eps -> \par
%
%
tx@Dict begin 			% from main pstricks dict
 /T /translate load def 
 /CP /currentpoint load def 
% /startGlobal { true setglobal globaldict begin } bind def
% /endGlobal { end false setglobal } bind def
end
/tx@NodeDict 400 dict def tx@NodeDict begin
/NewNode { % on stack: { x y } boolean N@name type InitXnode 
  gsave 
  NodeScale                     % a bugfix for xelatex, it's empty for dvips
  /next exch def 		% { x y } boolean N@name type  
  dict dup 			% { x y } boolean N@name dict dict
  3 1 roll def 			% { x y } boolean dict N@name dict def
  exch { dup 3 1 roll def } if  % { x y } dict boolean
  begin 			% { x y } dict begin
  tx@Dict begin 
    STV CP T exec 		% set scaling
  end 
  /NodeMtrx CM def 		% save CM
  next 				% InitXNode
  end
  grestore 
} def
%
/InitPnode { 
  /Y ED /X ED 
  /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
%
/InitCnode { 
  /r ED /Y ED /X ED 
  /NodePos { NodeSep r add dup Cos mul exch Sin mul } def 
} def
%
/GetRnodePos { 
  Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def } ifelse 
  Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def } ifelse 
  dx Sin mul abs dy 
  Cos mul abs gt { dy Cos mul Sin div dy } { dx dup Sin mul Cos Div } ifelse 
} def
%
/InitRnode { 
  /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub /u ED 
  /NodePos { GetRnodePos } def 
} def
%
/DiaNodePos { 
  w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
  Cos mul exch Sin mul 
} def
%
/TriNodePos { 
  Sin s lt 
    { d NodeSep sub dup Cos mul Sin Div exch } 
    { w h mul w Sin mul h Cos abs mul add Div 
      NodeSep add dup Cos mul exch Sin mul 
    } ifelse 
} def
%
/InitTriNode { 
  sub 2 div exch 
  2 div exch 
  2 copy T 
  2 copy 4 index index /d ED 
  pop pop pop pop 
  -90 mul rotate 
  /NodeMtrx CM def 
  /X 0 def /Y 0 def 
  d sub abs neg /d ED 
  d add /h ED 
  2 div h mul h d sub Div /w ED 
  /s d w Atan sin def 
  /NodePos { TriNodePos } def 
} def
%
/OvalNodePos { 
  /ww w NodeSep add def 
  /hh h NodeSep add def 
  Sin ww mul Cos hh mul Atan dup cos ww mul exch sin hh mul 
} def
%
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
%
/XYPos { 
  dup sin exch cos Do 
  /Cos ED /Sin ED /Dist ED 
  Cos 0 gt 
    { Dist Dist Sin mul Cos div }
    { Cos 0 lt 
      { Dist neg Dist Sin mul Cos div neg }
      { 0 Dist Sin mul } ifelse 
    } ifelse 
  Do 
} def
%
/GetEdge {
  dup 0 eq 
    { pop begin 1 0 NodeMtrx dtransform 
      CM idtransform 
      exch atan sub 
      dup 
      sin /Sin ED 
      cos /Cos ED 
      /NodeSep ED 
      NodePos NodeMtrx dtransform CM idtransform end }
    { 1 eq {{exch}} {{}} ifelse /Do ED pop XYPos } ifelse 
} def
%
/AddOffset { 
  1 index 0 eq 
    { pop pop } 
    { 2 copy 5 2 roll cos mul add 4 1 roll sin mul sub exch } ifelse 
} def
%
/GetEdgeA { 
  NodeSepA AngleA NodeA NodeSepTypeA GetEdge 
  OffsetA AngleA AddOffset 
  yA add /yA1 ED 
  xA add /xA1 ED 
} def
%
/GetEdgeB { 
  NodeSepB AngleB NodeB NodeSepTypeB GetEdge 
  OffsetB AngleB AddOffset 
  yB add /yB1 ED 
  xB add /xB1 ED 
} def
%
/GetArmA { 
  ArmTypeA 0 eq 
    { /xA2 ArmA AngleA cos mul xA1 add def 
      /yA2 ArmA AngleA sin mul yA1 add def } 
    { ArmTypeA 1 eq {{exch}} {{}} ifelse 
      /Do ED 
      ArmA AngleA XYPos OffsetA AngleA AddOffset 
      yA add /yA2 ED 
      xA add /xA2 ED } ifelse 
} def
%
/GetArmB { 
  ArmTypeB 0 eq 
    { /xB2 ArmB AngleB cos mul xB1 add def 
      /yB2 ArmB AngleB sin mul yB1 add def } 
    { ArmTypeB 1 eq {{exch}} {{}} ifelse 
      /Do ED
      ArmB AngleB XYPos OffsetB AngleB AddOffset 
      yB add /yB2 ED 
      xB add /xB2 ED } ifelse 
} def
%
/InitNC { 
  /b ED /a ED % second and first node
  /NodeSepTypeB ED /NodeSepTypeA ED 
  /NodeSepB ED /NodeSepA ED 
  /OffsetB ED /OffsetA ED 
  tx@NodeDict a known tx@NodeDict b known and dup { 
    /NodeA a load def 
    /NodeB b load def 
    NodeA GetCenter /yA ED /xA ED 
    NodeB GetCenter /yB ED /xB ED } if 
} def
%
/LPutLine { 
  4 copy 
  3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 
  1 t sub mul 
  3 1 roll 1 t sub mul 
  4 1 roll t mul add /Y ED 
  t mul add /X ED 
} def
%
/LPutLines { 
  mark LPutVar counttomark 2 div 1 sub /n ED 
%  t floor dup n gt 
  t floor dup n ge 		% to allow npos<= hv 2008-08-14
  { pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse 
  cvi 2 mul { pop } repeat 
  LPutLine 
  cleartomark 
} def
%
/BezierMidpoint { 
  /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED /t ED 
  /cx x1 x0 sub 3 mul def 
  /cy y1 y0 sub 3 mul def 
  /bx x2 x1 sub 3 mul cx sub def 
  /by y2 y1 sub 3 mul cy sub def 
  /ax x3 x0 sub cx sub bx sub def 
  /ay y3 y0 sub cy sub by sub def 
  ax t 3 exp mul bx t t mul mul add 
  cx t mul add x0 add ay t 3 exp mul 
  by t t mul mul add cy t mul add
  y0 add 3 ay t t mul mul mul 2 
  by t mul mul add cy add 3 ax t t mul mul mul 
  2 bx t mul mul add cx add atan /NAngle ED 
  /Y ED /X ED 
} def
%
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
%
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
           /NAngle yyB yyA sub xxB xxA sub Atan def 
} def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
%
/HPutLines { HPosBegin yB yA ge 
  { /check { le } def } { /check { ge } def } ifelse 
  /xxA xA def 
  /yyA yA def 
  mark xB yB LPutVar 
    { dup Y check { exit } { /yyA ED /xxA ED } ifelse } 
  loop 
  /yyB ED /xxB ED cleartomark HPosEnd 
} def
%
/VPosBegin { 
  xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
%
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def 
} def
%
/NCCoor { 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def
  GetEdgeA GetEdgeB 
  /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def 
  /LPutPos { LPutVar LPutLine } def 
  /HPutPos { LPutVar HPutLine } def 
  /VPutPos { LPutVar VPutLine } def 
  LPutVar 
} def
%
/NCLine { 
  NCCoor 
  tx@Dict begin 
  ArrowA CP 4 2 roll 
  ArrowB 
  lineto pop pop
  end 
} def
%
/NCLines { 
  false NArray 
  n 0 eq 
    { NCLine } 
    { 2 copy yA sub exch xA sub Atan /AngleA ED 
      n 2 mul dup index exch index yB sub exch xB sub 
      Atan /AngleB ED 
      GetEdgeA GetEdgeB 
      /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1 yA1 ] cvx def 
      mark LPutVar 
      tx@Dict begin false Line end 
      /LPutPos { LPutLines } def 
      /HPutPos { HPutLines } def 
      /VPutPos { VPutLines } def 
    } ifelse 
} def
%
/NCCurve { 
  GetEdgeA 
  GetEdgeB 
  xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
%
/NCAngles { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform pop 
  xB2 yB2 mtrx transform exch pop 
  mtrx itransform 
  /y0 ED /x0 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def } def
%
/NCAngle { 
  GetEdgeA GetEdgeB GetArmB 
  /mtrx AngleA matrix rotate def 
  xB2 yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
  /y0 ED /x0 ED 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 x0 y0 xA1 yA1
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCBar { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def
  xA2 yA2 mtrx itransform pop 
  xB2 yB2 mtrx itransform pop 
  sub dup 0 mtrx transform 
  3 -1 roll 0 gt 
    { /yB2 exch yB2 add def /xB2 exch xB2 add def }
    { /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse 
  mark 
  ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
/NCDiag { 
  /lineAngle ED
  GetEdgeA GetEdgeB GetArmA GetArmB mark
  lineAngle abs 0 gt {
    /xTemp xA2 10 add def
    /yTemp yA2 lineAngle dup sin exch cos div 10 mul add def
    /dY1 yTemp yA2 sub def
    /dX1 xTemp xA2 sub def
    /dY2 yB2 yB1 sub def
    /dX2 xB2 xB1 sub def
    dX1 abs 0.01 lt {
      /m2 dY2 dX2 div def
      /xB2 xA2 def
      /yB2 xA2 xB1 sub m2 mul yB1 add def
    }{
      dX2 abs 0.01 lt {
        /m1 dY1 dX1 div def
        /xB2 xB1 def
        /yB2 xB1 xA2 sub m1 mul yA2 add def
      }{%
        /m1 dY1 dX1 div def
        /m2 dY2 dX2 div def
        /xB2 m1 xA2 mul m2 xB1 mul sub yA2 sub yB1 add m1 m2 sub div def
        /yB2 xB2 xA2 sub m1 mul yA2 add def
      } ifelse
    } ifelse
  } if
  ArmB 0 ne { xB1 yB1 } if
  xB2 yB2 xA2 yA2 
  ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
%
%  GetEdgeA GetEdgeB GetArmA GetArmB mark 
%  ArmB 0 ne { xB1 yB1 } if
%  xB2 yB2 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end
%  /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCDiagg { 
  /lineAngle ED
  GetEdgeA GetArmA 
  lineAngle abs 0 gt 
    { lineAngle }
    { yB yA2 sub xB xA2 sub Atan 180 add } ifelse 
  /AngleB ED
  GetEdgeB mark
  lineAngle abs 0 gt {
    /dY2 yA2 yA1 sub def
    /dX2 xA2 xA1 sub def
    lineAngle abs 90 eq {
      /m2 dY2 dX2 div def
      /yA2 xB xA2 sub m2 mul yA2 add def
      /xA2 xB def
    }{
      /m1 lineAngle dup sin exch cos div def % tan alpha
      dX2 abs 0.01 lt {
        /yA2 xA1 xB sub m1 mul yB add def
        /xA2 xA1 def
      }{%
        /m2 dY2 dX2 div def
        /xA2 m1 xB mul m2 xA2 mul sub yA2 add yB sub m1 m2 sub div def
        /yA2 xA2 xB sub m1 mul yB add def
      } ifelse
    } ifelse
  } if
  xB1 yB1 xA2 yA2
  ArmA 0 ne { xA1 yA1 } if
  tx@Dict begin false Line end
  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def
  /LPutPos { LPutLines } def
  /HPutPos { HPutLines } def
  /VPutPos { VPutLines } def
%
%  GetEdgeA GetArmA 
%  yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
%  GetEdgeB 
%  mark 
%  xB1 yB1 xA2 yA2 
%  ArmA 0 ne { xA1 yA1 } if 
%  tx@Dict begin false Line end 
%  /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def 
%  /LPutPos { LPutLines } def 
%  /HPutPos { HPutLines } def 
%  /VPutPos { VPutLines } def 
} def
%
/NCLoop { 
  GetEdgeA GetEdgeB GetArmA GetArmB 
  /mtrx AngleA matrix rotate def 
  xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED 
  /xB3 xB2 yB2 mtrx transform pop def 
  xB3 yA3 mtrx itransform /yB3 ED /xB3 ED 
  xA3 yA3 mtrx itransform /yA3 ED /xA3 ED 
  mark ArmB 0 ne { xB1 yB1 } if 
  xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if 
  tx@Dict begin false Line end 
  /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { HPutLines } def 
  /VPutPos { VPutLines } def 
} def
%
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
%
/NCCircle { 
  NodeSepA 0 NodeA 0 GetEdge pop 
  2 div dup 2 exp r r mul sub abs sqrt 
  atan 2 mul /a ED 
  r AngleA 90 add PtoC yA add exch xA add 
  exch 2 copy 
  /LPutVar [ 4 2 roll r AngleA ] cvx def 
  /LPutPos { 
    LPutVar t 360 mul add dup 5 1 roll 90 sub PtoC 
    3 -1 roll add 
    /Y ED add /X ED /NAngle ED
% DG/SR modification end
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
  r AngleA 90 sub a add AngleA 270 add a sub 
  tx@Dict begin 
  /angleB ED /angleA ED /r ED 
  /c 57.2957 r Div def 
  /y ED /x ED 
} def
%
/NCBox { 
  /d ED /h ED 
  /AngleB yB yA sub xB xA sub Atan def 
  /AngleA AngleB 180 add def 
  GetEdgeA GetEdgeB 
  /dx d AngleB sin mul def 
  /dy d AngleB cos mul neg def 
  /hx h AngleB sin mul neg def 
  /hy h AngleB cos mul def 
  /LPutVar [ 
    xA1 hx add yA1 hy add xB1 hx add yB1 hy add 
    xB1 dx add yB1 dy add xA1 dx add yA1 dy add ] cvx def 
  /LPutPos { LPutLines } def 
  /HPutPos { xB yB xA yA LPutLine } def 
  /VPutPos { HPutPos } def 
  mark 
  LPutVar tx@Dict begin false Polygon end 
} def
%
/NCArcBox { 
  /l ED neg /d ED /h ED /a ED 
  /AngleA yB yA sub xB xA sub Atan def 
  /AngleB AngleA 180 add def 
  /tA AngleA a sub 90 add def 
  /tB tA a 2 mul add def 
  /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
  /x0 xA r tA cos mul add def 
  /y0 yA r tA sin mul add def 
  /c 57.2958 r div def 
  /AngleA AngleA a sub 180 add def 
  /AngleB AngleB a add 180 add def
  GetEdgeA GetEdgeB 
  /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul sub def 
  /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def 
  l 0 eq { 
    x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn 
  }{ 
    x0 y0 translate 
    /tA AngleA l c mul add def 
    /tB AngleB l c mul sub def
    0 0 r h add tA tB arc r h add 
    AngleB PtoC r d add 
    AngleB PtoC 2 copy 
    6 2 roll l arcto 4 { pop } repeat 
    r d add tB PtoC l arcto 4 { pop } repeat 
    0 0 r d add tB tA arcn r d add 
    AngleA PtoC r h add 
    AngleA PtoC 2 copy 6 2 roll 
    l arcto 4 { pop } repeat 
    r h add tA PtoC l arcto 4 { pop } repeat 
  } ifelse 
  closepath 
  /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def 
  /LPutPos { 
    LPutVar /d ED /h ED 
    /AngleB ED /AngleA ED 
    /r ED /y0 ED /x0 ED 
    t 1 le { 
      r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC 
    }{t 2 lt { 
        /NAngle AngleB 180 add def r 2 t sub 
        h mul t 1 sub d mul add add AngleB PtoC 
      }{ 
        t 3 lt { 
          r d add AngleB 3 t sub mul AngleA 2 t sub
          mul add dup 90 sub /NAngle ED PtoC 
        }{ 
          /NAngle AngleA 180 add def 
          r 4 t sub d mul t 3 sub h mul add add AngleA PtoC 
        } ifelse 
      } ifelse 
    } ifelse
    y0 add /Y ED x0 add /X ED 
  } def 
  /HPutPos { LPutPos } def 
  /VPutPos { LPutPos } def 
} def
%
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
%
/LPutCoor { 
  NAngle 
  tx@Dict begin /NAngle ED end 
  gsave 
  CM STV 
  CP Y sub neg exch X sub neg exch moveto 
  setmatrix CP 
  grestore 
} def
%
/LPut { 
  tx@NodeDict /LPutPos known 
    { LPutPos } { CP /Y ED /X ED /NAngle 0 def } ifelse 
  LPutCoor  
} def
%
/HPutAdjust { 
  Sin Cos mul 0 eq 
    { 0 } 
    { d Cos mul Sin div flag not { neg } if 
      h Cos mul Sin div flag { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { r add neg }{ l add } ifelse 
  X add /X ED 
} def
%
/VPutAdjust { 
  Sin Cos mul 
  0 eq 
    { 0 }
    { l Sin mul Cos div flag { neg } if
      r Sin mul Cos div flag not { neg } if 
      2 copy gt { pop } { exch pop } ifelse 
    } ifelse 
  s add flag { d add } { h add neg } ifelse 
  Y add /Y ED 
} def
%
%
end
%
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: pst-3d.pro 0 0
%% $Id: pst-3d.pro 247 2010-01-04 22:45:42Z herbert $
% PostScript prologue for pst-3d.tex.
% Version 0.01, 2010/01/01 
%
/tx@3Ddict 300 dict def 
tx@3Ddict begin
%
/SetMatrixThreeD {
  dup sin /e ED cos /f ED
  /p3 ED /p2 ED /p1 ED
  p1 0 eq
  { /a 0 def /b p2 0 le { 1 } { -1 } ifelse def
    p3 p2 abs
  }
  { p2 0 eq
    { /a p1 0 lt { -1 } { 1 } ifelse def /b 0 def
      p3 p1 abs
    }
    { p1 dup mul p2 dup mul add sqrt dup
      p1 exch div /a ED
      p2 exch div neg /b ED
      p3 p1 a div
    }
    ifelse
  }
  ifelse
  atan dup sin /c ED cos /d ED
  /Matrix3D
  [
    b f mul c a mul e mul sub
    a f mul c b mul e mul add
    d e mul
    b e mul neg c a mul f mul sub
    a e mul neg c b mul f mul add
    d f mul
  ] def
} def
%
/ProjThreeD {
  /z ED /y ED /x ED
  Matrix3D aload pop
  z mul exch y mul add exch x mul add
  4 1 roll
  z mul exch y mul add exch x mul add
  exch
} def
%
/SetMatrixEmbed {
  SetMatrixThreeD
  Matrix3D aload pop
  /z3 ED /z2 ED /z1 ED /x3 ED /x2 ED /x1 ED
  SetMatrixThreeD
  [
  Matrix3D aload pop
  z3 mul exch z2 mul add exch z1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  Matrix3D aload pop
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  x3 mul exch x2 mul add exch x1 mul add
  3 -1 roll 3 -1 roll 4 -1 roll 8 -3 roll 3 copy
  x3 mul exch x2 mul add exch x1 mul add 4 1 roll
  z3 mul exch z2 mul add exch z1 mul add
  ]
  concat
} def
%
/TMSave {
  tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 } def } if 
  /TMatrix [ TMatrix CM ] cvx def 
} def
%
/TMRestore { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
%
/TMChange {
  TMSave
  /cp [ currentpoint ] cvx def % ??? Check this later.
  CM
  CP T STV
  CM matrix invertmatrix    % Inv(M')
  matrix concatmatrix       % M Inv(M')
  exch exec
  concat cp moveto
} def
%
end % of tx@3Ddict
%%
%% End of file `pst-3d.pro'.

%%EndProcSet
%%BeginProcSet: pst-math.pro 0 0
%                           -*- Mode: Postscript -*-
% pst-math.pro --- PostScript header file pst-math.pro
%
% Author          : Christophe JORSSEN 
% Author          : Herbert Voß <hvoss@tug.org>
% Created the     : Sat 20 March 2004
% Last Mod        : $Date: 2010/10/02 $
% Version         : 0.62 $
%
/PI 3.14159265359 def
/ENeperian 2.71828182846 def
%
/DegToRad {PI mul 180 div} bind def
/RadToDeg {180 mul PI div} bind def
%
/COS {RadToDeg cos} bind def
/SIN {RadToDeg sin} bind def
/TAN {dup SIN exch COS Div} bind def
/tan {dup sin exch cos Div} bind def
/ATAN {neg -1 atan 180 sub DegToRad} bind def
/ACOS {dup dup mul neg 1 add sqrt exch atan DegToRad} bind def
/acos {dup dup mul neg 1 add sqrt exch atan} bind def
/ASIN {neg dup dup mul neg 1 add sqrt neg atan 180 sub DegToRad} bind def
/asin {neg dup dup mul neg 1 add sqrt neg atan 180 sub} bind def
%
/EXP {ENeperian exch exp} bind def
%
/COSH {dup EXP exch neg EXP add 2 div} bind def
/SINH {dup EXP exch neg EXP sub 2 div} bind def
/TANH {dup SINH exch COSH div} bind def
/ACOSH {dup dup mul 1 sub sqrt add ln} bind def
/ASINH {dup dup mul 1 add sqrt add ln} bind def
/ATANH {dup 1 add exch neg 1 add Div ln 2 div} bind def
%
%/SINC {dup SIN exch Div} bind def
/SINC { dup 0 eq { pop 1 } { dup SIN exch div } ifelse } bind def

/GAUSS {dup mul 2 mul dup 4 -2 roll sub dup mul exch div neg EXP exch PI mul sqrt div} bind def
%
/GAMMA { 2 dict begin				% hv 2007-08-30
  /z exch def
  1.000000000190015				% p(0)
  0 1 5 {					% on stack is 0 1 2 3 4 5 
    dup 					% n-1 n-1
    [ 76.18009172947146 
     -86.50532032941677 
      24.0140982483091 
      -1.231739572450155
       0.1208650973866179E-2 
      -0.5395239384953E-5      ] exch get exch 	% p(n) n-1
      1 add z add div			     	% p(n)/(z+n)
      add					% build the sum
    } for
    Pi 2 mul sqrt z div mul
    z 5.5 add z 0.5 add exp mul ENeperian z 5.5 add neg exp mul 
  end } bind def
%    
/GAMMALN {dup dup dup 5.5 add dup ln 3 -1 roll .5 add mul sub neg 1.000000000190015
    0 1 5 {
    [76.18009172947146 -86.50532032941677 24.0140982483091 -1.231739572450155
    .1208650973866179E-2 -.5395239384953E-5 2.5066282746310005] exch get
    4 -1 roll 1 add dup 5 1 roll div add} for
    4 -1 roll div 2.5066282746310005 mul ln add exch pop} bind def
/BETA {2 copy add GAMMALN neg exch GAMMALN 3 -1 roll GAMMALN EXP} bind def
%
/HORNER {aload length
    dup 2 add -1 roll
    exch 1 sub {
        dup 4 1 roll
        mul add exch
    } repeat
    pop
} bind def
%
/BESSEL_J0 {dup abs 8 lt {
    dup mul dup [57568490574 -13362590354 651619640.7 -11214424.18 77392.33017 -184.9052456] HORNER
    exch [57568490411 1029532985 9494680.718 59272.64853 267.8532712 1] HORNER
    Div}
    {abs dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -1.098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index COS mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul} 
    ifelse} bind def
%
/BESSEL_Y0 {dup 8 lt {
    dup dup mul dup [-2957821389 7062834065 -512359803.6 10879881.29 -86327.92757 228.4622733] HORNER
    exch [40076544269 745249964.8 7189466.438 47447.26470 226.1030244 1] HORNER
    Div exch dup ln exch BESSEL_J0 .636619772 mul mul add}
    {dup .636619772 exch div sqrt exch dup .785398164 sub exch 8 exch div dup dup mul dup 
    [1 -.1098628627E-2 .2734510407E-4 -.2073370639E-5 .2093887211E-6] HORNER
    3 index SIN mul
    exch [-.1562499995E-1 .1430488765E-3 -.6911147651E-5 .7621095161E-6 -.934945152E-7] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
/BESSEL_J1 {dup abs 8 lt {
    dup dup mul dup 3 -2 roll [72362614232 -7895059235 242396853.1 -2972611.439 15704.48260 -30.16036606] HORNER mul
    exch [144725228442 2300535178 18583304.74 99447.43394 376.9991397 1] HORNER
    Div}
    {dup abs dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index COS mul
    exch [.04687499995 6.2002690873E-3 .8449199096E-5 -.88228987E-6 .105787412E-6] HORNER
    4 -1 roll SIN mul 3 -1 roll mul neg add mul exch dup abs Div mul} 
    ifelse} bind def
%
/BESSEL_Y1 {dup 8 lt {
    dup dup dup mul dup [-.4900604943E13 .1275274390E13 -.5153428139E11 .7349264551E9 -.4237922726E7 .8511937935E4] HORNER
    exch [.2499580570E14 .4244419664E12 .3733650367E10 .2245904002E8 .1020426050E6 .3549632885E3 1] HORNER
    Div mul exch dup dup ln exch BESSEL_J1 mul exch 1 exch div sub .636619772 mul add}
    {dup .636619772 exch div sqrt exch dup 2.356194491 sub exch 8 exch div dup dup mul dup 
    [1 .183105E-2 -.3516396496E-4 .2457520174E-5 -.240337019E-6] HORNER
    3 index SIN mul
    exch [.04687499995 -.2002690873E-3 .8449199096E-5 6.88228987E-6 .105787412E-6] HORNER
    4 -1 roll COS mul 3 -1 roll mul add mul} 
    ifelse} bind def
%
% En cours...
/BESSEL_Yn {dup 0 eq {pop BESSEL_Y0}{dup 1 eq {pop BESSEL_Y1}{
    exch dup BESSEL_Y0 exch dup BESSEL_Y1 exch 2 exch Div {
        mul 3 -1 roll mul 2 index sub pstack} for
    } ifelse } ifelse } bind def
%
/SIMPSON { 1 dict begin  %% on stack a b var f ierr  Dominik Rodriguez
  3 index 5 index sub                                % compute h
  1                                                  % a b var f ierr h n
  4 index 7 index def 3 index exec                   % a b var f ierr h n f(a)
  5 index 7 index def 4 index exec add               % a b var f ierr h n f(a)+f(b)
  5 index 8 index 4 index 2 div add def 4 index exec % a b var f ierr h n f(a)+f(b) f(a+h/2)
  exch 1 index 4 mul add 0  % a b var f ierr h n old=f(a+h/2) Estim=f(a)+f(b)+4f(a+h/2) NbLoop
    {                                                % a b var f ierr h n old Estim NbLoop
      5 -1 roll 2 div dup 6 1 roll              % h<-h/2
      5 -1 roll 2 mul 5 1 roll                  % n<-2n
                                                % a b var f ierr h n old Estim NbLoop h
      2 div 10 index add 0                      % a b var f ierr h n old Estim NbLoop a+h/2 Cumul
      5 index { 
        1 index 10 index exch def 8 index exec add exch 6 index add exch 
      } repeat                                  % a b var f ierr h n old Estim NbLoop a+nh/2 Cumul
      exch pop                                  % a b var f ierr h n old Estim NbLoop New
      2 index 1 index 4 mul 6 -1 roll 2 mul sub sub % a b var f ierr h n Estim NbLoop New Diff
      4 -1 roll 2 mul 1 index sub 4 1 roll          % a b var f ierr h n Estim NbLoop New Diff
      exch 4 1 roll                             % a b var f ierr h n old Estim NbLoop Diff
      5 index 6 div mul abs 6 index lt { exit } if
      1 add dup 9 eq { exit } if
  } loop                                        % a b var f ierr h n old Estim NbLoop
  exch 5 -1 roll 6 div mul mark 10 2 roll cleartomark
end 
} def
% ------------------------------------ math stuff ----------------------------------
%
% Matrix A in arrays of rows A[[row1][row2]...]
% with [row1]=[a11 a12 ... b1]
% returns on stack solution vector X=[x1 x2 ... xn]
/SolveLinEqSystem { 				% on stack matrix M=[A,b] (A*x=b)
  10 dict begin					% hold all ocal
    /A exch def
    /Rows A length def         			% Rows = number of rows
    /Cols A 0 get length def   			% Cols = number of columns
    /Index [ 0 1 Rows 1 sub { } for ] def	% Index = [0 1 2 ... Rows-1]
    /col 0 def
    /row  0 def
    /PR Rows array def 				% PR[c] = pivot row for row row
  { 						% starts the loop, find pivot entry in row r
    col Cols ge row  Rows ge or { exit } if	% col < Cols and row < Rows else exit
    /pRow row def  				% pRow = pivot row		
    /max A row  get col get abs def		% get A[row[col]], first A[0,0] 
    row 1 add 1 Rows 1 sub { 			% starts for loop 1 1 Rows-1
      /j exch def				% index counter
      /x A j get col get abs def		% get A[j[r]]
      x max gt {				% x>max, then save position
        /pRow j def
        /max x def
      } if
    } for					% now we have the row with biggest A[0,1]
						% with pRow = the pivot row
    max 0 gt {					% swap entries pRow and row  in i 
      /tmp Index row  get def
      Index row  Index pRow get put
      Index pRow tmp put			% and columns pRow and row  in A
      /tmp A row get def
      A row  A pRow get put
      A pRow tmp put   				% pivot
      /row0  A row  get def 			% the pivoting row
      /p0 row0  col get def 			% the pivot value
      row 1 add 1 Rows 1 sub { 			% start for loop
        /j exch def
        /c1 A j get def
        /p c1 col get p0 div def
        c1 col p put				% subtract (p1/p0)*row[i] from row[j]
        col 1 add 1 Cols 1 sub {		% start for loop
          /i exch def
          c1 dup i exch 			% c1 i c1
          i get row0 i get p mul sub put
        } for
      } for
      PR row col put
      /col col 1 add def
      /row row 1 add def
    }{						% all zero entries
      /row row 1 add def			% continue loop with same row
    } ifelse
  } loop
  /X A def					% solution vector
  A Rows 1 sub get dup
  Cols 1 sub get exch
  Cols 2 sub get div
  X Rows 1 sub 3 -1 roll put  			% X[n]
  Rows 2 sub -1 0 {				% for loop to calculate X[i]
    /xi exch def				% current index
    A xi get 					% i-th row
    /Axi exch def
    /sum 0 def
    Cols 2 sub -1 xi 1 add { 
      /n exch def
      /sum sum Axi n get X n get mul add def 
    } for
    Axi Cols 1 sub get 				% b=Axi[Cols-1]
    sum sub 					% b-sum
    Axi xi get div				% b-sum / Axi[xi]
    X xi 3 -1 roll put  			% X[xi]
  } for
  X
  end 
} def
%
/c@_0 2.515517 def 
/c@_1 0.802853 def 
/c@_2 0.010328 def 
/d@_1 1.432788 def 
/d@_2 0.189269 def 
/d@_3 0.001308 def 
/norminv {
  5 dict begin
  neg 1 add 1 exch div ln 2 mul sqrt 
  /t exch def 
  /t2 t dup mul def 
  /t3 t2 t mul def 
  c@_0 c@_1 t mul add c@_2 t2 mul add 1 d@_1 t mul add 
  d@_2 t2 mul add d@_3 t3 mul add div neg t add 
  end
} def 
%end{norminv Michael Sharpe}
%
%
% END pst-math.pro

%%EndProcSet
%%BeginProcSet: pstricks-add.pro 0 0
%% $Id: pstricks-add.pro 692 2012-06-04 06:47:40Z herbert $
%%
% PostScript prologue for pstricks-add.tex.
%
% Version 0.23, 2009/12/17 
%
/tx@addDict 410 dict def tx@addDict begin
%%
realtime srand % set random generator
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
/GTriangle {
  gsave
  /mtrx CM def
  /colorA ED /colorB ED /colorC ED 	% save the colors
  /yA ED /xA ED               		% save the origin
  xA yA translate
  rotate       		        	% \psk@gangle
  /yB ED /xB ED /yC ED /xC ED   	% save other coordinates
  /ds [                % save data in a array
     0 0 0 colorA aload pop     	% fd x y xr xg xb
     0 xB xA sub yB yA sub colorB aload pop
     0 xC xA sub yC yA sub colorC aload pop
%     1 xC xB add yB colorA aload pop  	% for use with 4 points ABCD
  ] def
  newpath
  <<
  /ShadingType 4           % single Gouraud
  /ColorSpace [ /DeviceRGB ]
  /DataSource ds
  >> 
  shfill
  closepath
  mtrx
  setmatrix grestore} def
%
/RGBtoCMYK {    % on stack r g b -> C M Y K
  3 dict begin
  /Blue ED /Green ED /Red ED
  1 Red sub     % Cyan
  1 Green sub   % Magenta
  1 Blue sub    % Yellow
  0   		% Black  
  end
} def
%
/CMYKtoGRAY { % on stack c m y k -> gray
  exch 0.11 mul add
  exch 0.59 mul add
  exch 0.3 mul add
  dup 1 gt { pop 1 }  if 
  neg 1 add 
} def
%
/RGBtoGRAY { % on stack r g b -> gray
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
} def
%
/HSBtoGRAY { 
  6 dict begin
  /b exch def 
  /s exch def 6 mul dup cvi dup 
  /i exch def sub 
  /f exch def
  /F [[0 1 f sub 1][f 0 1][1 0 1 f sub][1 f 0][1 f sub 1 0][0 1 f][0 1 1]] def
  F i get { s mul neg 1 add b mul} forall
  0.11 mul
  exch 0.59 mul add
  exch 0.3 mul add 
  end
} def
%
%% convertisseur longueur d'onde ->R,G,B       Manuel Luque
%% lambda max=780 nanometres
%% lambda min=380 nanometres
%% adaptation de :
%% http://www.physics.sfasu.edu/astro/color.html
%% www.efg2.com/lab
%
/Gamma 0.8 def
/calculateRGB {
  lambda 379 le {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 781 ge {/Red 0 def /Green 0 def /Blue 0 def} if
  lambda 380 ge {lambda 439 le {
    /R {lambda 440 sub neg 440 380 sub div} def
    /Red R factor mul Gamma exp def
    /G 0 def
    /Green G factor mul Gamma exp def
    /B 1 def
    /Blue B factor mul Gamma exp def} if
  } if
  lambda 440 ge { lambda 489 le {
    /G {lambda 440 sub 490 440 sub div} def
    /Green G factor mul Gamma exp def
    /R 0 def /Red 0 def
    /B 1 def
    /Blue B factor mul Gamma exp def } if
  } if
  lambda 490 ge {lambda 509 le {
    /B {lambda 510 sub neg 510 490 sub div} def
    /Blue B factor mul Gamma exp def
    /R 0 def /Red 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 510 ge {lambda 579 le {
    /R {lambda 510 sub 580 510 sub div } def
    /Red R factor mul Gamma exp def
    /Blue 0 def
    /G 1 def
    /Green G factor mul Gamma exp def } if
  } if
  lambda 580 ge {lambda 644 le {
    /G {lambda 645 sub neg 645 580 sub div } def
    /Green G factor mul Gamma exp def
    /Blue 0 def
    /R 1 def
    /Red R factor mul Gamma exp def } if
  } if
  lambda 645 ge { lambda 780 le {
    /Red 1 factor mul Gamma exp def
    /Blue 0 def
    /Green 0 def } if
  } if
} def
%
/factor {
  lambda 380 ge {lambda 419 le { 0.3 0.7 lambda 380 sub mul 420 380 sub div add} if } if
  lambda 420 ge {lambda 700 le { 1 } if } if
  lambda 701 ge {lambda 780 le { 0.3 0.7 780 lambda sub mul 780 700 sub div add} if } if
} def
%
/wavelengthToRGB { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
} def %  now the colors are saved in Red Green Blue
%
/wavelengthToGRAY { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  calculateRGB
  Red Green Blue RGBtoGRAY
} def %  now the gray color is on the stack
%
/wavelengthToCMYK { % the wavelength in nm must be on top of the stack
  cvi /lambda exch def % no floating point here
  gsave
  calculateRGB Red Green Blue RGBtoCMYK 
  /Black ED /Yellow ED /Magenta ED /Cyan ED
  grestore
} def %  now the colors are saved in Cyan Magenta Yellow Black
%
/axfill {
    8 dict begin
    /xw exch def /nl exch def
    /C1 exch def /y1 exch def/x1 exch def
    /C0 exch def /y0 exch def/x0 exch def
    <<  /ShadingType 2
        /ColorSpace /DeviceRGB
        /Coords [ x0 y0 x1 y1 ]
        /EmulatorHints [ xw 2 div dup ]
        /Function <<
            /FunctionType 2
            /Domain [0 1]
            /C0 C0
            /C1 C1
            /N      1
        >>
    >> shfill
    end
} bind def
%
%/amplHand {.8} def 
%/dtHand 2 def
/varHand { rand sin amplHand mul add } def
/MovetoByHand { moveto } def 
%/MovetoByHand { /y0 ED /x0 ED x0 y0 moveto } def 
/LinetoByHand { 4 dict begin
  /y1 ED /x1 ED 
  currentpoint /y0 ED /x0 ED
  x0 x1 sub dup mul y0 y1 sub dup mul add sqrt /dEnd ED
  0 dtHand dEnd { dup
    x1 x0 sub mul dEnd div x0 add varHand exch  
    y1 y0 sub mul dEnd div y0 add varHand lineto
  } for
%  /x0 x1 def /y0 y1 def
  end
} def  
%
end
%
% END pstricks-add.pro

%%EndProcSet
%%BeginProcSet: pst-grad.pro 0 0
%!
% PostScript prologue for pst-grad.tex.
% Version 1.05, 2006/11/04 
% prepared by Herbert Voss
% For copying restrictions, see pstricks.tex.
%
% For the PSTricks gradient fillstyle.%
% Based on some EPS files by leeweyr!bill@nuchat.sccsi.com (W. R. Lee).%
% Syntax:% D.G. modification begin - Apr.  9, %1998
%%%%%% R0 G0 B0 R1 G1 B1 NumLines MidPoint Angle GradientFill
%   ifGradientCircle GradientScale %GradientPosX GradientPosY
%     R0 G0 B0 R1 G1 B1 NumLines MidPoint %Angle GradientFill
% D.G. modification end
%
/tx@GradientDict 40 dict def
tx@GradientDict begin
/GradientFill {
 /ifCMYK exch def   % do we have rgb or cmyk? hv 1.06
 rotate
 /MidPoint ED
 /NumLines ED
 ifCMYK {
    /LastBlack ED	% 1.06
    /LastYellow ED	% 1.06
    /LastMagenta ED	% 1.06
    /LastCyan ED	% 1.06
    /FirstBlack ED	% 1.06
    /FirstYellow ED	% 1.06
    /FirstMagenta ED	% 1.06
    /FirstCyan ED	% 1.06
 }{ /LastBlue ED
    /LastGreen ED
    /LastRed ED
    /FirstBlue ED
    /FirstGreen ED
    /FirstRed ED
 } ifelse
 /GradientPosY ED
 /GradientPosX ED
 /GradientScale ED
 /ifGradientCircle ED
 % This avoids gaps due to rounding errors:
 clip
 pathbbox           %leave llx,lly,urx,ury on stack
 4 copy /ury ED /urx ED /lly ED /llx ED
 /y ED /x ED
 ifGradientCircle
   { 0 GradientPosX eq { 0 GradientPosX eq {2 copy translate} if } if }
   {2 copy translate} ifelse
 y sub neg /y ED
 x sub neg /x ED  % This avoids gaps due to rounding errors:
 ifCMYK {				% 1.06
    LastCyan FirstCyan add 2 div	% 1.06
    LastMagenta FirstMagenta add 2 div	% 1.06
    LastYellow FirstYellow add 2 div	% 1.06
    LastBlack FirstBlack add 2 div	% 1.06
    setcmykcolor			% 1.06
  }{
    LastRed FirstRed add 2 div
    LastGreen FirstGreen add 2 div
    LastBlue FirstBlue add 2 div
    setrgbcolor
  } ifelse
 ifGradientCircle
   { /YSizePerLine y NumLines div def
     /CurrentY y 2 div def
     /MidLine NumLines 2 div 1 MidPoint sub mul abs cvi def
   }{
     fill
     /YSizePerLine y NumLines div def
     /CurrentY 0 def
     /MidLine NumLines 1 MidPoint sub mul abs cvi def
   } ifelse
 MidLine NumLines 2 sub gt 
   { /MidLine NumLines def }
   { MidLine 2 lt { /MidLine 0 def } if } ifelse
 MidLine 0 gt {
  ifCMYK {
    /Cyan FirstCyan def
    /Magenta FirstMagenta def
    /Yellow FirstYellow def
    /Black FirstBlack def
    /CyanIncrement LastCyan FirstCyan sub MidLine 1 sub div def
    /MagentaIncrement LastMagenta FirstMagenta sub MidLine 1 sub div def
    /YellowIncrement LastYellow FirstYellow sub MidLine 1 sub div def
    /BlackIncrement LastBlack FirstBlack sub MidLine 1 sub div def
  }{
    /Red FirstRed def
    /Green FirstGreen def
    /Blue FirstBlue def
    /RedIncrement LastRed FirstRed sub MidLine 1 sub div def
    /GreenIncrement LastGreen FirstGreen sub MidLine 1 sub div def
    /BlueIncrement LastBlue FirstBlue sub MidLine 1 sub div def
  } ifelse
  MidLine { GradientLoop } repeat
 } if
 MidLine NumLines lt {
  ifCMYK {
    /Cyan LastCyan def
    /Magenta LastMagenta def
    /Yellow LastYellow def
    /Black LastBlack def
    /CyanIncrement FirstCyan LastCyan sub NumLines MidLine sub 1 sub div def
    /MagentaIncrement FirstMagenta LastMagenta sub NumLines MidLine sub 1 sub div def
    /YellowIncrement FirstYellow LastYellow sub NumLines MidLine sub 1 sub div def
    /BlackIncrement FirstBlack LastBlack sub NumLines MidLine sub 1 sub div def
  }{
    /Red LastRed def
    /Green LastGreen def
    /Blue LastBlue def
    /RedIncrement FirstRed LastRed sub NumLines MidLine sub 1 sub div def
    /GreenIncrement FirstGreen LastGreen sub NumLines MidLine sub 1 sub div def
    /BlueIncrement FirstBlue LastBlue sub NumLines MidLine sub 1 sub div def
  } ifelse
  NumLines MidLine sub { GradientLoop } repeat  
 } if
} def/GradientLoop {
% D.G. modification begin - Jul. 23, 1997 / Apr.  9, 1998
  ifGradientCircle
   {CurrentY 0 gt {
% The default center used is the center of the bounding box of the object
      0 GradientPosX eq        {0 GradientPosX eq
           {/GradientPosX urx llx sub 2 div def
            /GradientPosY ury lly sub 2 div def} if} if
      GradientPosX GradientPosY CurrentY GradientScale mul 0 360 arc
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill
      /CurrentY CurrentY YSizePerLine sub def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
  } if }   { 0 CurrentY moveto    x 0 rlineto
    0 YSizePerLine rlineto    x neg 0 rlineto    closepath
      ifCMYK { Cyan Magenta Yellow Black setcmykcolor }
           { Red Green Blue setrgbcolor } ifelse 
      fill    
      /CurrentY CurrentY YSizePerLine add def
      ifCMYK {
        /Cyan Cyan CyanIncrement add def
        /Magenta Magenta MagentaIncrement add def
        /Yellow Yellow YellowIncrement add def
        /Black Black BlackIncrement add def
      }{	
        /Blue Blue BlueIncrement add def
        /Green Green GreenIncrement add def
        /Red Red RedIncrement add def
      } ifelse
      } ifelse% D.G. modification end
    }def
%
/GradientFillHSB { %	hv 2006-11-04
  rotate
  /MidPoint ED
  /NumLines ED
  /LastBrightness ED
  /LastSaturation ED
  /LastHue ED
  /FirstBrightness ED
  /FirstSaturation ED
  /FirstHue ED
  % This avoids gaps due to rounding errors:
  clip
  pathbbox           %leave llx,lly,urx,ury on stack
  /y ED /x ED
  2 copy translate
  y sub neg /y ED
  x sub neg /x ED
  % This avoids gaps due to rounding errors:
  LastHue FirstHue add 2 div
  LastSaturation FirstSaturation add 2 div
  LastBrightness FirstBrightness add 2 div
  sethsbcolor
  fill
  /YSizePerLine y NumLines div def
  /CurrentY 0 def
  /MidLine NumLines 1 MidPoint sub mul abs cvi def
  MidLine NumLines 2 sub gt
  { /MidLine NumLines def }
  { MidLine 2 lt { /MidLine 0 def } if }
  ifelse
  MidLine 0 gt
  {
    /Hue FirstHue def
    /Saturation FirstSaturation def
    /Brightness FirstBrightness def
    /HueIncrement LastHue FirstHue sub MidLine 1 sub div def
    /SaturationIncrement LastSaturation FirstSaturation sub MidLine 1 sub
                         div def
    /BrightnessIncrement LastBrightness FirstBrightness sub MidLine 1 sub
                         div def
    MidLine { GradientLoopHSB } repeat
  } if
  MidLine NumLines lt
  {
    /Hue LastHue def
    /Saturation LastSaturation def
    /Brightness LastBrightness def
    /HueIncrement FirstHue LastHue sub NumLines MidLine sub 1 sub div def
    /SaturationIncrement FirstSaturation LastSaturation sub
                         NumLines MidLine sub 1 sub div def
    /BrightnessIncrement FirstBrightness LastBrightness sub
                         NumLines MidLine sub 1 sub div def
    NumLines MidLine sub { GradientLoopHSB } repeat
  } if
} def
/GradientLoopHSB {
  0 CurrentY moveto
  x 0 rlineto
  0 YSizePerLine rlineto
  x neg 0 rlineto
  closepath
  Hue Saturation Brightness sethsbcolor fill
  /CurrentY CurrentY YSizePerLine add def
  /Brightness Brightness BrightnessIncrement add def
  /Saturation Saturation SaturationIncrement add def
  /Hue Hue HueIncrement add def
} def
%
end
%
% END pst-grad.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: MSAM10
%!PS-AdobeFont-1.0: MSAM10 003.002
%%Title: MSAM10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name MSAM10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/MSAM10 known{/MSAM10 findfont dup/UniqueID known{dup
/UniqueID get 5031981 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /MSAM10 def
/FontBBox {8 -463 1331 1003 }readonly def
/PaintType 0 def
/FontInfo 7 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name MSAM10.) readonly def
/FullName (MSAM10) readonly def
/FamilyName (Euler) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /multimap put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE2340939CE40EE9186A0DCC3D3
D661293EC5BB40766B73935EB54125526067D631E1E3D1D6569AB3546CB257C3
4C12CA4AE98C3F99898F1448AC0B416B8E5C3EEF3D74B5FD6A1BE3C23B160E78
79A9E0AC4FC82364F946003C1B2E0EF3CEA944727E7502B65BA1331D36C159E2
1D107580F28A32E04CB876822CEF478BF4464CE4F7AE824FC786E099A1BE2A3C
7D2BFE2A748AB092AEBC2021DBFD5C40E912BC5856F3EF8615147350E75D2BF9
E428D7948E2128053FDB1F90CA9C7D6581E25A6645879F50577FE7F0B32B873F
13F97C524E19F1CFE3883C0DE1DF80FB61111978B0C2D028A99A712D3DC27D8F
C83C4EC335F0DB9912DD2AF009FAA56C5BD5855BA92851629EF6C47E6AC303A6
1A231558746ED8A78C76E476ED71246A2E15C51F465AB21A22ACACB03014B06F
201876D3C6F49E2D38D8C4FE8011F7BB148FC3227E0BFA51C0F9AAD64F0C6095
77B3D875476B666F9FB9A46763C49272FC504CC0E817A1533409D293D6D62CC8
DFDA666BC9DC70C4510BFB0DD2BC94B33D457EACFD754761B696163DB4C547B5
FF8994977A7C9910AF486487CE0320FA1E705BAF4B14FB937229D80F58D01E6E
9D9716EA3EDA84840B5D6BDE216A25814ABC4DE4C6818266C33CD4C3DA4F23BF
DAE6ABDC6D64E7EC7DE918DDB0B05D8413D32D99D15FE112C1D393D21806E0C9
7CE0F0977AA36617B8DD50937C5B0B5698947B0A71A167072FE1B3AD6F274D97
484926DF52CE7D9D2A4928A188E1F867C298E6DB475C0CBE09F0523D8BC6FE24
E1CED78178EE1E9D66A906B72505339E62499C0E4B6B5A2D596C4F8F4312F582
9413DC88D6EDFEAAE0C86BEE44CBDDD79BC02C844B80324B1FE3512E73C213BF
ECD22E7E13F98AB56E4D693B1D6045045E2F01DCC2AA1F70A4699B7D718A743F
D749133029EAD1870DF0B00EDEEDFD33642A88EB10DDF4CBBF8A7D8F7781179F
A91CF398747D52769A054CDACAEDC330FB79ECC96CF43C29515F5895D3A8C1E6
828F776844C88090405F868A872EF54467B72825B001B46F6496817A9B928BEC
ED212D4368368778F2D1B66D005F2D6E3DF4AB9B9791AF2CECCA3AE524781A41
5052FD21CB81D934F0F12CF8C8FFC656BAFBE897C5E86A21D3F42A38F7916693
ADD1DBF48F534DA16099FFCF3E3DBCB254BF49D8F72FAC2F9548477F9AFA414E
65A29F24FA16A9E0955A9A6CCC47198E6332ECD1A791F2E36E6656852179A94C
E3CF4477A9A6CF507B8184ECA5C0304FA15ABD8B0C379EAC19B9D16A630D96DB
A6DA819C2E481AE4870BCAB5963C0F9D837C97E207F7ED58B776799586B9F755
B705AC31C09C3F74AFBCDACF092B05F9E2B072C1B17EE6347523D3D5E1D404AC
636C33DD94121C3711C3D05F48E12DF8489F894E4913263176E81927BF5E3A94
99D124F64D00BCC288F03FD14F89E6352083333EC6C2044E2F81C477DD4CA9A9
55135915C27654B09BC9099FA966AD440417945879399B39C7BF20385456878F
9AAE7343912927476C2C88A445C03E3B77381F3F9A82FEECADCCF8C307144775
144279EB14E0F0443F8200C0FABD54A075EDCB83EAB07A7CAF6EAB17C6CDB239
077DC62173A54E93BE2911F4A45F72B80DD9C41B301B292EFA78D361AD74BD7D
2E94D44A2D79BB7B89708E094A21CCB28D80E0FCA707D742CC02BB81FE4B0E06
4A5E93DF0414BAC27ADDB044A0D444692973994CD028E1C62F1FFA4776554914
2D55B0F81C06A2633A4AE42AD00422A619E339F2E6F0C6FC74F70552974509A0
812F1007FD7055E9ABB8CB39F799F847993DB9593A76C388F9BC883D4A0DE2CD
BFD0F7F2A5F1C50791EB4363104B49088E6EA2C5E61EF256A9FF232357D62D78
0C876D200E4136F7B0570A3B0988F3E23443081591DDB861745B4F6F0FF7D854
8F558F995A283B346E266DB6FFB54E0761046152A864F710113B6BF12967D022
2947517E1CE2079849CF8EB01BB2B96EEC2575AAAD1AA1E019D7E72BCFDF2979
8E2A6EE0C1525389C16411E5DBD416467B9900F07223117A77E0B4C3B0D49A96
C2E3A61AF9C9B1CEB80AC6357FC0CA446FF87BA0CCCD81924F6209198BD6E1A6
9EECEF233B17CC4E9F0654024F7E857EAB409F4B9B9ADE4090F2B715443A80EA
130369A193A32A4DA3730F13E3C9E717CCC9E74611D787277B73EFCE14FCC3B8
6B11AD88F42705F65E9C747B472F379ECDCB7F8F9C3FEA64402972623EA0998F
255892C43CEFD7ED08957C495AAACDA59E9398B43788DF27F7433F72377C8F88
F54F5E3A5564244827EBF92227B94F4FE896FEC6519769AAD567E618DFF61B7D
B93EE0FFA2EA58BE1FDAA0025259789FDB31A1019661C18080567EB5C6306596
F97F039E3C9ABF9E40B4725A96F8170B49B73B68E308786FE99B0C005DE01894
7CC93C196E1F830570D51F0AD29BF27CCE45AD7D3B4332C9D50F1E9C2D04E033
1E197DB9BE1D44566F738CD26A13B8EBC8FD49E999D35F042E8A24F025414F14
D9D11ED702250F1295722F68A022196A0E38B9ADDDBA997283ABAA62898EF32B
C765387E238CA3475ED5C6EF2803CE32B5A90A8287C70386F46B84C332E8C00F
85A8CC2DE78D433A325B7862AD4D93B3EE2CABC4B688833BF263E26879AF213C
934FAFEBE8D804E2BC8433B81ED5DA99F08C2C11B93019D3D9C1C952F20C68A7
E141DEA2CB983DAC5A2B9426A98262FEB13C420EAA315C890F0B907BEA099C1A
10B0AB255AF99694C722166DCDA72FD58CFBA3328FC5EF83A52A750C5E613E74
A8572CB8B78ABDAC27B798E727E3E5AF9451416493FE3F4E95157B4ABDF3A910
64369E34A2B40176A5E0E30F472E33A41B8C7BA4CB1BFB9173783909161370AA
EA40C83C60AAE242358688CE13193C9DDC3544A959A1E6A16FCC4BFAA65A63C7
5AEF208FC201F88DD047B5E6EFBD4BB256F973269BA1B06CCFC186D48BCCB4F6
A0F512B1D6541417BB6045045CBE72B72AA2549C345B1BB466335226A0E76A10
9645C25A0FB4CD8455C7C10C0F4E7E9914D2010BA1C95C6BAE4E62C8B6A8BDB4
92281B366208ABD9C010B3660C5E150D63D6927255CF9081C0898E9B206FAB57
B306669AB87AF405C537CA7D3411DBC41C53EEFD8071C094486158E97BAFE90E
BA29BEB83BA60776D33BF9CAF9C7FEB66D4B93DA27E499B006D243FF59CB33F6
AFC65D10B74CC522BF4AD45E3451B395AD5029B148A1C9B710D5CF02B65F9189
0822C0A33C4D07F2DEFDD5B4F6E063891F0456F1BCA4540F9DCD3B0F9F39696A
52336AFCF0A33A029AEEB448CE120B9D939487EC8274AD4E1D5F5AF4C14EC910
680C5E312735DFA3A5B1835370A76DFA63A05379021A64EE55E25AD5218398A3
6DD66D1B474A2E7C6E236E0E4A9BD0E4F7AD1807C6478225C58327BFE1822000
26713D01CAD6951F456504D79867D523605ECD78F2D5DA05994BA4812BF65E7E
34ACB732150ECB3D212D03387C71677F617D76A9A42C708C89D61614F280A5FB
0BFA84A17CF9DF333C9E13DEE82A5ADC9D2E588338D247889ECFB090CC63CF9B
8D92B1CB784B65BE80E3B57998F9ABEE702E07BC127D272C67B0A97734E405C1
FAA87E6B9DDB8ECAD2B9DCD56D687DFF71BDF29BBDA0A0812695F81C5EBB83F8
0A810D6560F28D7CA1F89A11F253E1B3B4EBAF511454E4BF2C46A333BC186558
8D73374455A32DE993526063AE70EAA647454ECC62BFC5A53357F2955E4A8A02
E20AA64AB6511CEFC5A32874C8F2BC2424C6B85BAE80191216A22D93BF2813EA
18A1A961543D7C58C4F4B263D76AD6C61270F2A77468B3E59BA9D861E5AA6CE1
B7A9C4C2A13E80C4052283DF3529210B3F6E90C2EFF205866865E7E96F34513B
05A45939728619E02FF1410C0D220F6D615718893E7370A0B91675BCF681B2D9
56112D9D37ECB819017472DCD38FE4724834869F82985A69E33BF862DB420DEB
AA1CDF83099114501C037873E86E0D33FC954E12D40038FBDC78E7159B738516
A078AA386D9424B8D4913B7848D8439D2ACAFB7C81C9AB192D77F316D299D11B
24F67141B1E0FDB564B70FE68070BE6BC00F22C11A1291BA6401C722487BFE19
D7869DA874C9059677DBEF958B7AA06EB924A17B3EFE9014493EA1FA8C4C67B2
B5DC483ACFAAE88F2DFF9FAAA7825854671ECFD522540C9F6C3817C11D3B63CA
8ECF710EAC4F27506B67B972633D0821BD15F4511F305A5677F2919DEBF7DE88
4F60E36360A7856B6B6A8A866832534279AF45B4232877F45C92ABDFE0910F7C
F86825A1B6012FF93479BDC9639C01CF2C783356B33127AEC7039D40529EE54A
756D8B7524E069DA60A38AFE592B8B228ABE22B7BC9CD9B23277FBB567B1377C
77E21AE6F55ADF4F8864F4260562F0384165444385D5A8C5966EBF191900B898
85240634EBE8A5DA382E0EE3583B1B5D102B6EBFAD60AB9C335919EFBAA55A6E
36CE4887299E395EB5766080FC0B6F93B1247F28842FB817084C9C090616AA72
25F4ED6996D36CD9675009C615BA26BD4904F3130991023E4116A7E6BCB26C10
7106241DE039BA7F26E137040BAF587AE03A476526F025C70F16EF23474C0EEB
6E27D8562C7C733CF470EA198494A505A8F871E8EBA31D4F0D9F0AEB9D0EF63B
738B582F7BD73DEFD5D83707BBC7854B6FC7FA6E2636F0B68C4858B247F70C4D
F602764B9465975E9AF28C2046EAD743CC350E747D6524B9CD7F325946B9287B
F7D46E4342A71B0409B2BF5FA4D340DD549F6A5B05D2784EC5A248560F4E214B
C5304217B3AF8451C190FE1C312527746E45DE39D8D43CBEED9A19FFE143CA61
3B65344C26E189D790A0211556C609F107C78F55CA120F3449A697D1305DAD2C
D3EAB88E2CBDC022A4E036E232237C1C16ECFA62D6CF8EA3B6610B58C75EEEE9
676201206E4A8B8C7CF5EF409F2C0544DAAC926497B1FBCDEA07DF042ED870D3
9D74709FDB8CD2CAC4726655371EDDAE78A5D9E0811ED4DCE8C23DAE1ED44D06
F4DF09BD9A00C1DE178E766E05CD3CA64301C592BC01EA4F6D1973586547B170
A3338C60FA1148DC5F3F7B7DB5EAC870239BD137CC85AD54380379F5C30B0754
D0A0FD8DDDC7CE725B58F37DE7DF077916C912F2808D0E4CA32808D0439A148E
3B1E18B9C88C8B4DF23FF5C53B2881D7C23D1C239F08137BBD8FEA326E7CD1BC
C80027A40463BD58758F4402D3DCDFED46C2E3C405E1B1E8DD0062E1272AB5C8
91953946FBB4B9EB0A74D0F7F4FAAD798571EEDBF0CD4C92A6916909297F27B7
5135990685B849E8244D2EE73D5C7BEF1D3042CA8353210EB4293A2B2F1BCCEA
7FF2AA91F52D343BFBF5E91F2381AE5B6803C46605D471B7BD122153E87D872D
EBF37727370BB683A194C4C4DE13F54AECB116BEB3E0750E10AF272E0C015641
0F9264A21BA79821B29D8CB78746C314E6893765AB9BB7BB1730D758F687E615
D2AEED695331E99591AFA000AA540ABD36ACA911E91E20912AB819A80D5183A4
CB88E08E0E9911612639C05043942AC8EA0072E9CB7154C415C0FB37DFE3F01E
638D5052C87A8359DD979C44B730F06019191C5BED15E6E79FAF312ED8EB0B02
3E712A0F6C89A6F7C122A561F133FB4D2A98EE09B11ADEA53702C92C210334E6
8D5F3E1BCC0E81CE178ED749B00FF4089C1AC412DC5F6696C9D8B9D2EB24B35C
3C1F8F63EA348A95622AF76CDD5C4DFE06A8C7534A55FAF937777E864C98062C
CEAA3ECB5E518C75FEAA240910646EF782303BF34FBF8162C8650D5A6F0EADB4
FAD9AED7994003F74E09A3CFD8900A33160CD1D49AA1C7BB5E42A2B0AB5A9D20
A5AEE02435D84A2622ED87454A2867E112A9AC72653A7865E2DDB9C236384228
94DE4A396FA798ED1F370AE5247E0E703D4D4225ACC1EF410631555D7DBC814F
F84353CD407284FBEA1D371CA578165B888D771ABEF7C3ADE33DF899E55FB0C6
A99A97A474739D07FF17DDBA267EC6C0A6154094D6E7354FEEF9723F23CA6E86
D8467D66FC5DEA43D700C9712BCDBCB15EDB628F4B840A76D761CC213376A0CF
3F137F399AF2F349C1D7FC9EE28CE88F416F1069D6907C3E917AECDD245A1BBF
4375A03755C145042232F87BD3F097746E41A70FAE7761AB26D1FDBABBFB56FE
D8C80879557D3849CBFC7D25D84D137ADBB5FD4F6FEF8CC9D54824EC85DDF553
FC992F823952FC7591D08F035BDAFC9317F144C94E828F09E29A02F0D6639DF5
08D32902957CF0BE88694AA031FA8BCA9E73D48A60FBEF090FEFF955FEF964DA
F53A9B58D2732F986DD20814A1C11963E4FF24011CB93D616CF4A6DEA6ACC5B5
354626A142D85BFC4F03DBC32F26253B97414C9CFDF3C3EBDD68FE0B7908AF88
1961CDBB6A94155524361C0B95E42AF0DC1542752B2129938BCD020CA19D64E1
0EB5DE254B638D700EF4BA620D924D65E95A329AC2657D2CCA597A4FEF7F1347
05419CFB59A93578682671B9A2910BBAF099C877288C19A4EBEBCB3C64415248
C00D0295332B6388384F27779F0B0A2D05A9F3BBCB3C1F587EAE05AE4D2C5319
478E8D848ED75B368FF45ED8B2D572AAE502493D2A3660F8400E1AAF9B27AB35
99FA7E39E250E91A67101F20FAE8BFC13A07FD2F7FD3A45002C02AD891458739
10D221602C35139358B1F23E0DDEADDF0AC07B1689EE95DB17A3B6888D9BEB65
C7A9BA2CD903B2F8348489A57F5A7191D1627A2C76A856C9E178B17A40293F98
E9CACD819DBAFBD0FFEC6EF5BAA6D8AFF764786470A5B02860DA35A5B3A2BBE7
45E6E4882CCF3A980B0C35F6C170D7269F7263FBBBF4051A51437A218711AA18
A408F16E7C9FD7D61AC4E859A91CA4B18D5BC3B0F6EF0287298B75C11FBD9FA4
1BF203A988C21BC2C550839E432350ECB4471F8553F7B4E42128DCA6B1239DAF
6C9D4A8B8AB7FA8AB013EC3060F02D6DB609F59E0BDE4D05891811A41F7E47EE
7166D88DDCFF5BFE1AB84D873C38009A857DB436100CACD8DEB98548A2FD3770
B44D6194717757468A9C84238E5B83AD19921E31485ACC168C25DA73D95767E2
27EDA7FBEC3FA6C8C58DED3649994CC965F81327D8547181CE06A73A6D696552
6A6EB8009B1C40A46791E8DD0AD66E125F61CA6810BB4B74E266703F9DE0E322
41D93C72DF010EE7DF3B7AF46CAAA9463E68D5C8B792D3197C4EED52CD16D5E4
493C1F8944901537C4E6AC73E5D6621CBD177B50CFD7F86E786D6E6EC176F6C1
3D7E9346C2859A185793A764E960F236A1798FF5E3A740ADDEF422FDA93FE058
53A9989A0A7252337DDCE50B6A040E49421069081644A51C80D37BF73CB30254
BC1D8A551F71FFE93F068070448334307A87526A86A3A7D53AEABC3506E78DD1
849BFF403701D6059D6CC2CCFCBAC8BEBF440B8D3152C63908C6882E56EAAF71
2984E440F40B5F355DAC74EB02738BCB094E40A55A48A26BA9970D09EF48EDB9
C0C6BA95EC2A5E98325594AC418DFF541515964C77B8D2C8E953703063F17F36
D042EFFB97936DA27FC3601DDD601709B71382EC67BB58C8D07254A6BBF7FFF4
EADB3B735D143E4654A5F06ECF67F0305606CD0619022A5DEC8206D4F9B8D3B0
1CB47BCDCCC4F1898958555F5218EBA0BB9F6BDA92E8A8F645C51D69C597141A
DACC7696EC47C399F6BC4CC2760FF9366A7D1F2ADE54B913F1ED476D606ACA25
83D3958E9EE0547A5C54C359AD40D487FEED3555A936A7F9A2098050930339C0
DB023D22CC949331C13287D1108A4F840235AF8E613FD6176485B22A31B165EA
8DE2F2534E57BC3E63D44604D095AAF56667F587FBFB99FACB6315A21101C80A
6029178A3D776FC5A4D049486FF6F8BDA83F84F24F3418F9B6CC9A7D1A1BEA61
08D5977450DD658D27C7FC88F089651B8D0F5455EE9169B550F8DB925DBA129A
E0B0567512A1D34D52F86F530F8232BB796E18C9755750C716D03F86B58F823D
7969EF29FF2BCC653D1702924F1ABCFC9678016BE967F956B06BA475B6AB33FE
8DBF5C5EB7BB25EB6D82D7209A95423CBC5511FB099A091E061B83F1A993B011
CBC04D93845CD355742D42D9E9ACF79CBBABCA8A5412ED6643985FA80DF5DB37
5BB76D8E6E9528BF149FDAF5C55996F56223CC
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.0: CMSY6 003.002
%%Title: CMSY6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY6 known{/CMSY6 findfont dup/UniqueID known{dup
/UniqueID get 5096647 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY6 def
/FontBBox {-4 -948 1329 786 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY6.) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 48 /prime put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A4D6AE353EAB9DBA0D
4335868937E3A2D0F9C8A4FBEAE138AE56EF84665582DDEF7B546714518D224A
F91D19409EC600924626D79F58E272E3657E631C06412F9D42732B6AE0A93D81
E2B13A81C76CC37FCA6DB35A1C6A572EFFEC7E1581C57B1D22EAE9C407771F40
71D002A06A6AC249FCB7605C902A76EB298B05E39D543A63332A91B8A1ACE05B
F902540FEC1024680B8D5857E4931D00781747C87ADCC45430B5462EA480BE50
D07C5C9EA0D8D6447324434CF0D637BB13037B6E1C48F191C52CF2B9511690B5
405280D5C825BD376EF12429837CD44BEA223DC8E199D8F85856C0FD551471CA
B30481FAE99B71FAA56B639F549F449F2CA6F5450AADEAD4C09595A7A8530D12
B23E012978225E112D23BD1D48DB097994A9D5EC707216D2BF5DF8B69E66ADBF
DBDA4737737F51EB7A38A4207BB46456A8117067748659D654B1D14849F14920
E57462ECFF602A181700A346C1E95131C6F1C66132915FFD999FD4105AFFE7D6
7DA46DFCC4FE53265B14D7326F5A44A3E97902CCB106AE99ED6434AA9EEE7E6F
60B8034EF80DF885FC63DFACB0AD1C00BE56F79B1AD41B065C59A35073B450F3
7E6BC7B90C9D9337F9636943ED701398E6886947E126F1E12D74C5E4B5CF06EA
E60F9B121B9B15E6752B127CCB9C26017A84BE6DD918AFE46DBF27BC06E66AD9
830BF2D6CA9E24A0199DD3E732405F3210C97C9BD21545B5E4DC10E17C1A2C71
851ED2B272055831A6F95864137C218E555B054BE3616820FE671E5BC08E7A48
D683ACDB91E05F469C0C8919D71027E179F4911E878F8D13F999C63C4EC2C21D
ADE1A11979B539C4C5746AA157A4EB4A7A153BC5D966197A7FF6A2DA3FDB161A
EF43C2D906C617868617E72163D5B0BC29C36A60867C120A02E08264231FD46C
1D3B62622A05129188D818E2AE83FB2770DF1D466CA38A49D15F9056BB7AB8BF
D7DEB2E3B3A8157B59D138787B21CE3B3A456E230CFEC1374AC66B7DBBE788FD
5182DA23264093CEF60D5BB0073AEDB68A61ECF1C69669244A1FA0CBA44DB83F
352AEE6012082B8A3FD62F4497B1BE0E4FF77FF94BF221212D63BC1E35B9758F
2D7F8FA002751DC0380AB954331E9AABA6C122F8F3D7E69CE8A6B359184F0531
6B158ACF34C64C32F4671D430820B36C9A9397E9C877D734B17C3BBD8A88CE2B
9F96D7AC5B8D55415E942D6C05392D03DAE53449F8FBE2225C91F228704BE9A1
ECC568FB2E90C73F2F7AFA62859C35F0FB26756DE719BEA5A3EB81A6481507F1
813CD1680EBFCF612FD9D3AA4B90688521446FABD5C54CAFE7B879F24B54449D
2B30738B137B5E212B34BC5384BC2216A5D13F761D6E13A043DB2AABC0276705
5C80CA394A8179D60DCA4651CE8B0A477165FF48A31BEC6B7C0852C9D72E11BE
FEC5E4B984DFDE90218C105999E070FC83F1716D13389B5EEAE3F26C82FE9A7D
3C67A98027D15DAD791348A21DD922C71145D287C7EA83B225377744BBB0082C
22FD44E1B0DF60956DB9C4790F4E2F81C477DD4CA9F4BBB4287914EBBB4F6E36
976C9E573496A2311E5C7677FBC4BB755B8BF925F291DE0442FBB8921402A487
ECF23EC556C3FD66158727B10B74C778FA91EC16629F6E949624D265FA6FDF1F
772E965A2C30C80AEEDC4A1867AE3D6D116BCE0F96D1A0C5138F294CC7C2AD72
8BE152B314E26422FA2DDDFA89A054CEFC6607D932FACB035FC9FD9959C4A468
CAC0F4DD41DFB83297EFFE36C352CA0A6B1485BF8433522BBBCCF9C73FB7334D
1CFC92348F91C4D0EAD90B22BAC6B27D21CDF5AE65C056BDE3B30424F76C8EFE
D7CDBC854B13EAEE0485CC348AC52F5345B7545B4FFC60B6E7CEF8D32354B233
8DF503A03F5201EC012AA67157F4A47B902D269A060A5B8E10A37CA7CAAFD417
1A13EED9533BD4A6E8845D7D236CB254D40930C273EA4372E0B13912B2CE9261
275D51D202D461FD69AE352E95F72D61683267D4951BB602A0BACEAFF9516F3A
C30EFFF3ACC08AD374A730287B148FE8E168089D239E1084E0F7D83CB9815031
5428874FA4640E1C216514AA16C74BD2B9A95EFD7B6B0C575A5D5B3AD1086CE7
E8EEE33490CDCF2E3FBAEDC984FE53D033987580E75E74E455E44496E186349A
DE4B5125F69BF79936565986B3D91E6A25CE6E1C4527FE22580A39805A91BF6B
90EFC8AD31FBA71FCC90EA04875B5A7ED05BA2FFD1C04774E1ECE84B4105ABBA
798C339FB61ABF75C6FD3F24BC775A7FDBDD87BACCB9A86B4D928917CA62C0B8
56343CAE0051A1172E7F234001A5FAA947CAF382FBF23E57F1144425713423E4
4FC1AE1D096D10D6FECAA6A9186B0D519F51D06CC976A65A37E9219492E6218A
FE9F99700C0D0D18BC48632268DA0F0CC24BE660E30645E7F63B0AD49CCA26EA
CEDE4DED685DBD38F5C4BB6AD6CDFEBED1B14A456C27C448C91CBF6337FB3632
7B9A565874F9849FC5E22C5A0437AF29E2B7FA405CF6B7AFEF66AE7449E89746
66ED2D4C15A36C45C0F64E6F185B808FC788984C230B4BA63204B38C309F2DE2
2937A92C184077F5252C9D6171EC6378273C32B61CF65E4DC124B321A4049294
BB6CDD064D4E07605DA5FFB7B3B0A55A09D26C8624F03D8C197885BFF0A20B77
257637447F628A4A642F6F92019F9ECA5B2DBCEDA63C05E5258C9DF131EDD1B2
B4B04E7A5441035163BC2769B79C89ECFDF071E3517C59A45C9E97800724E1F5
FDF504E2798FA9074A37B210B1C24DCC0B78263E2297ECA31D5C258BDD92D2DD
8C53DD3B3BC3835E5AF52311EF0AACD6DCD159C45743B1AE7EE5A0111DCC9193
441FB81F945D219DFF26BF50D80606DD3392CE941242CBAEA45077FBE6AD78E3
0DF4FA54CC33CAC27A337FF307F14E60D1FA48FB8368E307441D6811676CFD38
094A558CBF0B92503014BB169E345C27C74543CDA9E8134F85AA0DCE45EAF612
1AB1D86FFB5E13CBDE8E0F68B19E30D0D9F5F0A3EF2A84AEE4D7F1F63A045297
3F5C3080F313B32066E0C209C2708636C33A6531F1A483F3AFDFEA62305EF41E
C55594660133146B24184070B87C22EE5B80D66C409076D733245FD100E936D4
E844D8A15CF45C0CD6AB04F3B5FCB0BC7B1517BAF21CED4D6CCC3F19D21BABC5
FFA9768D77A41BC3F5C4595D868F2FCA88D6E41558FA5A70FB562E4EB22651A3
886F0ED1B46BFFF297A28ED67BAA28A1302BC866AA7A73418BADE0870872CE0A
305A5E46BE0CF6B5794539B8509F1E2DB4E40124D72201589BC4B55ABA2F5C40
E167175C7F7378203C949B8967E8CCC40F44A2D1D555A4273733874265542C0A
3C47FF7144C4DB276320150FD5CF453A505BD3BC1E98738A1CBE175574037D47
8EF9F80622F57DF4DAB8FB13004ED1DBBFB4664F8D7ADCCBD529B22235740EB1
216799B2D8CEC7CC4D16D8273B6AEEA427D480AA6E3C463F46763864856713DB
05307CE674714CAC8351410627B8D1087155F3788E744158F3428A767CDC9769
CFBE28A30D635D7C4FC44E43E7F13128A867389FD66CFAE939AE2745055BE71A
AA7A7817E24D38773771C77328F4A755C872AA977C062A3BF7EBCD6DEBC7746E
70346293A661684D3988A5D0B29860E6789FA8911E0C0749ADCB9A6B053B0E31
3D490B9A2982CFC167001648FDF96D040BEFDB75A4EB90E2974927BF38F10E78
17FFB9DF2A65CF56C1F63544662CEA0E88A5141F990DF6B5DA79CEB5B4744083
C4697EB37422BF120332AB934D292CE8A3624E2C8FE6862C2211254558459BAB
D8F1D8C76C604098701163703FAED0BB298396C86A0427106C007A7CDBB0AC8E
35F39B240F8D9D43C1BCECAB622C02E721A323383973B61DB81115E3552E4260
9F252F18E01C1EA2B0A1DED4BA50A5822D10AC7ABD664C460A4022BA910804E2
2094A3AE0F2AE375FB22CBD35CE9C2542C240A79BC6A79F1135E58985837E1CC
1E5D6666BC5D61FE6EF590316F9D1E80C42B9A7B6106D8B7F575447AACBB2660
2C96D7F024FFE3292611E82CFE62D95646B92CEF6F03EEFCB3F6950A22B0997E
52C38B55B77C2EE7A4D047F27ADEC6BF0BC639589FD0D1E0A47C948AB5BADA43
9846CBB5B1CE53E96622B59133303AA0F559A481E50382A2A38C98C1A56D9AD1
1668FDDBB1FE8068DCE68E5DA13C2D9918D1FEC7F69A6DDD3A29E31A57B7BDDA
EAC616202162DCC7B9DC52AF821A9C1D2D7F860A2F294904A55499432C7098CA
BF79B1B0A1527B99A4C57673AF54297BA822AF200FFBDEC475158AD6ECB55F87
555012ACFBDD0EA527CB5793CA7CACE2FD956F30D7A8AC7F6A98979BE4BD744F
BB84A87668E3DE62A814B92D3139981200D5ADA86C5D733CF5107DF6CB5C999F
F6F63ABEBC9694F0F67EC632BA8C58E715D92FD6BDD056F29753BCC3E54B0A7E
63EC33F7A29740EF0D8351B5897B126FB6C33E9A33CC83DAB91691690B8B9598
FD3F397FAD45555CF5FB9CD80879A0CAC1CD8E8D536F05134B21FA4065452DE4
BC8F63C82A3C34A01D00F4BB254F2AD7F6171EFFF6D7BE1213C9456AB383C568
BEC17694C545B98E8AD734D0522FEC92EB3182DDDAC54740AD352E7645D08B4D
CB4DA9B381D36C920C77869619855B4CF730E590B0405CD25884D6DB4D49F1E3
D79EC4D0489514359CABED492BD751104091A661A510F268EC681F818780F304
D960A15E583F354DD574767B860C57CC9CCA991E710576C626EA909C6677057A
C409AEE846B4D5C0535F849F33470FA395CCF5C05CBB9A1FB62CF656F7A2AA42
34730F786153A9856C337112F6A555A70EFA76404E2B88DA2DB91E8A2BC5A05C
CC339DCA364A87738B60497CB790EF16875CBC506695DC7D70C6ACCDB2A00555
3877A013482D55281C83BB630CB3EFB0657E5490176CF23420B97265B22B4CFE
1DF9E0B294F064F5160540EF3A452641C82E347A96514E4063A7FF16832736A8
6F21F6881E269CA09FB66DF37CAE7FF46D6B9AE42B6396EBF9A7A06453A81EBD
808B047421B0F88F62B3FF217542FBDA872D03A476FBC7C0D658C03AF70ABB40
03F1A3027E0FE186A22AD461835877ECF843C0E8B8340306092FBC5E91783A48
E010EBD29F114BC273BDC53D2C94275F8956A74561813AA6C2D896CB3F6E13E3
30F6C230C00917A40EC6F4689B65BEE32F5722BB1D1147585AB3B3D2D5EB8273
CBE30D1C6CA1BCC4BEA9B87A014E7ED3CE53D13ACC8D426267CD3BFB8497E1DC
C51CEB14F9CFB4D4BC9D6EA5A49DC3871DE59C89F855F079299F45D363F78634
493829329E3F370D117DEAA18E7A6989C515667C2229779B9A5494DF0B4109E7
71D79D379FA7B408A4675FA3DE17ED0ED632F9A443527CDA8E960411AD4070EE
173ABBFAF9101BE92BE59707F98419503A85AC58B949E8595D66D7B13B8FD4EF
11B28FCB5955C5F147BD7FA141AE0CA2ABCB1CAF82FE22D3281852205087CF45
549F4D5B47F52AF50E8F6FA0AEC0F95FD0B1EBDCF965BC8A924CE0F4598AC546
C15CEE4EDE7E6DD0E5FEC3A531B944CEA406DBEE21C4CF3384A79D0D5CD51BD8
AA5B8B1FC987AEB57E86D3C6FDFADF998A6D6043449FA5B88BB2DCBF2945A513
AD7ECD01B39BE46A577437E1774C3FEA176287C51ACCA15909E987B5AC2CA664
709AA5605EA89A8DCE6B4014CFA781E822E8B05F377BD0187D5EAA0585A98E2D
6726C471578295D824D1FBFE89F04A67F1A360D799CDF92C1218F29C24DE22CB
C6B625D044404C22C89C433715BD77D0BF171030BA84E292B7A81E2FD99D4E67
BA702C2EFA11D4461D833E74E97C9E295C6D170DB6BD73D615D03E678B0296C0
F8BF99321767684127625942B4C3241BD0608460C81D97FA658BC179917B5065
74A4D1F729CEB1D51C82F9C90F0C712917AC482D413ED7CAAFD545508652DACC
1A03842E354F734C5FCEC8C7BEA4C69B066DBC83BFAA473D0A632DA2CEDF20B7
6C7C83B4AE2AF7E05AA2C081BB6870AE38848F3870DD62C7D56EF1CCDD4BA3B0
32C61ABE629BBC464BBAB06AA0202772C16D82427ABAB4830ACEA267B0109A81
BA5D832731D1E9C9F0552BEF7A9B7AAA73760C6A09B910009BA9D93F1A56298B
A43A32D43CAA3988643DE373FF47C176CE92D7931601F0034E6CC303876498AC
026BB32D2F656A3541815697CBA2B6D527B69816161B2E13171E073D7CD85435
3D32708391F63D592B71D98805CD19978C2BAF780CB124372EEA0A3DAB537683
DC74F9E9EF98843F170FB086AEFD526CB81A7CC88046C52E1E56EB40F6F5C75A
FE9D5ADE49E82078858072F68BCD02487EBAF4E3F7F309628C1FDCD4B01F7D00
E1AE0A7CD3455953FFC77EEDCC5B5ECB1FA583064EC17132A3C12C0153C4B87D
AA57FF73AD33C22C81C545F0593DC7EF438FF7A5F76A04E52848E00CF2C8CB06
F295B1CD3BDB1D9E4EDD765D3753EA8DB76DAACAD75CEAC866FC4CA41501200F
F12998E8DA573786AA9A7232287A6D19A12536026BA4423EF0B6D81D38BDCD9D
2BEF15BCF32824F8EE802B461F52BD926A5BEB2E6CB31AF83E98E849D4339FFF
95419941B12D2F3B76CCD34D6B78B91BDFA5DB4D4879501DF3E514A5EA8F1713
E96330C5B4F1B7BA42D42F05E229FC303AE00E954A81F9BD43016F5930A0C490
6C753157E4355F6ED3C5D1963779EB27402522B5E9D459206B3A06E594DF198B
785F96B96E13045594EB42EF4A8BFE0DFCB4C5A2DA9594431FBE72A5AE18991A
36FEB5FD9E8B238B3A095939B6ECAF5644BCE7DFFD8EA3E723F66B305F142B71
B26F34E0538E4B58C4B5984883C6B08F3D1F596B56578FFB0EDFFE3F95E3B6AB
63CEFA183A5A49F07F0F7559994F56D7305139D06AC8DF9466E715D90AECB1E2
C35E3CD3F387579B3C9CA6F5BD741A7A5D7B63FC0130AF374124DC8C6AFA4FAC
E40BD5923FE889E87126FB22C1AC4FFBD351F884D70803BBE1BD0D40D3CDA0DA
F6984C373D3174358BC41C8DD4A215283ECCBC24F345FE65E316F24940198A6C
3B5483129706AEB60D6C0CCE0DF9C130593475C72A92662A323EA5B689E5AD0F
C949536875C37AA2517281A36A1C1D5650AC96E0CC00C03266E279B54232A1E6
E6697196A4270E1DC794D8DBDF0690372AE19121B85FFD357E965228C66BBE6B
D2E55533F7A1BF30B2EABBAC98CE35C619556CF9F0A522E8EFE4BE3EC61FDFE4
E364608963C928AA8B302B1636DE15C83711C8FA060C5BBB1BCB8E02215A4F4D
560DBC4A235F6F07EFD20ABAFEDE0795AA3932556D6AE3F6EB8FD0C1C509FAA2
55CCC2703661C9F48233B429F020E01C1F3B8090D331C3B925DD5D1CF9D19F95
6B192C593225B5186109D3E6636E87BA6F24EFEACD1F06A29DB1D1F4DE0D0253
87641AA4A1113755D0DDA6EE4234CD9AF550DF63A46FC6F698E623BBF6F05278
858904B415033C1A33B7770D99247815E2A8F1216EB42EF9742EEB4E1D90EC3E
F2C0661DFDD996CE1FD66F946B9D4FFADF86861CF8EDCD570CB400D181697747
83F38B92B1803874C24AF99C66E5F966B0E72B725FFBC6172341596D8AE51C3C
4676A65E4D32F499FB1ED170554DA7AFD79DE5953988516A8B2B123FA207BC49
D80645DFB16A79549BD5E41606D80424DBFD6F5BA1DF0EC271C596EBB4FD0B84
DC5EEC45C3FF598241368442A3FB06B460C7D46678069011FFAA3072402D4DD2
3DA6139A548FA99A68AC61134087071ED8B4A37A0A8A1A3B48A2A8CCAA351D75
1828BA7DD5B7758A43F98F4D449ECB58B20B26C40B35AC82623961CD892B5DE3
777908625E1A91DDE62DEBB2EE5EA3CAD7E089F421DF613D976660D547CCB02B
3C6B01F009299124A78E46BDFFC3F2497C435678B4DFF0E94094B0DD3B930E62
909CED0E31BE64C98755D7887455928F3FD7439E6585D0D52DD944C862457E6A
4408DF452780C5726F169B1A39142DA956D27AB53C0741BEEC8FD4E438EF4781
F3ED5AA6793B1018A5E069DC6801A04FF18F01E98BCB65DEC7EFCD5FA1C9ABB7
F755BDB82E4ED475C601B80CF3B9EDCD76D865FB0FC7EA564EF02982F2C39F94
0B32D3BB74B44A6131AE0269B8D83EA7DCB011FDB0360BCC2BBF2D9252E1B54B
B5E92587253180DC2EDBDC37651A003E5DA7DA387F5A27E2AD94B2B3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR6
%!PS-AdobeFont-1.0: CMR6 003.002
%%Title: CMR6
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR6.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR6 known{/CMR6 findfont dup/UniqueID known{dup
/UniqueID get 5000789 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR6 def
/FontBBox {-20 -250 1193 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR6.) readonly def
/FullName (CMR6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DAE339BA29C1C6F656
1DEF13780383DAE38A868377CC7D396B2A05F341AEE0F8BD0A0191F51AD11A4D
2E927B848A1EF2BA15CFBE57A51E3AF07598275195C9613041F71C1AF39E61F9
EFD5F6512FBDA76E29DE6B508F62F5CF9F73F5288DF1C7B0B82C92D3B6358BAD
EC3CA20BDE55DAA7CC58004AA86B6CBF8C410D8287E88BF20588A39309C2B703
CED322F030AA6069869064486CA651DA054FF3F5E56534CA358B0829A6B954D8
9103436E6B06DAD1658BD4A95AB41343B01F5866FC87C4EDFC71F1477C98F8E1
1DCF27EF743FF90BF918AB8C4E5AC35841E2F745480E5EDE1C1DEAFAD8D0018D
2C1F1CFCAD9F6609859DEDFD1648A6CD23D8ABB80747F94899F17C8F3E6CA55A
E176F19CDFDAA0D7C920B3A72051A4745560AC81978C92459EEE5AFE85AB247A
32981139CBE352B248F4BE5F73503A084A3E91F05328EE521D9669E44E202584
5407E7846F9FEE3D54EA18FFB144BF2D6803BF65AE402034B3CDBB40DD24217A
3CE0E95E2717CACD603A958187C42B3558AA38D6B6390EEEDD396F96E6041FCF
6F8888221AFA87EAD79F46E0E32CAED91E6C8500879AB6E580C581E8C8CE9B68
2BB5EFE2604E8DCB2432D39D75EE556969F1B2FBDF6A4BC72D106AA7CF22C268
464027898B311613E06E1584707F262F71D9F49D2149306A88E02BC60BBD6BDB
EF41D90F19197BA9AEF32B5E63D5B9FF41B5602F9F786E76621DA54D574981AB
87A72081EA05D6C6BA940EFEBD0904EA4E77BBCE17E20B42E1722617E0F6EF32
F1ACDE9D758594E9C81049CCC10605A27C2A06872FBA9F159CB155609B496ADA
4886F478E44029B5E620DE8319E257697E93E1CDFD27D560E2E4D34507020E2C
D9FF06BFA14E056D81DF701FAC3ACE4BE6C098AE116E079F0044391EC1661F6E
7A93B9320BD7F91E8FD2E8EB3F5CAE997D5CDD35107A1D35302260D1499B8B65
39625B7925F97D917B66BAFEEA992873F07220714F192839948CEA080BDB9A03
77B9DD032273DDB5629CB28B5D8797EDEFDBC601823E038384C90C79012A7D96
8F27784DA15BACE21501C26E3AFA5DCCE81B52B0ABAF71A35D33103EA86F2415
A39A830D559C5C6CA7423945BD3DFA942B20A06D7A8D8671F9831DBB52907AB4
4E54776D29C6085CD9970B6DD21DD3EA8EB09C49CBEC6CDCEEB0BBB1B8827109
3BDE64DDA024D67F098D6C1998506DDFF7907ABAADA1C39C759C850E0C6F8E89
A392D1C9329ACFFA92D361218D75E115F70A47C53B73B356D703E9C499AAD098
AA9C8119EE9E9708A9EA3049E976FA19AD04210D5F6092C7903FD155113F3A3F
269B746560F70970AC9F8D09956E0E84DACE4112C4E7C7F6B3F0B63D26EFF95E
2B2E9699D16BC8AFC4AD9113AA3A974C9E82E877288CF71E9169D2DCC61AAAA6
C536E5604EF0716F6487292BBB677518504B52C63822BED3BD5FD14EB41EE6A8
AD4B6CF90D39F98E12A765B645CBA3E8552FB9A986390212CE119E7C3DD675AC
17BD006144BEC534DA2A860188619F17589008409C5A309CB83FBA70F6446B6E
2B56991B6A03B1DE10C621591CEE45BECA27C54BC8B4F1754A9E8F660812710E
117850E1BB6FD89BB13F8CE391C43DA89EA67E9C3E7A4697790EA26B0E4E2E80
DCA508873A7AFFC11B8C02EF86C2316E8D8B6BCEA37F81A3A87546705F070C3B
9D4D28C366CEBC1EE485B8E2357DBE46E86C87B9939DADA60888AA9F1B92FECC
CC1C198DDB594BB70A8FE690ECAC21A414BAC89BF019F34D2A130F485EAE35B7
2A10C67EA3A48A4D9734759CC93AD85C6A570500AE5AC9973FC76EFA06BF5DDC
26E20E28D16B50957EE01AF2653F8D860817967AA5A9BF9BF7ABCDA710E9F34F
4F0EBCC32B3C9C2971F6225D2DAA6A451366B83F32B2ACB83E746D365B2DE38D
C1AB7447FE7B37F9630E410E5D8F0ECE74DF46C538947B3A167AD9F3E4A7EB3D
60F5425AE75AC3A27D39311DA35696C3DC7282AF1532E7AECE63D13DDA0296A2
01487185FDF1875AEF55A36C17D6A8DD329279D229259463A2F05CB7A874374B
E2320E1F6CFECB9C1CE62FF468C29751ACD9754AF1EABE8E7696C2888914416E
235B6766F20FFBEFF285277B639A51EA2F2E30D207BC891B00F0436008F980E0
9EEE7FB375BB069B9E0BA11DA951A99D8E60B4F920A0495C247FA7DE904765AB
DB5C3B2D634757E43EDD6FAA4DB3C67F82D6853E1170F0B2D8CE496DD4E72B0D
28277BEF172F1402959F64527F9B640619F04416DDB9D05FB2ACD019CB9C119E
E544D24EA6DAC5C69785394EA50E6EC9AAA9E14B904EAF29A733C6D7942B63F4
85729686742F26DEF78DF0DA1CA7CEFBB684F4CAD99021A3B3D1FE03B9C5A4B1
BD04CAC89BB91B11952A2B17A61789BEE0C54B46C03FE9A1AE73D17CF94BA30A
237C29D414C3BCE8E3E2DDF83C0BD59DCB66C4D2C3DE73DA8378F3C6C8035D28
7464399857E57651A53E9C4AA68DFCA91B2376CF98AC5290FDB9BDAD9EF1604E
9B0A70EDDA1E564B6D2456E7BC722454ACA8C4950FDD44B6EB9AD01169A9F845
B06A0DDB7897C847A5B1F42258AECF3807AE936C8F52C3A7A0A85D68160AE442
FE81543DA6702D76AB6E8701F80DFC1D87C961E350D0E52AB2A298B9E5908600
7E14D2A87309043CBF13F69AEAAB1BC239DEA88EB5176624F6046664B1D2691F
FBB2071D3706F97DCCA355A6DCC4D09FD35DC078FBAAF672FFDECEC61050A120
10B5A96629041303FD01ACCC7686165DED6AA712FF8E5E85DE33C4E7D877C49C
6C469A90410BAF60BE65ECD91CDC2EE7AC0CA8BA7B53865F26092BFCAA0BCA77
B80DC51DAD09C93C8DD8E43502B4B68F3D5918C3492196292447732BA90F5AB4
9F5E1D634ADE1CCAAD028DE5EBA9535F6FC5908DBD2D643E0A7E059C8C386FDC
E72659C0033F535C0D7F6B98D0335552D0BF3C6E302B672A5EAADFCEF81912E3
8F54E6FB7EC2B325125159713D0AC50DEE3673B9B148643727E94C80971A2E73
5E1E13237BE69C84FC039DCE02ECE2668AFD047F21A61BB94A9F498C9FE5CDEA
B274B40728B6F6CA9B6C15BAAF92F465B0D7311B46545CBA90D874839443CCB9
3110F052EB247B24B45A3D2FA6FBC7EB2A4BEC2A5892914B3C5EA3F4F9B9DCBF
6F932D95700E045B49E4B1F2C9D2A42CF39CA2F5A2654E6E8E6E92473D28AACD
5E35C6705EA728F704F5996D286BED433F976AB7E018621A577AED7C0AC0A84E
A032FE1869F603E6F20386E3A190A30A21EA886249ECF8CDDE2C33D73BA8647A
3DCA7A8DD9E8EC8D9A415D126BA38B6771C489DFC419303EE9C1B83FBFB3A0B8
97D64F30E4BCBEC24DF603FF3BF541E00D5804B6B6543D3D2B661CC551D497A9
9DFFF535AF424B2F3150BB39AAE8CDB306AAD37767BA10BADB031DC2FAB16955
EE78342CCC0E8B5976BF98F215461A8C6F63EBE6E2F1A1104662DDE53388CB51
8B44F3534853B8095F3B746A2459C2EF800FB1EF7F235EBAA9731E3AB3BE4369
1D3636E3ADD5BDF0C34FA80E90D8A1DDE770943FD196E0A7C5F1FAF6970B34C6
4673AACA6B2B5C12B9608521AE736C1F4B97209B063D991300ED5AF3D7F27E76
68E0B858FD8BFF86581E2B9548C691E3E5D9EC4D39C9715CDE86C7D22223CCEB
8A38C776A30AF14912390A7546DBECECD7A687D4F08646E57A12C80DCA022B7A
33399761A50B8E0ABEFA1163EDEC3DFB5DA3248792EEEDD894872D4E6814B4C3
548BAFCDE0CABBCDB97EC6D1BA47F2E77CC1389BF19D73661749AC33F46A618E
A665A85776545BF9662F2179D7BFD604FA8EF4700591AF3AEC647E27B24B76F3
133F9198DC15C1AED830E737909E43EB91C334C44BA35810007A3888E33F5DA5
B3B2C35481C648AFE630CC3E08F77744E401B2934E407D1EC17ECE737606B076
F8DE8EF3344F57495EF49D11580D6FB28AE0B1422521B320843B13467501CAE2
3DB93D7BB779F73B6AA30050DA74BDBC3F8DBB30F32EAFD07734A151BB2BAED5
C9B1F790059339B64BB4146470F30928C9A49AE88906BD6FDB7431A4B50809CE
0F67ABA01CDCC2320B0B097187B9299E3D80CDD7BB5DD5BFA7B28D924C5633C5
45A23CCEE097C41C3759C1FA8DBA0DD95034BCA89BD23FAC18C70093F40FF2F8
0FAC5DD4835F2DFD40540E9A9E9FD951A8AF2CB766597DE00147B163BACFB7E6
EFDA4DED594F1C746D8B46A1145E0E4058F5917B3F21E9BEBDE745EE72CDCA64
FB31EF7A2E55265F32559480E2B6726D3DE26FFC97EB4E3160F117E890C4B2E5
8DF310E6A728ABA85540F571C024F8DD58E1D7827FE97CED5EB31547EBC36415
02B8C0E10B7E37D816F01D56A364B8552CBFAAA95BC4BDDCFDE91CE0EF005B4B
7AB56FFB47A093AEDF0DE1EA48FC8103CA3CA1470864D2693E360006D05668A8
AA422CCCED20DCEEBEA5CE0DA1EFB00FB93E922B18124FA11A88D0F6E0F719DA
57603DD5DA42E1C56C2FD9E5415AA199D4F334C151C1157E75C107FBBFCEB706
5F4EA47A29B54ED8CAEB8DDA2F53D2A703B95487619780A52DA1270011648A28
AA64338E04AA5B92C1EDF3D8DA34FA6D227A0325EA6F22E9B38B6338C657BB21
CD4C582DC04010330F62923F817E4EDC6E5C0E6500F2A975A8A95BAA30C4A134
BB31B5AC45A2E7F6E9CDFC810D41344C4F606049445F8E93D74271C1E29DF7CB
5459593BA28AECF64D903D3E4D77CF5C04B06DE44A41EE4D9FC769854503AC85
69E4A5106E84016DE3D59865D4AB30BD6C9E45C45DCB5408421CC50CD6179C85
34E55CC70FBD8FEFE9F1D5160664981716E3BC7F24B6F54E0323D9BC4B692971
24419EE62D8B0BA726E2B4294A9A76F328B8101DA29E78BD5C4AC383350FE196
4D42DB1653637D19530124858950C22F1E9CF5BC07D46B7A58CDE19CC88DCD2E
7FE4EEFD8AA6047E919823C8CAB2EF5274F45E861E6508CC11A8AA90AED2403A
B2BF1315C2157B3B50A3685205D93E40906EEE9DE5985405974BCE0B84BB37DB
080A45C5237B269B93C0A7CF294A18B45464A41F604C494CBEF829A381155CFD
71CEEA54CC39EEDB6DF58A9896246B09F95DC6BC40BA6916AAB5ED3D24F66154
3662F8978FC63DA9280FF7ADB09EA5BA79D3B66E0C88BEC1EDD78DA93839073A
A4D7B0E627000C4ABA76C47CCFEE92E319315333A5584A951E34C55412049C4A
A5569FE65A006F77B416E0530AB6A8E7AD6C72340AD4CE25937158FABB2153EA
281E1D840206F5DA38E00815E9081F81DAB9FAA8F4DAB305867AC84735DB4F52
A36129929BD2084A8EA37BB6889695204BF7290B68D5E722540BF8A276F8BB6D
451D582EE59D2FF03F6B97DDE05FA00C3D375D2D0AAC8FE298F85CC067B15481
48D70B6A0354C705715B891915FE8EA45244677B9FCE81E72D66177E309F3F83
F744B9EA9E55C3B30DEC6E5E03B3988FD526A82A5E8E1DC79127FC62B2FA7949
B3AD3148868DE22BD4B5708E32CEAAE6ADEED1F463EAB9692411E18F8D6BF391
126B2700B4CF3B59D02E3F8795130C96285A63FCD1E0F647ACB1D35E9C58BD01
1DD06BABA00CA4343BEBEDBE677E053E9732B33A7495DF51782A07DA07F5646C
770C957AD915CC70BA8E08BE7A1F4E6BA5BB9C603E38F6FB0A2578471C4D02F4
283069856D926B9076EC73AA39CEB0A061AFF1575C7093FDAC9F89C3DC06EA45
06F3C2A3BC9FF21128B10CB758DF0F099B459A5264A8C24C098110D2BA1A8532
8FAE146A91BA7D033F591AB1A94B8A6FE0FFB610F698D216D58B4EF6C87B1524
8037CBB7E23D8550A620341C6625A1A2ECE7CEE2598D66277F857231A36155E3
984F147783E9B93975AC38A29F2FBCF704C8A04AD84C3E04A12D2321FA56811A
5B6744813CCC187968C5C26BB8D3E6615A912FA5369C01CCF8C0DB790593B190
1A90CFB5339B8771F325C5FC448D36C7312B11A15A8635BAB59CF3CAD176131E
026F6E141B2619EF7F3048750CC9291397F141591EEC8B612D6656DD34DB54D6
DBDD303CED74BE76664E7DC86FCFEEF2001C9DBA56418FB61F589566A47AF36E
C94671C5E8939AF9F4D53C0DE7142B7B63C86AAFA65877EBBB48C64589AFB2CB
1280AC099FC48058855CBDEB6C2D2A0D092267996591DC3B5EC8252984E9B27D
2E9EDE8CD8303F0905DBFCAE497DE1B755B924452CDE11CF4F20893DD6FF7251
427F520FE00580DAF1703FD968E0F8ECCDE618E1EA5820EE6CFED97C78864EF6
26FAFEEE194A268F24249D44829AA360D731C34DC285501E966A959180718F72
6330E4CC060588A2F65AE64A720DCAA818D49D4440F5D0B6C1F6C3A107E12445
F1BED2D3FCBB87A9597F01C7332AA79143564056219BF87D4B907A04F77621AD
054935E883B2B137D3D1C4BC792E8335CA08B6D83227F35736C41312A0BB077A
60FC6488C5E02FD51A10AC113D4EF70038C649C1677B2204A77F2ECBE9B3C341
F4126BECBCA61E3F3801F9188A3775924A62D30FB096B440286FA655EBA00A74
9A4162904BEA07CE68EE76018346DEEE20839C9A2FF71179B58E1D4AB30856B5
F5D97295A097174467010B15D733AAC5813CAA633746B430B1AAF9F997FDAAFD
436844D1A56B8E25A89D2CC4BA6EE7ABD167818FD4F6C747E07B262C99EE2C35
323F0B471586CA50F54C6381B052B15B0C58C19DEA82C0CA29F00400B727419B
2379979CDCBFA966AD513FA903160C571C3BF1BA239540B11EF2371A3880837C
6D6CA2F374280CFA1586427AE975A2AEC34244874E4D441DBAC6CD1828841C91
069AA87FAE849C5DC7C9EC1B9876E59F3CCDF8BB23D939F5348D7486934BFB02
CC5A22541ED352616830A510DE7732E5D8F7E785BBD31C2BC9D348CE5632654D
2C1740F89D57FB2AA1FD8FA3304EA03F757BB8F498ED98E48485722E78D97B12
A05F3A28438084D1CF90AC4C3FFCD7B3365941C45E1E02CB13CA1E99F7FA1D00
1C9D489D5C95F019AB4CE89FA3B6604473DBD2CE8E278969E0A0FCBCE68C23F6
9381882443D3FC16966555FC222F3FC4B1207522201AB7A15A7A6F22CDC9D392
360BF4C95DAD35770E0AC7E5EFF015F2C74ED7391F40EC94B8D1C163B5DEE5B3
911A20C2625AD3B24BD94D2A42405E655DA47D3F94F882CA2F479437B4E0BE71
8AFA4482C6FB270F8D05B4599A01403DAAA90C01DF3AA7C2BC7E66AB6AA833AD
FB6E5EE13E45CC7CE7E200FBFE639F9CFFF5D08512C02764997FD28368969BFB
0876F236EF6189BE73AD827332DF1B2EADEAC0ED3B939CE5BC3CEC78975FC636
44FCBC2CCF4396AC7343EC62E0E4F3DFFA2B880BF31D93ADFE201BE9CCEC8BA5
0B9B919E05B851E0909968DA259EECC6AA0743F25247978CC09C28C4F878E29A
5070E4023BCE95FE0ACCCC01D0EE219FA8344E8F6D7D4347563BF8AC030B9097
41F24D4BC9494915A82EE9FD37FBB6A46BF077B728FB569B1258CEA5F51F36BE
4F4D0F890D782E44748CA3FE8C8A515998371D9C7D2311F192B4B7E7C68FC6EE
3F7136714C282A2570FE591F247A08319CE9EF1E43274E4E57166E31A2ECA506
85350DA31AA4C33C9687F5210BA225EA1007C444FBFA2126769767E47A967884
9F68589E4BAA9ED32A7A466DE35554C132810C68ABDAE536D9D884352F28EA02
8A555D2CE11F30598F44A65E2D86B43ECCBDEED9E4E5B5B7DCDA20EAA09D9FF7
422FC91F2201431A9E8FC624FF44D26C0100183D77BC7E6B1A6CFBD3FA8BABC1
AE4CB0FD382E26BE0A83169B46D91429DCB746A0326243E212F802AF6A56C709
6E70C6C7CDA243F0BDAA8832B2533A7133035259FD4BF7ABD4F214ED51BAC2E1
7957997FFB4B643294EA147956179DDF4B4BBD1DB724333E2D5EB49BE2197714
9005D675DB5319C4A1654A681E5075B0611D5638F0B9A64DF51BD6646235A81B
45F636024256624B8FDC48D5996ED405D9704C27408E9925014984E0DE6CDD95
6DA8543850C0BB8691A91DFDB74CB0DF28F825BD92C6C18C5A959F9234DE7E69
675CBD9EBF2EB8E34817E951A161999C2664BE0D11B4400097012F5031B5ACF8
83949020356034D74FB2D57BA3C3A2A2BFC5DFE014C7A13C61B6BE59EC9D7679
55FD9DF58D076BC329DF950A28672CD8A33B6E7E486CE339993CABF85F93B356
7769C76AB18E313839CEA4C33FE45D190D37F01FA2746F288A3DA17FF4DA285C
5A6260E86B7F75F002343B90F92CF1E602148DFF4DC42DB1F3C9A5874B536BF3
32B36319D8C7873BD008044788F283F8D057392EDD7046CEBA92D692FDB94619
0441733ED617BBA362F72F7171793A38759B4E388ACD481BEE18BBFEF9F3EBB0
C8B5AC6E70F8EB41A61EE7DBF3A84555A34E64B2606DE030ADD3B2EA4F8C2BD8
BD14F321D23071A729E56F1508FAF9842661674A1AA680DD01439AC96213AD23
C2F981445D19FA8C215C29B3575F3ED975271F74A0B74DA0891F324E5A30C5A1
80B7417ACACEE8553015FD052A35EDC51283BB3D0B66DEC16910CED32E031A16
EEA19ED6C6736F47E982E29C6848AD2C26176872E5AF2F8A4F93075F87013FE9
002282C19558E24ECD9F77CC747449E05D3FAB34264413E50EF3B5355E091FF8
EB97BA392A84E536CC41C1859F18D0F9C68960228F8D637E0DE891252F006CF9
E687F57AD4E1402A70E068D9910D5C7107A32F0C4FBE1D0ECDE9393CA1944AFA
14EF5243E21360A1B1FFF2E2C7B7010F5F989B9A1C09915F5B33AF8D6130403C
3DABAA3E520911A61F9E725AB816F93139EB9490155852715CF757D0FD5BACEE
D85F6A291F30562762938550390138B5190A0511984147F7B9E66688964A42E7
5935FDE9A7CE547EEAA5A38411ADAB145C94B86E5E49CB4874FD30A64071F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMSS9
%!PS-AdobeFont-1.0: CMSS9 003.002
%%Title: CMSS9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSS9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSS9 known{/CMSS9 findfont dup/UniqueID known{dup
/UniqueID get 5000802 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSS9 def
/FontBBox {-63 -250 1027 760 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSS9.) readonly def
/FullName (CMSS9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 73 /I put
dup 75 /K put
dup 82 /R put
dup 83 /S put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C295470093CA270C5165C6545D6DD11
633CB01CF6EE3B37AA823D92F442576C06EA48520F0F737DD7E36EFF1436913D
7B55347D27E02EC93D8F98260A4CA0D41D684DC6D2CCA5746F13A862CA42419F
FC585050BB153883D3924F26A261CB59E945236BF818D1067BEB62B89F25B57A
C81D10844C89A1A648EFABD92B5C8FC1671A9361602E52B9EAEEB8A603C8945A
F8295D0706DA6CF8964B671F90DBB3949ACDDD20530134FBEFE9D1F1C429097B
2A8AF2818951D34F2798A46FE02C69BCE1A2B4C11DF1D8FE0610BD9FD2016D3A
ABFB483773ED4255C1B00B9484918BB10893DB86FABB84B063B0F287AB61C16D
6751C62EF5CDC87DD0A92D85A316BE8C707249B5FDD5B61C1906445E2B04C689
6A8E764A825A75424F14E0CD2BA99AC4746E8E0DF4C4C682F7A0900A2218135D
E5E58CA35D1ACB83255F683AAAEF8092CB082A8CB0D779673F065D7408FDA080
4E12BA4729806B39E930A9FF2280D603F9F2EF1067461193BF703BB5383FFD53
6F67E20F0A88A204DC683CBE272E7E8489AC886630624DC40BE31A47B8AB6484
0014D5A9F629CABF60681786A720D84713972B0D590F2E22A666756EC35876A2
37E893690099F6F9F0449187021D72A7B13E04B6FA937F7C2E840FB766EEC767
5BB4F23E26CBBC216F73770B50F992386A289574CD6F8F4C9B7588BBF8482DC2
3B33E5257C797790810BE889DEFA050B290D6381943A222F1D2560CD26B72FED
A2013E359EBD486CA5034784707060F17E257BDCC5798315E7699EE7EB576FE5
8D35505C808ED586C153AF420529F113ED9A05EF1C7F1F606F62BD2FE1303F82
3F483CB2EFEEA499D3EE8684DF5EC36B4E9035E56D5180211A849FE222D99210
8A3CCB004CC1457C3647FC73F64CBD2B02D692E0E9B7EABCF1A29740EF0DC8A2
CBBEFA563DB9D3BF920E504EEFDD56036217B61D8E08103405A9781A9CA6B9CB
FAF508A835E2D49BC7CE894F9D0B7B8E759660BD7D53492AA89CD26D603458C0
776258F3A478BDC8E4D9C55C92F38C0A336C8FA39D52533A4439945B045CED20
A2D9C64EA02D34FB4CD7B377BE5B4C8C110924DC0F71DC4E0C5ADFBA8D9BADBD
4EE8588E139E55570360D11E05A4B233DD8749DDA75E8D53DB3FB331B156D437
5D2BD10C724ECD919780AF578C696A53765533FD4D2527DD2DAC8FB7A3CA703D
B34003DD72E3D20DA315CE4B62018C685D071E9E866A224B2E72C4C417E62FAB
A678429808F95F98207C4A48621F6431DDCBDA2D137C43D765D02EC4A724C0D6
4DF9E07A9666A85DC95DA2D39DB3F90F69BA2A717796D1C87F5D1A22B7537740
63846E8CCB48F3250885A8D3F83BD9DF1A8C14AAEAA670D438D47420F6DCD38C
8884C761985EF58B8BE65C9FD1703F24BDAA827F7FFA56E5828E1DED1CAA75F9
6E00B8AE3127204BF420593221D6E7C35EDBDF8C1135A326A43CA14CFA2EB30F
A3D2AD65DB0E6E8F1D242F69D4B5B4A1DCC937A129923070CF0BCD8C016BAE0D
9CD293BE8446BD1E4C3627506E78A346E2B20107DB58F0696193A02F4C54603E
CBE96510F306101B5C3F86EB222743244573B84919C8683831F3034112CACDE4
6B9FD23FA96BF3BEBD96198B2F19D0622FCBA58AFE129420C374BF6EBCDDB1A9
99829124589CA5564BD5622BE33A1E3BF0FC7D1E6FB699A3D553D86CF2C3B748
CEC5E58E948537DB684BD8C57B1C5B6BE0BF32C1F958147792DE58A9CBD010B0
6F4FC27A1AB18C78A83926A627A8191DB14152B424A87AB752F8979DBDF02537
B6AEFEE65D271F9E3BFCC90C0B082C3D1F77D2E1AF27C1091ACB90FDADD69B21
7F8925C8232136784E63A90A5226D9C46DEEA7A7AD477BD3CC6BCC772A6A7CE9
DDDE578B6B71C73E60E3B588A76C4276A3B68C9E4FB771530139344ECE15CB77
048108E56E60C55781FF4D9B63E43E606187C430FF2CA43B35373556D060E693
628C9C33327DABF70C169CADDD89392636D1F6636692D1DD600D7DE98F73975A
9C3CF72D5552794EFA5210F3941D39A567352B083533E9CB9FFCB07304F60F05
38BC6E9B96B1381E84C3EDDD5DCEEF9B328B5CAA147BD686063B686856E77A2B
C7E29ABE94452AEB3B68C28DF3417A411DBB6FC328F182C1573CDA9AE2B53A94
2F964CFF55479F3AC5472D794B2AFE97F34FD09E487AEB96A5E643C9AF82F6BF
1FBF5305A7334A8E90DB30C3275FD3058E30C6B8C7B0473CD97D91C8451947B3
763E2998318E0C180AF566A836DCC5E4C22F18BEAAC6CCB9AA98B156B59265DE
661A3049AD676BDACC9E431E0C4C0A3F1C794570436D827D8B4AEE442DF6D9A0
EA4B7BCC5F0CA377A914C1B49B66707F2D37D5AAD8357B831A052B65901CA3AC
2D476E711D708860666413CDF348E496DC8373ADC3BB8B4A15F157D1E3E50A48
9235EE6CF156185E5FB4A8893138E97B4468E54B8E5CBE6E1541DF97558D27DE
902516C70F1298F7C17E5FD19D34F3E38169E1D6DAD860109CB3A116B13EE719
D9A6F56F92DA250D5912EBDBC64AAD62B6727539487816DB2C2CB1502BF67C55
4A22868F50CBA1CB020C2BBA91C327106DCFEF15A41511777B30EF6D9E830D33
5551A85BC5F175E1F1E4E6E7477D347A066A881E1AF8073163CECDA77AF62BC8
FC634137FEF052367138D6893B03CFB5D8BE8DD201C94375A2E2CC9898AFD52F
A98A7B235F743A9E5D3D7DA8779B032D42D30C8B685CF74241935CA8CF4E32D0
0AE9E91C4935D4C8F1D4B04731C6D325BB778A9661A42738DE1E63D85CAAC9EE
4C8F26FBB61365A8D1B3E9E4A2020A7302594E7C992C56E5D21F421254857807
293F58F42B00098741959B71A1F1E7FC98EBF7EF23DFB49096DBA6FC5A4704A2
81F71E86FBF54B08436BA1F55B3B9671F0490350411678A09CEE903A37720311
D10E6823DE99D94ACC54D6FF08BB079C36E667DA778D09574B027BB6FEC2105E
FE6A3DE580C763EEC8FC59FB9D6AB81BD0C64CAD73D9857A10E505ABCD075260
6A9F554864259B158FF14B6D5EB894AF5CB2593A4D443C5E2C5C99834F29C96C
4167148BA7CCE6BFA0A131763994D268CD2BE565DF6DCA3BED6E821C39004EE1
9E40EA741038E7A49B01A302A09F3C3E046A91A782DDBD82DF0474246D41BE12
3F301640DA56FFEE5CF6A605767E3036AADBD0867D0C630432955618784AABE2
A1E731E8B7FE85517C1FE08AC5FBF317144C734A8E4CDF19383CE61C8537AD84
F1D43F1DDE40B704EF8EB3512F2D002AE1EE8474BD0A12107B41A96DA9996F6B
AD780CBAE845CC2F4233B23BDC2C959003F997072F7456BDC5D0546A3191C924
66452283578E5035448686E7DE488E5E217F59A8FA2324F3A35FEC7A8AD8A26D
98A16BDA35F72B91B0F6ABC2400D99A88384AF8B832F91AC003FBDD76005E349
188CB97BD3CF741C01CA3129F113E0F79CD219700C4A3F84CEEE93C0BABACE19
A3501BBF66A5C20E8D2FDBAF482B96CA9678C3C353F65400A21EBF181984A8D8
62C1E3466594C967C45026E1362AF24965A0DABDDC3952FEC1B5C93C733E1617
4692A56563706A8C4EC7510D06C0D4543F5AB4C61B3D976B93AAEBF4897F9070
FB433CC9A67D862616CBB4DBABAA7A8FF4958094A6122360884BE9B9C5E73B6E
9A35415DD62FB25B7F1C188FCF933B6EF4993A4EB946941594655D7309E1E50D
836ACB570698265A59152511AA53EDCFD29D72A8632EBDEFED79F2F8E1D2BBAB
8DBCA5BF77C99CC911398867A0984CC649BA5EBD5323110AC8AD48FD0CD45C89
C5AE9DA169F2BFA676E2A9BDB5BF8A95ED2851E215304B2E4473B68AA7F2A9C2
910D865CE15D189BCA09436BA7570E56E67BBC702344F52E046987068FB853D2
2E45A6F483E27416C97EB8D72491D01C0955E10CA5C70359B8F90CAF67768B5E
61AB2612A5EBAC73029597E0AB924AEEE0240ECCA73949AB3722E8BEB2A16361
8497722FF6382C6978891680B6861DBCEF320E8DE457F4704A62ED2943DE2382
7E2BA30649030D92B3CEF2DE55AF4770FE275E57034C9D9D7112A1A0F8F2DDC3
6F391D18A15F6E0693B9DC7CA095C3209CCE0D13697CC084CE310BF499701BEC
1E1C13010A34C6FBCD44AC3BAC9FE70A2C065A1B5243E26755033E2DB0255D68
2431942FB598A96611B77A877F230B06AB3E28DC01A585DB605AC6C3044EF2D9
DCA7CECA07CBB4FA4718E57F26B520291C46A9A8AA8D3BB7394111096D932741
495A858901BD8674A21208E163160F727F122D4BC5632D2B30C9EF10AB2F4A42
72E9E62AC44CD0CCB50B25E30EC2B90D9A46CB8CC749EDA7A5F5A1C1734AC556
3DB253D56657EAC24097E94045A4BC969BD5ADFB577F5A5005F742CD2615DA9F
6E5F65A02FA47A8A36CBBFAF2442C01B42EF9950D02E05EC3CA855569FB13389
90ECF476259754C8BDE5B1E7816C64288352EAEDD488ACB3D0219C14C457F665
C5947F08EC99F8DFD2DEBA6E6972D4125E2EBF88AEF6DF06C5996E48D52DCA99
365E2040D066081368AB6D0D2429C2FCBBCF6FE387A01B7BF00C66E6D21FF951
EDA6893B597C4B2278C8B4EFBA21B34DCF3D866A7536BD9874FBFE52E77339B5
28B291E1D519938578FFBF2B9FCF7948449BA8EC6E99714BA5CEF7E6BEABEF7D
B5D4475631CE1C48A51D7EAE0F048C6118882586B04DAEBF9C7D319ADF3CEC6D
FF712845E670BEC0DE8D506183CD8A9D26435247C1CDF5FC50A8C6EE8DD2ED26
27EA1B6EFDB91C272C5CB7444F11D655E6D745BF3A9DB8CA1B3441C142F1507C
0CA0CB1C2CE663FB337E7DDCED1F42C76119CA71E372B57818CEDE3D151C91BE
E09644B62EB1064630EBE55F55F99B68C746D3D053B6F4CD8D96E3D6C4092ED1
A9C1D3B79C611520BF8C1163528E3E446E72762A625C1C3FF4B7391D6031EBCE
FD5B5C4B08C0A3124FBC40DB6908828CCFDECF732182B953913EB2B12134F1BB
2843FB7FA3EB1945FEF24587799BDE5C6FF70FB819C49B42A3FC2B18AB885A91
2ADCD162D466095C7439BAC2733937729D26209ACC1264DE0F3EF0AFF7F5069E
74B80B63D79F6FBF2FE45DCD7C69B7EE9CCAB68F0BD33DA003F11EB930861A56
A5188E014E40B9F8D4026C7B1888A966D1B229C037C1DC3D5D575D62D4A885E1
9DA31DF09746BB0FDE16EFAC1A801B110852EF0EEFE8E5B592366A05544D46EA
8B0F2D661DDC5B400A37DFF7848E75E9EAB21BD4A65241B72EEB2E59B0A96924
D633132043F78A3B53E348E34681382BE6BA2F91615563FD3C01F33C37F75792
0BCE0D9AECDF7478E1920355F207F039B7CCB5B8300693E1433DE4511D10D8F1
CA0776F16F3DEAB2B501B702A52A7B428E584DF52222F0AAF87CD854422E2099
BAE68FEE0D7C5CF7E98748862699A80B721273F3C62BF79CCC1A162F056FFA4C
32E7E588AC0A41B5579E799FF6616583C368DC0088DEC148036B41B30AC6D7D2
F0F299DC247A23A22E0BAED4C0CDE249D3785A1FED11292D09DC9474E7461531
F015D902341361EFA48B3E3B467D06937BB604CBFC1EE38C9F6935026ECF3DA3
9F13CB250618CD5AC65CA27C30B7924DE91138AAC8BD82859696DC7F5A91BD5F
851D954C8FA91DD27611532070464DF076DED556A3546C08C5F8459407A667C6
499E8B616A72D295FB1C390DAC790EE4FEFDF9B896440B1E137CBB99967897E5
1C9D327E5E5497DB6ADD53A27C34CAAD56DBDAAA095A74467227777094D0341D
4DCED59A5B00BA39CA41EAD203FB02143EBD9D0DF7844F20C0D82477B39218F7
B04926DD29415B50892EB3A39F8C89D2CD0399DE3BB46D8386BC7D94FC0A8C3D
C26618B0FA59E3D37CB50A89C9D9BF211EAE4D2C10082D8AAA8FB3FF63D7B066
107BD3135521EE8A81DFB2C9DDB74772994414D00CC15D933E0B6BBCA75EE095
EC676ACC85BE5189EA312B5EBC6127BF225AA9CC77004DE668139276DEEC76D4
C2C0C036B504DD0F24D968FE18E2F6ACFF15D4966BFFF45D22DF3013A7B88382
1C627E439603EA4A13B176CAE39192489CBAF53A53E726A584D0A1C0864E32E2
8C0E6A93BBA2A17119301AA7F819AEB987821914ED04B7C18B6611D4B2255292
0C55279D75A15A6531F56D2DF3FA26CD795C9F39F000BE8BE5064F5F57F57167
50621D833DA20AC483DE71ED28B1D258A7F18381CFDBB3D2C3D6F8142CB50870
8BC52CACE65295C5CF87E242C83E3967DE730C1CFC11FDCAF71826620E4D8983
621FFE03D497B51EE2DB2CB803666619A32D417BCB8A95964E9BBD0C6D444BC8
C1FB896901ABF6E6EFF1C1F3573C36520EF22D159C66F150049B64F008B06150
75350FEF34634EF2FACEEBA06182D06CC5683874117179913942ABB12FF3F371
BF6FF699E5A1476752AFF326B068F8B6129CBB1571A0C8C3D5F95336D6DA1496
7D34B965420BAAEBAB6978043D37588E9183CB12DB4C45852F56B21C8BE60EEB
D3D9082BC2990BDDA7E64763F1763BD63EE91F59E81E22D1AD5D9914EB8C876D
B851CC304A5DD190A21220802F815EEE957803C06B822C9518649C5DB417B103
0CF11737BB3CB1E73E38D2626FDABE3246B40D1DF0EF74BE428CE04EDD6410CA
38D760A23FEF9B8018191F92562D5AF172B3D6945AACE4F7E54F588CEB27CF5C
7F934CB1FEA1FF69D758ABCC1B316D1C432858CD8A2111A96799DFDF62F63F87
0D259021FDA53AE71FCE676578F27D1F0D90C0C51CFAFDA3BC017F504CB17D9A
D52ED77876B204AC36B7EA59CDF9C5C401BDFF97FC2A3A942ADADE2C969341B9
2216FE4C4E501EEAB32131F64BA99002BE4869B50FCF99BDE45C1091DAABB160
3AE7F32CE9FE116A1DDBF7BFED23F8F6FA29F1411F1366D5A11EAB224EFE2425
8D3D30124A9150D9BCC9A8008ECBA81E69F230EBA9206584F5E02E245C65C9CE
88C0936B2FF8918C970CEEFAC6208B48ED3E85B7A70E9ED3043725A1D96A949D
50C6B68E16C3496D5D32A9B2249087AE16101825C43CD992108A3C833EC6498B
FBBFC294E223A312B81020125942528F13F3B8CA23455DCA7D15A7D69F72BD94
60AB07097FC343C97BCA64C0B51B7FCE961A249AA0E882CE620DA64BBAA3317B
36CD2D983D2D9B9B928CFAEE346D92E922FA44B8E430EDFED946E408994747CD
63A0BA185784741890CF07EF9DE2E7255EF360948D16590CC44144CD4B5C9C7F
621CF194373879A0991C84EC2E6FD6321A158104E3BC2DE6DFE1AEF1A96F3D32
12E74B14DB1A6A96F81C47A049FE9BB5E89631F30E848D1AFE47D1D887C09EC8
0D2C2139EDF5B678C9F63CD57D169A0DF52CBCB3117627A075A39FC431128570
2C987DDEAE3945E9958A2C2E933FEE805DA7E2CC4085CA382CB2C9AD1C06F639
E12BD609B9E3484ED50F708C8D7E94441BDD49137A001C18CB2F644E9E7AB94D
5C03C56EA770A9DCB8B8D958CCA0EFFDE199BD4AD7957B1029301D2273AA4BE8
F2804EA60A603EDA3C4FCC3BDE1BF95EDACAC458CCDCFD7AA052BF8DD79CFF86
E57B0B07912D33CD236087BACAA8202D431703C9B96FCBA8308E19E19C1A99C5
738E554DAB1CD1F342E1EB86825002D131730148E2EB5564FE42D2E1AB86E7AF
3A0B8D60EA289A878B9F22F2EAB7B9A5642D142A3C3CF0FCCE0E75753C1D8373
F824AE7A60BA3B1B9C0456C3767D8768DEE153BF971E35DE1AEAA165AF023B67
37631A91A680833A0C7FFD06721A0A3200699F7CFEFEF365EF4A554986C30DCA
B51168EAFE470BC26A8A5234A8AC19BFD6F214B7AF4FC2F56904C2043540A061
BD737CFF6C1483C4521C7D72EFF375CC4D0754FBD4107B9AAA0D8751B368F37D
921C607FE783F964B97281BDDA295FCD87EF1808A20A757A35F8243389915C30
6F636FC3B5805B4ABE5369D6FE43CBD8FA5C856D7E5B5A965FBFF4C3C9E89505
29F0EAFE9AD88A2490BEF641B12B469DAEF482E59DCADD8B57B10191E2CAF31B
4F0BA6331DED580FCEDD1BDB6AD2B9A8F686D6AA02E855FB46AA9B3E61B00100
708FB591E28F6EA83FFC8F20A00CFE11E32FF356B260B1DA3E4AE0FDB771E0FA
2406ADEDC9FDE70F061363C7299499C54BC7FF51054945BE11C17FB2929D3E12
4FC481DBA85F9FEC2183898B163BBE5728DB5F3EFA5D89544FF65DD5068FA649
9F3C0652F8966A0A7AA1C8F0AF913F5087F59723E50632AB9A652671441A746B
FA2263FECEEB6FFDE6D779E9C032D0815BFE1B7DE41FC3FC388EB38104FDC242
C8A0DBB8397173FE341A5798A1428B1EED670C66797F922B05636891C086EE31
2056269A1378CE59772DF54DD527F12505895E6F3264BD2A677CD60F1F60C774
5598215B7A01C35EDA0AD88FEB1BE12220330891B748C94817DA9B48968AEFEF
6ED8AC9BD5B69674CD3E250037B8ECE12C9DB3EB6C4B53C09CD85AF8868F94AE
CF6D999B4A1B21701E838409BBEB51D41EC8FEB744086093993DE66D2CECC7F8
C5C72ABDC34248F1ECFC970B7EE17498771AB7BDE5B2D28D57679D5BF402FD3E
8DE0F2F4192F8E1F87A5D59B0D3824FB484E8D387F6DD4E54D85AC75FB37B1A8
CD703B83
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-ReguItal
%!PS-AdobeFont-1.0: NimbusRomNo9L-ReguItal 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular Italic) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle -15.5 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-ReguItal def
/PaintType 0 def
/WMode 0 def
/FontBBox {-169 -270 1010 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E134D4CB5ABCED39AC635
DA001E9934C198A7F9B9ED0028A85E9AE00421DFD8EAA3BB3B4B4CE45D209303
237BD51809FE4D880900B1EEB236ACA87B9FF6EBE6B994A60AF5D67CCC42BD56
77295C346EB4C62BDC1EF22EE07DAAD928DFB73455F091F32408ED6430B97417
683AF27A03718A156E3F6E7B6E4F2E8177503CD82DDBF4557A3CCFF4C858AE7A
F7EFED6CC521A28342436B953E4650B5792BE85EA2F989EB6D986905A61FA38B
96E1BBC830B74469150FB0B598A794FD80D10870084A877273A9502C3456E5EF
74350E6E3BE5863E8BA185EB59FB87B36566AF71200B6ED389D1287D4E925E33
B2383ED05D87D48586E698FBC5D562ED9D8A09EC3EAA1B1F300224AF20C23F26
A2EADC74562571DA84B3914D1D80B127C6FF4706C7046BBB372A0013E0AB94F0
C27946583871D272BF4F20FA84E89D745DE7BBA885CC09BA72E0F530ED4EF7D1
864B3C67007ED98800284235372F0A70C912E21E851AFBF812165B8DF912CD1A
013E271F0B347967876C68AE4C4107EF8AD1F170916210034C66394A9D971B68
FBFC1131E37FC178EB97C1B2A0F573ADD9D7C0BF944E6529734DF8A7EF54485B
A3375CC30E9E328943733CBD352BC15B06C85BFB4A96994291C72A0EAE84FB01
0F1B24D0125FB8C16D60561DF8BB7AA7DDFE9549AFB70C1E89424214609FDE41
9A142892E30F02754FD234CEB3C59A2A04C06BAB7AE40E8FDEC50559B8347684
391C750987802D5452C47C1E0B5F222DE9A0EEAFEE19D796FF375A1E1EF0AEED
1BCAC4F485FCAEE18AEC585D1A9D80F41871DDA45FEF1EAE82C5893118987BEB
4D9E345C27C7419FE65E4853B40537D822E34FF1E0BD2819D21EF607981259E8
9F1040A2D708D7463858AA5381759AC49DF4DDDEB209A278FE60BD2508ACA0F4
6A249A05B652E4C7BF1B676943CDC463B30BE5C2317E1F248E6BB90C96AF331F
1AE9E09BE98DA43549978DC40300C155FF23FE7E929A8F9CE53FA3362D872CDB
A530E9795CBEE9CF139BF9C9BE51D592FCDED2A7CF34ED030FE2D062F82755F5
0F709FE46B305D0E415AFD2F387D01E4F56E5EC1E658410088780E87FE47F1A5
099B5ACE61B6E0B11BD3213AE3A0FFC36F2CDC0B9208993B7603C32AAFE2188A
14C9BD02E00781EB11E645EE3D17F68522565B2C18337CA874058BB2EE434E4D
FC12D8BF41B15DEED74673E723941D7E36464EE10D1F8B6AA8EB218ED826EB4C
C0F8D784595B21458C652A5565D96CD38B900F1C10BB1554C29427A8A08B45CC
A30A2B675946BA724F69FEB1E8FD7DC1D74BDEA77930F422822BB15D1BFC89A8
50B758A3ED81F506337B1557E44C36771D1B98B283537FB7E6C9492C2FC9F5B3
B18C4FA5BFE8A5C21C4225D3BF187695B9223A7A68309E172EF68851B36623ED
66EC7FD40D20D573D3E49345B301795BDB2CABFCF6DEF2C5BEC067188EC4CCEA
66FF03751A4D72847C0C1036B2DD83C5BB5CC6161D7722B3ECAD7CAF360CD271
60927CFF10954D7ABDFD2A4E3D180A2E95551CCEDD11F7C39B765BB942E979AA
A1DE3496DAA9C5D467ECE84CF7A8C288F9B22E0AE6685047D8BE0490862633F8
0AA1938F0353103DB83CCF9143F3A1A0FBACF79771B4E47D07EA87335F94152A
9A489FB0D44C754711D99A68E296DD3E74E0DF56E079235A8B3F5027D8FE5FE8
73E98EEF621E059DF969C14E19E1CB4F72481A981EFE9DEEB861FF77928F75C6
B24AB76BA9347B4F9354DC900685CE73A8D5738C2BC3A5CAAE2DB24908F7FFE9
2600D0BAA927ABC183A538251EE7CB1E5774AEC12CDA3F68A61B0DD5FF9CA582
782EEB96A65808A9585AD95B37C1FB0AFFE4A05112A3BEA5C3E2A21F09F3A1B0
9E7962FA39BA2114DE79D2D8C5F8FAAF8A22C28319F79216C6D454A864898EE9
F83534E5A0987922E0CFAC1D880234216AA81E48BBFF41421261B9CA2E4FD8A3
03BAE14060E1394571392C3C1828DA357F0E30D9AB91D1F73B6AE9F49AF2051E
B890DF61A889240B2E196C3450BBDA9D018F6210E7BF26FBFA2B95ECCF029A6B
18A512D30CEB0B6ADF80FF105689FEAE4EE7D82E79E0A5B5993FA4ECA2771CB4
D644EFBFFCCAF634AE7A1D21B652818AABE247C5D5672A00A885E1179E5D7D63
E5A2950ED9ADA8C30242F91943E10792E4096DCC5BAB8E5CAE0B0ACFCBC6B81C
9B851BFAF13327FEC0B3B6A78C90C52C41628B8B8DBB09467049791F9C23F410
1F3EAE2CF8F223E472A98101509CD47B1070873F9D7205BFDE5722FE9695082B
C631CABA895D0C0C9F53EE1F12F5D16C0D95192C772C129F4DA99D2F719D74E6
8C9E3FFE109246A180CB9ABF71191EE24F4ADDA0F0C5A7F310DD62C2C536BB4E
42F9B7D31EB6AB71BDD8E148E3FB3C7C6C4E197269FE8401CF4CBD6BB34417D9
D4370E2B8AC7CBD74C37C5F034DDB50DBDC468E92D305E40974B011BE4E8BF0C
3E801B7169500510B895BC38114416C159D35382FDB4F9D9095FE293F48765EF
46DE0CBC8FEF5728F6A0DF09FFD5521137EFA12236781482E6527D0E78DB63C5
2F6FC5CDEAC035CF7A3B84373C98EAA5B9D1A230128725C1718BD2E1EDB2F550
395923C3D410D7382AF1EC6F679B4B737DFA7D50DBD5B88AECDF97AEDC98B695
58C5233F8FB97E4F88AE658B6A165585AC3B550F83290BB6C5401E3EAA9CD3E0
B1E0B41115311DAC283BCFA8CA0BA48D86569B132DC6F247DB1A8AD4370FB5B0
35AC945B622A89410C547A9B74D21118DD6474DD0CDADEFC54FDED8A6ACE96C9
EE0FCFB96FC693FF71311F89F26B235C8F9EB12DCFDC81E41B8AB1124549E4DE
87D138165DCD17B148DE141A6580CB689CDA9BE250589D9E322429CFBAD19DF8
1DBE566633F6B33DA7CA3BC3065469D58F868EFFF5F41120B1ABBA3E717FF50A
9F1575A136E8C726E4A1A37F5125FB9733C057FA69B80811373E926E2E2FA244
778183137F052E86C4520C4C27A7C4B3C1972A2DDD57C5BFC5B1C8F495B29DAC
A54D8BF18206269A538FD4841BD9EA71C30879A3058CBED058CDFA699C2272FA
40BE935EF8FDFCA70636A8F09FF9A4B8EAE688A25ECDCD7D806FD0702E88497B
C6D51189F6C0EA206FCFAEF68CA01BECA56517AF0ACDFD9C0B72F9F8E5B370F5
2E38E750F117A61647C37E846906ABD77035973291DF8304FAB487AA4B4CA279
CA5CCDC91EF088CB67DF1D266655E2FF6B267ACD8E1FD4B60845AAF47E1867EC
9CE37E9BFAA10B0D8A7279AC40D5EF11268DEAF39F0654D590E6E8AC9068E04A
0D026204CCC9A305ECC299FBD9A74AC0CD41EFED2D2CC5A3137A0BD2BF59C472
3FBA2FC1A1AFA932B1485A15873ACAB7A8F0DF69981E9492DEA2B5C5C11F9AE7
F2F8C8D811805C7D225023470E66EB4BD8E9C213A951CE16795BC1A5983732A1
60076864F407F99A68AD7AAE80D913D95425DE9DA289BB60135C7008BFCA3278
03319573CCA15E5A7A95BCA7166DFBB61BC0923B6B653B28C759EC937003750C
28B4E54C10F41BFFF224FF71D50841C2E785C0851356A4FE39BFC1390EBAD6D8
9163E87EACB8F517FB3103E52595BA002E0282E54CBF8F2DC7D4518AA6911675
5B434C734B170675CB21F6F939B22B3AEB78CCE20956F17F628288CD4E9FCCE8
C95D74329E153CE553911DE2697559AC63F7DAB6811B1027FDA8E6F08D401393
8AFCAD3044FF1856AC3D4C879AA97B27CB343FC7E6C72759F128B0E011E7CA41
9635B55B5562B9EE7E3C2D1EA007727B078F254ED1A91F70318D2452322C13F0
BEADBF67D2A3BA04FE55436F313359C0EEB687EE80388AE11528BDFC40846B02
004F81FE9EBA92FC55B3D1C020E6DDFA225D430A6ED4FD5DE5298457CC2289CB
2327BBEEA25C608D24CF25621CD52ABEE2C07C769E761FBEA0A4E67D15CFBC7A
A2DD25E459A5CCAA2D89D4B26D9899379BC11B23E9FFE7FD9BB8EF6EA4373DB8
A0C9E00E4B3FD10AC7BA6FBF9B95B76F9BBD69ECA5A1BF5F08807EA75DE120EE
099CEE8669ABC257E8C39641F93A108E31A1B913217DF26748FC5864733816E1
508D5C8D60B37A148CE5D0AC3B9E2457A326E9A5C97A6858F1F198CD09E67E8E
98F772276AAE0A4B270E8385D9E3DCCAE2F30D96A9C1499F6E71642D04AB88C9
9B254649D2EECBCC9267F50DA12ABDF5C63C5B1602823BBFC0C03B7A421A85CF
B3D788014BCFF4A793A6027E94DF79BEB0058C7575F743BE209C547C37F74C36
03085BFC50638BB19B262FDB64C3D343E56F7A718EE982EAAE763CA422D3E369
555B1CB68B11C0E04C822DC99243D5F8211C97EB29D8FDF6C33B5F6934EBF08B
455B33BF56AE6BA5593BDF87CA82AC039F77FE0D4B91CD072E5DA1DA773401FF
403643F1D606FEE10691D19ED84FE52EA96E1519D950E9BACAEFEC61BCFFCD4E
2F3975C5EAFB9FA7D341002D08C85443D34FD1DCC618F3F16299CA9F0DA03969
3C37800066259FD5D04BB13EECD9C2887A780EB34D1BEF48C8FC4FA189D8A962
AE59456EC1EE43CD4C9B3C2044B3F056156EF1FFE64E9D6BB2D831CBFCE55BAA
595FF790FF2EC2C248DC4637EDAB51BA25F77DFA44F3785687EFA1419CA36325
C4F33949E0385A9EC681B5C3167083EDB667324A62E0ECB699CA6A8DE745362D
4D6BC6BD5E5590CF0DFEEA26E89AC649C31188544AA945776EB688411E718157
AA91903CFD282502F970E6879DB85A3C345AF77E9C396B60AC5143932D62BD74
54D7C4A19A7CABB4B1D3C81E84BCC37EA8D0F63BE49DBC2B875B9204CA83D629
6AE76BEC4B00CF91A47CBF095871721CAC3D62E0AFD7CB672F132E0650FBAAEF
E63EEB7EFB947F6EF3687B275B7CC75714F63307D3F5936C49BFBB7F482DB892
74341D829D2AB708ADBF8926626E9AEFB82551698126AA71F3513E16F9C5D467
B267581833A721D12ADFC073A1338858F85496DBAB22DDB480916E1A2CA0656E
802AC2EF9EAF7226A7162B4CA70994383B67374CD0E41F20335EC552F0549CBF
9340202CB4E70C43F478C0F00C92ADC93A899896DE8705D9C1FFE7D393EAF972
E319C9429833136E02C840EA87E4C5E337186C0BBA0A0407898CE02E21E130B5
ACFA23E2627BF8225613923096A184BF0736F040492D7647EB7337622EC14ECC
C31D85FE0113D0C9E2AB3C8D368E486C0C4E1D897E3F7BED77FC223B3E794560
3D6015EF45983A3E0A3A39C53B4DC365CBC412E9C56D7549ED6EFCBB88739EE9
ED8556B8E334E69C67DD5AE71A18E1D2080B8CDA46AA6D458C397F59BEB40AF3
405E9A39FA04FDC4FE2F15947DAFEB6B8FC7F0769A889A4F7657D391C71A34AB
9A99DB32384B722AAA0A1BDD2A1F9B2EA3D7EBC42D9CE9A5CAC23A3BD1A39DBF
C4B9DACEDF6ECC90FFDC467794B0E7462509DC79CA34A6530013CBB2F35FA4AD
6166D4C2099D5AC0336BE904ECD31AB354935E598F74DC6E5778238D30F12DF7
6F3ECD51B2E2290A2F008129872A033325FF60024CC3A226CDCA0952C5F76252
2A1E4D537191C8CA3A9684DADDD9BF7699B199C82EE23A349AEF61C49DE74EA6
E31CAB1EF51FA66BD6B8108FF8BBBEB29BEC86E1F46D50CF818BAE60358B3B59
6898F320B71B016A7B2DD89BBA486D8B4440C0233675CDB4126E1DA24B79E888
DE1C1F8645DA03EEB1DA9DF5C2A7ACD6ED9F9174F035AA8DDC12E6C79D58015F
C4F1CF150ECF7B74C2C459CECFFC6054D922F59B13E409D082EFDFA53837CF42
F98ECC0DF5AE7AF75A9D98C171A7A4EBD961ADDAB39E208A48F7F63284BECC80
BF380CF8D3F4B05A3FF82424071ED6F9BD70B2A95DB88A46F8C611997B3AF9C4
F14292C25A3C13558E1A45811B5F536B49664F829707C07E678C3C0E23651AB0
7A9E79DD55D12A396660657FD0C91674674BC2009A92147C79E76208BC96CADE
6840A93F6CE9AE78293DD96A290AAC9900B10BB8628DD5C2415E6FCECF74F0BD
2699E01C2FA7CB98FDB88FD7F1BA0791376BB8CC7961C44690EA43B6686C9D5D
972DCB2265A3D2AE73031F0A91BA9889C961DFC6C13045B2BF25353007FDD80E
B1FB57CB36234C9CE486115A250D2D670BC208A6B182ABF207C39015F7F497C5
5279D18F5FC90B50FF3088027770565CE4409517E08EDFF965C6BC8941952330
1937AB8A80B7AF6407DA93D8966B60F6ED768BD87C188D62490AFD4C4CAC09A0
A66B863A82187D0F9B61E93490C7ED6E46D877B2C00E1ABB961C74B5B71B55BA
53F5D12CA2AC760E7618350D67D3AF3834EDE37707B456A6889207B457C0AE61
1771F96587F006A467CE164FC41BBA564A561EC3DA9BD78DCFA969DAFE118273
6D97540FF0912B91960D648717934572F971B0C5A604AB3A6CB987E1C0442D16
774E7DDEA7163CE66D9AF020B331A6EA21B51DE011D8FDCC67DDE0217905ED11
56CF9AC0BF7BD766AD44E816549A4BA9866D7626FD75B51EE2D9711F4E4088D6
46E26DC41665D0A429595483AFCB70D690515B24EE4CC87DF1D2B54D19B2D50C
3CDB4E3EC074C9DEB99425E9015B8B255E3BBDA734011623D97ABB1BD286A6B9
F6990B6F870C5079C2C42B1475B910656DBF5E885438380531D1F890EE7BAE46
D565BF5E4AFE50318DDF630AD327A94ECB8B3FC87AC426ED052653CE030EA186
6AFCD6E70EAC0202B8BBAA72DD8E2EF01FE0B91FCA4A95C8507D9E62DFB4BAB0
6C747F8A5BF860CDB7C5CCD07646DEAF564F8AAA5D5B454A9F2D12CDE4929FFC
1FEA0ACB74504C40874914892CF6000255E999CFE1936124DE867F28021EBADD
390EF466D40B6AA7E95338D4D273EB6C5E74C8B1718D162AED17F1816584F618
6C96B8D40D382E1BCCE27582CEE02B6A1D8B14EA91247CFF1881EE819DDDDC3E
30713917141C90861C53AF93B824B893C4062121D1949E7BE909D4FB1AAE280A
0525BD33474212954D2600DD656132D020E394D87FF4C2AA92B696284A5BDBA1
29401E63603E1FB4CEE4EB507E88088367C85F813E0D296E916DDE2DD3774D90
3024214813DBFACE82CBF84193B36278E4474E692F890E3E3B7622E5A704402F
EDAB6FECB0AA22DE88DC0937E3B78AF051CB0E089C8B59E19C537B90953B098B
6E953D86CE55418BF1F6CA29F336499B28C97E76EFA43A31D36D91CD8104F3BA
743F06C828C158A543671208627C0FB0F268F1BD4861FA728E7E1CE599CC0E68
482C85AF503A78F146990D43B24DA4D4C40E586B3DE61E83A359C86A066C0D24
84E473259FCCF5FC86442424B23EA01F37CA6B04844C07E837470B5C4572A9C9
38F00D8E54DDC41F982FD30A7179F07FD4236A64A0577ABD20659D2515AA4769
FA3B134CCB7E50E83E418B529E9350B2FE0FB6A5F85DA68AAFC85AF4F2A6E650
13060998A9040879A186678BD07DC68D87C0D172C3F18819E6369D13F15D202F
F8F6DDC13A7B918A4C7D2F7D0F18B9466B9C5C6640C77CE84AEEBC3E924F1CE8
664D2A2DFCD2800950F8C2B7FFCE0F82AE38D6D2FA84B4BE0B789B0B410A30BF
66DAE24A6B46DA5140CF7325EFFCE515EF8481BB46944E0277628ED0B4F32A29
55E55C71CC9455C47F7A056AD6BDB599854BFCD19FD85E186E62701A9FA1A009
F98291D8E8FB665A8BC621E9996B178E4B58A82527808DCC5C70B1292F9C5BCE
6B0E9B760FAC62828B9B2C3BAC419B073961AF9EFC8927E1F2FA81FE54BEE791
156B22812B84F68276BACEC7094C239E2B25CE2AE5B99CCC94A4CDB687B1F3AE
096C7EDACBD526E4E3FDDA4891C4C6ADAC2210F6315D8F75C7C7CC83960E23D3
A935935E88433376199046F77BCB1795BAA38889CA83DF557CCEE0F9553EFEA7
735500EF0D8B4AF7A8A90228DF8680A3E71208FBA133EE0713D84688C7437342
8BF9D39E3A296275D369257E42AA6C0CCBE5D4017557EA0AFB8EB093B6C7F39C
9068AFA5577ED464BCBB149C68A54E89C7B3B57B46837223316D9B95133BEAB9
7ABDB3E4F800E3EE7BC184310936F6232750BBFC711E491AB40EC799FD22B6D4
D6B782410F41AFAE269369F2D5CABC2D1BDE1AD53208EBC31B831A142A95840F
C5D898BA7FC4ACA15BE5E145585B6DEC0AB4B9DB118A02E91828A494A3ED7172
435EDE5F637F0D20E9367C9A7CCC3A63DAAE1C9B8B6E1EF48DEF4EFBB04CC7F0
4E21F7B1E1942E58E0944A7607822CF2F75DD74FDE22B68DE7A4EA1D9A423E11
B480557171B1A2A1327FF5A91AC1AE481C26E3DF73BA88469E8CC6253B3ACEDD
373D1D17CEE116AF87159F393A902363FB58CA715DFE2081246014F932F98837
F99BA1A18C9849B8B0A13AB598BBC472FD0D2E42417F60232EDE240535D6E3DA
4577809E39ED9FF36BB566D39FF11F10C0B157E413FB49BA8C4264C7571805F4
47845A073645267BC468CB3E8E805AFDC11FE605CC2FB552F57BAAE99BB7A21A
C43AD80879845797611FF0A359EA7AAF88E941C6EFA8709D57B6238C1EA9B918
6C4A9DA8E864904ABC49043D4F64686FF996AA13B3FFACAE392F80E0DCE4E7CD
F519FF5BF8E93623CF0EB4757E0117AB0E73E01410105B0F5EC58F49D6F01CD9
20C94F8A4D63EC0E0F500587D990024BBE84B065BA853EB10586ABEB987F71BD
832827C9F0581C2EE085D86B7C3CB8AEF11EC7D14848F1E7EDC88611F098EDB8
0F8AA0D8524E0EFCC522FC3CDFA382D815B6694FC508079D3A3435FA248CFDBD
FDD0C2DDD8202F905415F2700492ACF2798E6C71945D0781996CB5FDC420D37A
BE7C820EF3FA7D09A0D74968880079A16A49A8D1D2D15598D79ED496F9545F92
3F110504D420DFA65346AF0FD8955A8563B189B3CA3738D11C157B186D904553
5FA34DA8C21806D49769391B7A1FF13552D320818BDA47E30B85AA6BA6E3A1DD
F0E465C063768ED394770CF07675657587CB8A56596BD3FCCE9847E91581D4CE
0FB2B2EC45910F0ACD46A06FA48D13E4B7678F96A4B3894F61E1A9490EA70F1F
0F037DDBEB979B1BCAAD63FC5F282FB23867AE32B5BEB1E03F38A9FEAFDD9067
E16EE1E2F7E96414BA056EC4A156C2603ABCD90FB0334FD73DA2A6366C8F942D
513186237CAA36D07DE27775DDC9C1EF58835C695E13E142061EA64245F7DC19
911AC1D2DB9505C22A828479B03A34AEA74C7C4242CC4019C2D7D18D131B6273
2E93DA9939430DDB94B5580D78B3471BCCD49C08B7873090D6B8FCF1660E1D60
CDBE68ED55E025649115050BF7C3888F92E015CA5D91B363F99E42A7C5EBEC25
616CC076DC7279B83FA125D6DD423540BF1AAE0465D4261E3AC31D77C4F75509
6B50C9CD8103CA8FC14FA84C65F169BAE1A8FF2CD4050C116B8861EFDC6CBD11
7613E2F558D269B00092DCE88C14EDCB7AA60FF9442E90D4BE04D525BAFDD527
68BDF1A82F018B959B1814181410FB6167E2955AC798BB373A6F933FA2EA6A47
4F8E1A099667C727E4FD346C319EECE2AC7210A59E955B583422B7B6EDAE3EE9
2816034797F911814B5DDE0FBC9B11349A83B8C1F106A6A26EA3C3F4C13BDE4D
6D4ED370EFA22ED3FE5113680952D8626EC38E568055636E62F5233EC3891B53
FF658A1117CD41968FD95F410F99EDB72B3F10E335C0B4508DDDFCB020AC5C98
F8F36DB986C6C618AA75E527C04ED4016B8B54AB48A35FC77F7364BB75AE2083
C7C66E6C13CF17915E7D5359F8D3E9C83DD4C8AC4C76A6F89A04B89B91845949
9B988AE519763C2B61D2B298AAD5981EB1EE4DD1AA03DFC827BC15F32F3DFC86
C22CF26C4C420BC447ADE1BDA0E7CEAC4AE4FF2F7F4DDEE77B66101DA80CCE45
138292258329A7169D6AC8AA9D5D97E161D82980C93A84675B71AF6723C62598
44BA23456ADCE6D56F23D7F73D5C258048D63837F887A41EA0D1CF255793E8AB
02E4B39D972F463F0D41B85D627518A85CC96B29B99A1B5415F23606F42819D5
2B47DCCCE8D129A4C05778EA6E4A7571837B8318DE7C223C704B2759BCB42720
5FD7F4C484FDFB3C608FF37988C7DE6A41FB1020DBBCC762F2BC9309FE102462
8606990F351BC091138F528B037CD15B4CA4FABB3FEBA8E6B759AD23E5CFC062
E88A958CBF275E8352B7AFAE06A7761ECB1484D64371C744BC7DF2A1225965E2
18E892C350FCADB5F66EB82D0813EF551EF202156F8C42DD196DE1024B305FEE
4D7EB6DB3825AB1CC6C1DF2CE86DDB34598B8CAED5B6DA81A6C816C747568E8D
C9197C341105B044E7AA81165FA1B97A103553E0A7B1D1A0ED127FEDDC4387DD
B2E10EF3FA3985EDC86943E53E867FDC00EC4D156C8595AA55147A388E68FFBA
FDD93C18CA4063BCC8EE90AC1756B426A936BAED12384A8E0F2F54C5A9F564C6
E80733AA5A1EB2EEE026EC91A0500F2D1A74313C4E0BB89B54BD9E27D45A9A51
D740B3A9E1612F4981296CD9F4323817A5105CC6FAA95E9736C0A48132DD760B
76CBC3789EEA9612FA9B2FB8BACDB0E04AF3795DA58390472E1A1C70ED956071
C197E40A62C9EAC215ED5D359265ADA85A5F8D70AFFBC9F0EBD7BDACA3A5C0D4
BBACAE4B22606DF470F1FEB49CE88EF4EC02B4137033AE6ED9E17EEF2AA83CD3
44B95D68F89C06CA08C8F1BD8A7AA84BFA5B5D7A62E9E009401C61B4DE6460D6
98CBDE0F5FA067FA97AE681DB4836CAD5A7CA1AE32AC73115AB0CD0367CB8FF1
A763D4C6E8D531E8B9E8303B6D134B21C08431575AB101835176C34CE33E721C
89F30E08F30E410D67076796E0B69E6CB17A4A64EB8F1040075D725077A93CE7
F87449FC7FECFE9C8C6236536CE70FB34E58007FB800B23EB1595BFB7BE851EF
FFC388A1CB194E241F8D99812454AB69F72CA175D7BC6DD793F95E23C2532362
8762E804EDDD9C3E0B1D672775378454DC09DA4F6F5D61D3A7F45A3186E0BDE4
285F47E71AC84CB1890EF80D0CD25EE6185E8A70A457400A9F01F78BACA92F3A
DFA40414377BB826C007DA55D2ACF3435E521328819A3AD57D5950CBF71852CB
2B45676ED5E56E4670260EE0EEA2EABF3E8FD7179B44A664871034148F31C561
661E1E38BDDEF54D1685368534BA52EF770B2B82B5CF3AA159F438D33CE299E9
F36F0C30550960D1F0F7022C4E8DFBF11B604862D00DD47E998B555B5E1B91EE
25FF74B77F4805E7686DF03F80B24B99765F39E3943C7AFB813144C54807386B
341A07A175AFCAB68E2950E18573AC069848FE1639F38F4B0ACE4C6C981E37D7
395C143EB8F2A289EAE7B8A0B202A6CCD8E2B2ED28C6E38830007492463B7073
9BE47A5332D3D80C3EF9620C5162501D6BB44D768F7300A0F81885C638B350D9
FEDB8856482A91612E86E82D9A724C76BC0008ABF82271913C64FD635256246B
D0AC8AACA989D06D759B0F2AE67D0141A4314592D4118F59FA953B75122C91D3
12E5A14D8079F09914B67B4279948439328084AD7E244EDD848CDEFB71720784
79437B47203FC586B09C54671721A333E017DEB34581DD54E0E53F34EEEF0E58
AC65EE13077893A0E67B95C256272C515A3C9314E3995BC3EDA8639D17F30A89
3E24DB504EAECA652C11D2B025FE4E60823C63069BEABFA7C0D229749F777687
ED2F61B8FA1BED6E0D0E867E9099B1E274DA2D751A9F440AA56145D44F2DC60E
59A9BAE6B235912F910E7EC6C91EF7742BC2490A7C4D402AF1B6353393C29312
14252AE177CAB58429C29313D5105309B9392A3F215343BE41C15A5D99797D20
D66D481B89C3028D2A9A89041CF1FE68121C0A973E9AAF0B2BE9C7AB785224FB
9A427DD14457938E04643FA0278A24A108661B81747317CF45B382269976BFA9
A75D9A0139B26C2D90454A986270B41BEADE23D63244ABE8093836BB07579AC6
B6C168029233DE6B1D442AF96E71FF35A3199F91226F3C79AA37C10C728B92A4
59D45D5F5AC3132C7BF0E66D3CA50DF53EC54B53A7DE9125EA0492963C6051F8
72068C491445EFC0A66E5959BCAB2DDA3530B048E4F6BF5E07CDACAD3D5FE189
1E597FDC462F904BF8ED6E733FCB9ACD86623BA38D3051186D59F48FE82AFC5D
4915DD46AE244DBF5608F000C7F04DDE73E5BFEE74899869E7272BB8B0B0914C
1E9214C62C949B8095A98EA19CB194C5D1B51A32BBEC9576025E13849422F660
816108D788CD84565F614854DBBB35018E6B7DDC83890F5309BE5A6E53AAD5F4
9FF530E9B2BD30D7E374DE1BA554233FB14841798C9E854CFB6DD917C6E559D8
722D8E580BBE8ABD1FB00B67579491EE7FA21FD847D022305982BF071AB376A9
96FD141B05DDDF39A2BC7E5F1E6CF0409DCB5C0C4D7FC8FCF50B6C5A10F04A5F
BFD77C065E50465AA8D46D9CC430EA3984AA8E2E0FF379BF0C2EA84C8DABD677
C20596816E811B78B5F2755FE912ED66DC4F0173F4EB1CBB22D56AFE884CFA48
9035E242DEA2F40C34A6D32B9B3A894C8E237535F9210F121A4DD5CE41047A2A
4284D718FA8BDC13CCD1650A81D4E48AB16DC8C7C00DD8BE69AC6E2BE20EEA25
2B05148D3308D76B097E1FB493EAA447C178FBEFC6D1A0A20B24638BA87EAA97
04B0B79B3C00451DDBD5B00CC9948331C6C98154137729BA601731393B6CBFB1
D38FAE8833F313C78A4BDAC05CA8A93A74409A3B58D6FD6D6DE0FE985A7D0DA4
4CFBFB7D095F8F994367E5125B6BC32A562F72D4B1E41DEE753BA6BC0A5A169A
4DDFFBDCA60C5820BB686A32DC44AB3BFAC073F50A9FB1A0D2A896A139CF65B2
A5E7B7FDB1EFD08677BD080FA19B64C657E256B34F2703123F60C0699F87BA64
DDBBB5E6C9CA132FC482D63D6ABF8050AFD1248631DF2A8B30C64EE3ED56CBB5
962CA5BBA96912D9332EC57727D7577825454E0141BE231FA028F6A8E4AFAA71
EA8E01725A3D6655B9C900AD988B30444C01F6B9B4EAFEEC17E90A5B89E1C823
7BF1050A604CAA308BD1223AC7E9F2844D17BBDC17C1E79FB30A376761663B6A
374F2BAE975F240080753AD64F2421B9D7F09E8F09F85704272D3FCD3DD05615
6CAB65D8CD8050D54277969EE0ED12E1FD8B8FF181287832144DA66FD6D26379
E38D0F96B75798108458CBB0042F44F8F0FBF5A207DDE5BF7CD32EB424FC01F6
7A16EBE6FB84AFF03648F63C06B7E3F24250A317D39BF94F364FC279B5707C7C
6AC802F71CBB7303985A8C936137EBF5C34D03C4116050EBEA5A5DD5EDF04D18
8FD5D33C8ABCC77D26F476EA0D0BB5E8AFC7CC459ADD4E7F152F506DABE8F560
ED70C3F68C0A14EAEB08481E853CC71014A9CD1CE10730701C64AF75D8E2B7DE
9C2107B1060A82C1501C46CB5B515289EF9DDF3B57B45C32C30DDD2D33F11A07
6C5BE0D268DD8C3FF60A8C9D26CEBBBA2708FDCDFDD6E67236B386CD00613982
809E985E413B1CD62CFF43B8FE2959851FBD44081EDD52CF0090BBAF75F27129
2DAB1315AC04C41AA529E09D262A848C883A4BEF3615ECAF9C44368047E02D76
FFAFC39E787AF2062D42F9C7D370F69FA2B1C37F636A66179EFD9E5D9B3424E3
F8A87EA4D7184797EDD25CF5107898223AE49CF8A23F1A86D2EA33EF65E48E4D
5728C11E0F0D9990C8E4DDA0F25109864ED2813764B3D31EAB2F19E4F888EB71
37B15A0FE4C83D443F11A7F15446BBAD90DF18925D77A63272D8E197E0496FF1
564E94F5390BB9CA796BD381FBBF71177C688EDCEB88629B54ED1DD1C705302E
C0D2F5C80C729605EDB95EBB78E8EC2C2213A9082A808323C15211C604DE23C9
F2CA3B8F6E075D8E9601F72E4577FA2A33C0EB41B1703FE346F7D1D538E57B50
F33F5B5CF7A81E86758AE1376C3E2518FEF91618191E2AFDF17FF87DC585DB12
4E106BBE9D456CC56FC6647152B9DBD7FD6D4139076E02E9C9739EADF78C3F55
FBE0DB93D301098DE616A3BFAD1C21639ACCF2F6884AABF3FC4D08D871067B0C
3D4950C75B50FE7D71D8168F1C38C5627A9142FDF24D25E85859DA4786F7B443
07882CED6E8CE13E1383F72C2C07A4CC284F5D1DCF911EFFF0D4C4FBD9F42E62
4CCC9E372E6D4C912727EEA695BF3BCEA5E9B14225DA2C22A8CD11018D6038AD
BD0E8070BF7F8B7139ADF77EBCDD612B8721FD83E5BE558C252669FB68471455
9919F10AA111D6B991AB4600BE78433C5C0C372FE8178E743D5A5F08119B841A
647F95474CAE60D6FC05A0F71CA8EFDD7CB216BFED6C6CAB8F649A6263A9E70D
B13D3D3D9071374CE206E364A2529C9530921FA718D2877F7005F6CEFD02AB88
94DA38960C51916C06BF1BA4079813C65CF47A7BBE30471194F221F572277A5C
A30AFE65B2DDD9F4FDEE3E3BFE3EE2A18539E393F5CED891AFACC652349D3E6A
167D4F059DC9084B5D7158D89312F847266F20AC2CF9937F1443CB0A37FF4636
91BA6AFFA23EE7D551C48A4E1747A7025F5DF067F06062A783A6350DA189409E
95A8F12BFB33A78D26796EC27BF9C8682B6D6B6EC834E848C875F584044D189A
63F189BC2E05B2AD9B564B1327EA52E0DFCF05AC3BC7BF893575CB0D4BC45264
A9A7AF85F605874401E4E2B331F06294B4530070CA5AA306AB9C37DC3E6A0A51
2E760EF7F963D85F2C7F9739126A2301D3649E0FA8522A95ED121278572ADD3E
451B903A5E0010F8E8697D74D17BF9D001262F83696E6DF7FD371A51478BB8DD
FEFD582E0122BF9D2EA271A669C738FAE93ED61B774549CC74C063F05FC198F2
34C946BCC15B29EDECE4269A6EE64CB8A00529C75F73C7F130BBECE885DFAFD2
D1FC84FC1409D3CF9A36CA463917DC499C4271553827F419868132C300A4F27E
555CDBDBC28B91B1C2480A23AA97C160F9793514540C55DF98BC3EF5F6AD267F
C8EB11DCCEC8037294EAC690683204543A22D33ADB6A65C17977D46B9B09002D
BE79AFBAAD24E2D13A96208E35EA2B7427F4C3CFB9E068722888342850F206E4
C6A08C98BD61BAB0871B1D9721361EF15DF10B246DA19821823D9F9F4EF44A30
75FA7153DC2ED827B854BC95F2A19747F515EA762C0005E308A9F89D3832C928
849E61066C861BAD6C7A2D9E7CA9932ADDDE5097B588BB254D4178B97C567391
424741CB210CD6A4DB198F1453C7BCD54C9F8C81CEDAF295574EBED60625F33C
39A4CC97AA890C73331C591C0C0C6CC75B35DA0DC812DDFF84A4A15394562AD6
11F8D614D73F419BD261DB161872547866F1673B197B02A14C7F2863BED44A7B
569C18B16EA08AFE4529F11C14B08AA67EEC76B2994823648BCEEE2DF782D965
762E9E52429D98513C1E117164F701A1AE98B554187060935838E474E2B6A18A
82A9106624D173F47B7C02D4CB7455CAE2EE374838871A45137AA44A1F9A8716
AC17AE15C644A70181FF8B83986EB56A641FCEB183BE4D3A033E0AC91AE68A66
909D3E047DB325D85BEAB6D5D1370E44B4D2BAB46489263BBAF4DAC50FC4A0E3
7DE2C1C56E76516294AD248EDF4378CF56896DF46582EF8F3FC14A30DD966EBF
6B6325D8D9E355767AE5A7FCA9B91BB4A6E7FEEA17E0425CF07210854E1DA7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR8
%!PS-AdobeFont-1.0: CMR8 003.002
%%Title: CMR8
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR8.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR8 known{/CMR8 findfont dup/UniqueID known{dup
/UniqueID get 5000791 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR8 def
/FontBBox {-36 -250 1070 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR8.) readonly def
/FullName (CMR8) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 64 /at put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9928A7C95D3A6E9B
8E92F84CA0AA44461D2F4FA0F8B81C6F5B7BE98C9712BE166610465CF689DFAF
27C875C029C0116DE61C21DA0092D029E7DBEDFDDEE3D67E6936623AB53FA2AF
18BEDDD7AC19A19CADB6ED6CA7A26E6044BE414FFF59C0B98D5819A6B881F9AB
7AD0D03BDD5CD309C67811D5CF0B93F6FDC9AE64F74ED4E81F2E18D880BD842A
DAFD0BDF06300201C6946087FC0B999447BC370200BFB8CA420B668B32EBC242
6DB1546A7164CF55B332FE9D239B65F532B69EF9F4F93828A44C8F5C526126F8
B7A369114CA68D4F98638121F4E17F351723D9F1A902FCF087F94AFD23876517
2D15B482AF2D68C3F31FFA864E031596E597882578AC7FB0DAE2A713B065B374
3E2E72519ED6D50CBCA40A7275A7109A4F3ED8A4566AD8832890D3D1F4899850
9B757442B7EA355175CD5D6D8B4152ED2D7EEB4CE30F174FF672140354046A45
7098EC45B9DF3DF5CF7B417E201DA88308CEF4CED8E8903AF24FB8DD0187352D
25738519ECBC70304F8F620CC45D2586619205DA3955696FAFFE2082402B3502
CB682F410DE5FFE80A4DA3D3BCF02E35BD577D0DE55E7B8A33B7A2FD5136B5DD
A0BCB61F8E7F4363C21F890CF287304DDB8FCE7FE207C0D160B81E7EA662BED2
DFF8C444E19C91E72254257CD87240A70F1A964FA54ED9ECF27E27A57DACC3DE
EABB92C085030870C6CF5C40B6E47F5C0AEB30E84A73ECDABB2D754EF6EA28BB
16EBD6636BC288E62F4A38BFB55F5F4DD20FDD77D767F6CB52F9513E8EB75413
07F1877B2C01278675177499E4E8EB09F2657821613F5C7643FC064293EC6E9E
B519FFAEEA36B19C9D1302CF91FCBF87FCB57C5F995CB6712BB3D8681EB6F05B
B2A4195A3C73CB4ABCCFB958EAC533BD89560D2790CDE1444C0F2E4EF27A529C
F01052964E56F6D76A190E5FF45934BB711A3406284AF130D4DC0D8112BB3752
762CA0200CA262359D4F54C0CCFA9A50DE18C7DB14419E2990ADDC4A54B94978
D9174CA39434022FA77FB30179EF805E2189C35919F5EBE215EE2A00B4407826
CE56329C5586D8B414770BA5D45513C3AF1931D632FCE69B4CA504944E03362C
74A1177C6398A61A12DAA0F156543E2A8E9969C4308B7ACC21A5ECAC8F172541
1B1316A88C0C163E574FFD3CD22FF08488662FCF2F9344BC25D02146F36CA6F9
E2D0130C654B7485EEA9A110A33AA0C769121F81821E9A2BD062FAC158359D44
3F9D9947200EF1EDDD5860F10438B162A69683957300C75AF7546C70C97AB2EE
37EAAF0089E2623F787F252569B06C665FDB45EC9681C0774ACFBA76B98C4E89
7EB12AA5F8798FFC110B49C25E3A483ABE83B0BCC6DF0578403ADC369E013762
C9D08FC94D949BAE636ACA9F36F4E3F02296775A062077B011A705B6F1784D36
A926622CB3847533D7ACB24A4EBABB14593B5D8E1DAE2BFEF8A51835C8D4E76D
7543C126A4271C59A5881A5AF89331694F84489CA66725995DC3070F306EA447
CF30F63CD476A46D528EC1FFBFB8EACFA2BEEDCF54C92CE2BD26DEA5827186BD
3A4D1709415CEE7D51D671357B4A5D11E835F63521B9824EE5282E58F05A8ACC
FD249461181A38C2F47BAC4E79BE368D64F886AA493C61CBCB2ED401C8AFBA61
59CA6F6216D941A92AC52ACB3D7ECC28D6A58EF4CC70BA6DE23E80937AB38E89
6F05FDD15B954C0826636267EDAF9F2BB466BF79D2E10EED9B04297E6BC93069
79581ADD1A9D9FAE9306F46AC95B98C60A2E53D60CF1AA4069BE301E17E25070
F98DD67BD8642B1D07571A32766072E48BF27E1576FFEED300D7313A358A823B
49C8F135961B7E259095C9BB67F996CE0B90E95344F203922F47E11753F70D38
2ECB615403490310CEE6C03AFA97DA2F47ED47125D110FA69725BA0018F6A40B
29A307FDB3E52322A77A0102E6F57654CF1E96A134D13860D83AFA0A41112D3F
2247A09ACF7D06713BE443FA27C7E7220E875965D53030FE7D2D62EFD2F1DB87
5FB091FEAF599BA8C5167525899E578AB341BFE2BC4E53A047093168AE189237
EA55F055514EFA939DAE9E859CB5FBCF37D99484F44FE5AA5FA386B28BB642F5
5DBAF059A50FE96C7C6D834531D64F1F2E99AB2E96EE74D149178B1C0618495E
293973D9A03E1790654B67C0882376ABEC17D74785B3737D81644F28B3BC6FFF
F92FE29126995A07E0BC5EF3A4B93789A103C428943E045B8D1A5063AE71E806
568D48072E53DEA85253B01DF0BB7367A6BE4DD7BE514AD74E3F77C825ABA405
64DAFA25EAFF8F63344B5F6B523629776CEB090B546469F6A6008DE43072DD3C
DEF51F62731037D1FBD0C038A1E9B669849EB3BEBA281624F13D20B61917A109
A0A7871A73F7BAA18077360B38A4625C5DB9AB9E43BDEEB856FD0E2D3AA2E075
267B978B9EB47F2369302E87DBD5D5B422830BEC32411FE75D584C58650EFB1D
136FEB92B94BF8939FD63AFB7349C7511E5E46AA7324F8B1FFCA9C2A9E9720C0
A720918E8E860F137567D386AC29870FD990BD69465B3A3D2A0ECF2753578AD7
80DC87EBB319EB5AFE0B6F6FF8616EA30C51425FE3ECBC5F8D0B0BEFDEF32FA7
D168B4E85C804B7326A0942CFDE732B1171C643452B7099B31649CA2C38B62FB
46EBDF7180004C549B53F88021D029452C2B37D8C565BCDB0B11541039A13C0A
E45D4B68C7907B8BF08C6F41F564B62BB554235D50330E78DD02795516D969C9
66119D718798120442CB7EB9877FF84EC69DAE25F8559DCE3BD8042959F695F8
2F99845B1B5680DDCF181D806CC4903E077D1FF5E60918EB34C0B1E028422B71
CA63EFBF3F4F3CD813CE831EB54265A555BDD35AD7D723F9CFBDAB29C54F8AFF
2D35C6A3299E0A2DB470C7B141B1E3E10DABB7873AE302926BA8743278FAA8C0
DC6174501D6A289CF980A3F55F2DD5C3A514E7E7F13133C35D2697D64C25130C
DB78FC997968D6B3BC929E8A31B6D212C5128E4412632BC52B3A1049F7F2F61B
C74AE9A6AD19B9E2E240617E2882F7D29ED3A4279439107AF9AEBEE47CE85DE5
CE9595A96A118ACF1EB1F5929930321AF7732E351E18C6AD378508E37B4C327B
0E06AAE21278AFA9255AFE5C022034DA2968D260879B4B38E7EE2E11A593DC3F
CE71ABA050C004473324CAB6F3C50E85DEDA3E9A27388D8FD3A8F6E42A79670E
F7549CFAD4CCB337A6E0BAA4846ABCA059F1E1933CF11DC0FFBFF550CC4A1B47
CF7BCE0875FA747AA854534960F757884505A5AEE0330179A9547A4AE3E68479
7A457DE83326DC30B67F27CFD4AB697601CEE352F72F0966B3CEE3EA24683BEF
6D23AD51B8432C3F0DD0D0F80791E1091F38988B7A54E466A9AC7810DE8B7893
6B0AA6356597891D56190A7660BC7F657BC559E0525D41EC228078F2FBF89C6C
72D666DAD838CBF0861FBF0A1D4ECC069AA49DFBAE5C56B781A1D5D79DAAC256
13E3F9B928A2394FC71691E4355642764459714412D6F8EF803FC5F7353822DE
6CCBB8FBE5AA1F2C7F4D384039D85E7728527DF9FE0239E2CF8BCB7411C000B7
1FE660AE6A2A19229E5E8776CC83EFF3C27403935756463EB4721C51FE0B1197
86C2F17842A0FB639F28083DFD4F1E86D7D3BEFA922514ABF489C5CCE93D6F72
D2EAAE14F6CBA2BE4BBE7D7EA8EA19DB3A87350D4A52064137C3D15A5B05B03B
70B1DA7328D10713B83974C390C3270AF5A9A47C0BFBFABB9F31063B0CCFBB10
0F236C74446688198EFF039110F6FF42FA9F82D463AD3958B5FD205BDF85DE20
FE3F0C7AEEF350AEE6DBC1DE2E2DA4F4599956F59D6F121F7086DC120416E180
52DBBC4E56C09746938698860F30007091E1CC0351B43990E47208ED495310F5
7BA9C6AB3CA10A3F1B318FD47C1CE3B9FF1304321F9623E32D315AA9CE64B35B
F841E6C62B5B2488A311C94937879E5E0E170FA77AF0AC75C5E6E9F3E8F825AA
09C1702682E14FDFA72D27901C5BDE009B1E52E8C4511C6F6336251BD45261F7
401CA3DAE7C4B0CAEB91B9954BF4A97C48ECE7FAD401351D59DDAE9DA94E2335
74A2B880E4749D3D7026CB5299F16C204B6E00A20A6619C34922C7D3FB50F127
3157CFC08DCC5164C8023CD1B6C3556C73CB8E4ADA845339CA9BABA1457ECEE6
ECB9849DF1F0FEBC89E5F97C92978A500196520839CEBA6C0FD2E3D27BB4B4F0
93CB2BB565F4627C6DB62DD0E084E627D69B5DEF42EF094381B62C0D67EFD197
301B132420F51A41561E6106870147E0D597078435BE3819ACF0DE28AD779847
F3D2CF667DA06955D53E0204CEA2935E9E984E76963D3079EC092031E2A10E61
1227E5EE6770DD4D745A52655369EBA06A19BD7D95BBA271E488241199D1008E
36EA99F8DFD2A9F87B06B070158B466AA4C6EA3BA77DB0F853F0BF9A304EA291
34069714368E0B94DFCBA3BE5EDB6C8204DFA7EAF5C3406F60A7056407D1BF6C
CB85C1F432F97D821F5518BBA79AF8453A568FB2C2D025A70CEC75F46C545011
ACE3A99B2582793BA1DC655230AE2EFD24DE20A01D4A441AFFAB7771F223FA6B
9169849E727E494247F67D6E1EA9DCA06A082FE2094BD548AD7F08B565145634
E7ED832FEC1378306DDC796303392ADB0CBA130B63B38ED57B7828B47732853A
893E8836FE19CCF27002AE92C2B2CACFDF8A42F1B8066E033B965D2E9157FDF8
E1264B40813C1A4CE424274AA3528A4F09B3B53DD4D23789A68B3D17BC1398AE
0ADA2C2168427A49846DE0216908C2FFFEF4F13C1ECA12AD341E238EE46E6DC2
B71B54C52659632911F901660261E493AE2483D64E119D9924489779B62BC9FB
A052E822FD8D83178E09ADC825DF0DA07FCE7AD68EEB29FAA275A13691B4A5A5
B0BC0499CD6307610CD6209583C1152C559A2760823F8DC0B9B990BFFE7B7E9F
3969B968AFEAADB9FC0F1410EBBAA0DB979CF153F0B8C978405F8E6F2B6406D7
AAFBF4A655A15DD6D1E9A7EAE10EF89264659B09283F50B734236885FC09FBE5
98D780012FA77FCB19F15BDC522CC7312546C0730EF5225DEA8C22A3BC6554EF
4FE73B9AEB5C2F7DBD474221760E5F539A064AC450591BCF3499E3968F2CBD6B
F15BA2B37080A4129B66D4C2188524F025414F14DB3F96049A8B0E5EB2BBE7A1
AD64A988FE875FE4FE5186BB4F5DDA16983CB052D474B7D72F3E8965663EB50E
015C72407C3437142D3D7DBC055FA627139488DBC5A0F98D805C2143D99F491A
167E07AF60EC9F17C36289368D740B632CB919A0E74C412B76CE7A5906D5200F
9E79CEB9C65ADA3A0F23E8947E834AE7A329A9F0AA7A6BF545B1D7B4666C6522
CFF268634EA06DB3A82D91A4C0A9B227E79961212881A54A6762C335DE7E0831
130C45D94394D21C049B9D189ED955438C2151514F17BFC67E431DD9A8349202
2F616AEC1C7B19F63D5000EB4771370924BD4B9053FE78B5E4A244B9A149D66D
A8BF3B398396D2233E92E4A5FDC70FAADEADAFD255193D688842DBA865CF6154
C9348D590F3FEB135D4B7BD4D76A52CB140888247CAFAB25ED51F4D187041CA0
ABD956F83A5661CEC171B52AF92F9ADE27973B560C802E1E0FF51C4003D1289A
CDD09F8EDA8AFDFF666D35418CEADF3B0BE298F0D1E5C8E024D6A2017A7E71F3
3A9FEC9930F1118101E040339F9D41379170928DDF5B5875212B271DC843F612
E0C21C67263186E3D6929160464D4D5C8928E14D0845762C36FFBDE548188E20
3B6BAFE5EECA0385142F01216FB8A90C43A472C1D4447FE5C7C78CC088FC72E7
3FAFA062C338BDE8A430FDF1951B107D8D73FF9376FACDE5900BA362C66F8C1D
947F9545C5C13A53E4479B1C1A50472C05E8F8C266C6D4F4EB08E97B3B1BA972
26973B844545089C5732322BCC9A5A8FC972FA0D7DB8BD85D2F515ADE65DA479
0224F7EA2276CFED0B75B2C23AE7377F86F1F6F205D6FE19377D87E782143697
984E731F83CA888199CEB425643C259D4FB8B58DD69A96085198306494BB497E
FE7C9954EF35B679BBE3847A9C73507874F71FC97665E2A58BA41407A1745247
44A79B588D969D11CE4B863CDA655DAA53CEA5C3C263B345E782006CE9831D49
603D2D95DE9E370D617F5928BA416C362BB2B4DEF16A5D44BD24B34257765F3B
6223B3F9B54DAED69A90C7050AB97B06693D253C6894CBD7B497DA449F1D9B7C
D91B421891EC0724F59C82B9CB288DC42F2D2D7A7F22EE3D910E15953D7766AE
276DABED3820390BAF2700C4653E1C77FE63DB71A66D93ED293E25B8412A1EFF
809554BF04ED0DE83F7F190883ED793803CAD2C34A66524D3A580ACDF3C13B22
08F18905E7A4A16DA9ED2A112462FB9FFE481EC2069E484E8BBFC19D594153B7
3DED4C11762223B7586483B06BC164D824D1A6FCAE80A35DE0DB8B33396771DF
76DC5C05578EF1BE00A70BAF3D951A01C87328DB2B0DAD6E1B4C21F37D1BC0C5
A929BDE5EADF20DA60C4DE2E3C151005814F24824D33B95F700E09A0207EB602
3EF60DEB1622B91DB99A855A8F1DA96358F05CFCEDBDDDFC8446AE3391BEEC41
966E594E28D052DD5ADA49DFF65E79540EBE5329DFD86C23CC800F95221B9C18
CBBF941D2FA47EF1EF59A89DB5DD188E75EE94AD2A79E2221107E5992C00D531
2E00B544895A9204656867E3DE9D4CDB64B920B5CCA9A73E6514B36CABAE01BF
94C15603B86780190595560F792E5EF01650074EA4A9BBC6ED284B9AC2020641
DCBCEE0ED27FE58171DFE104EEE4202759E594159DF45113C00236127A46FB35
9EC705F21C0E456C1F0F924594C09AC64D4377C5FEEF764BA4A09ABA8D09DEB1
FC13B0CD202B2F04CF5D73DEAB65C36C2FA7C0DC236BEEF6D23BFFC9C493DC8E
1831F19EEF81EEDD976E43BAC6B5CED13F901DE59835FC75490EA528A72CEB77
24C38B258EC38B9E6B97F85CA8C10D8809BBE55A6FAA12456FCAC786942E123C
06D1E55F7ED04400088BEC968BC5081DC7A1B1B65166E7821679F76694F235FC
6854C8776AF855B83445D9FF919B1D80E98DE0741D06D6C5EEDB3E3EA6392530
F1BA817737D8162F7B3A36AC2A03190CDEC654383E31934C3E0A012B639532C6
26FEBE9B412F1C92D1943B7C18CEF510729D501349644C97F087F2F840074AE6
D8CD0FB2E620FFC908BFCD938B675A0A4A687F7FBE8F3DD06A62D7B6DE7DF3E2
49D367D60B10061EA86CD512F5A1BE8950D83C62695E130128E0037B62552D17
064319BBB9B1FAB9D79705E5D68AAE9B36EA14BF1A59A863BDB8DAD9AB5D7B8A
E30E2B499F952D65877C8E38EDD7DB29F9579D09E629AC188DB6A6403AB4BA3A
D358B3770D727A2B77D84B6C9EC17E29D88E3421F9B7D2D822EB78BB8BB50692
8C46DD6F9BBEF2E848A2B5669B200019802AD19661537A84D3514AEC5AA47445
2C791E01DCEDF18D9506367241255FFADEEA6183F51A9F42448A7DE413C08359
52DAD2A60FD606AFE14702BD3B0EC448720FE63438D020DEDFCDE3582FC31DF1
17B25FC152789D2F17FD60B8209D292D2152DCF8D28B5ADC04F6659BBB746CDF
145163361823CA343763AA951C640B5D4A99B7787105A1609EDD6A596EFC3F6F
2AED1652A132D66117071CADB8603969B3A2F97270CF2AA8EC2AB890662FDBD5
00EDD53F16FD0CE199660202373E2EA28D29245A4AFD3A63695F6178406A7234
AB0C0FB1B19CB408E047BF014BBEAF4C9C19445C7819748F082C19E6E355EFDA
BF1C2DC348AC0AE6777F679E2F62A0A3EB19B7F08114AE0E56A3D310D6958AA2
348E1D304BA8C4389E525553A8791632EAE32B6E8D2193932B44D230FA17EDC5
7D407CB83D2501B0D2C9E86FD23E21F26DBAE2550DD4ACA051EA0A0030107676
3643176BAFB7DF0A157151F7625E63296E325E2C3E74BDEA10C3DA37A73F9972
4821E1E756D3DE2C1FB121371432AEADF3328894170304038253421DEDED8B45
D4B0DBF3B4F29F053C44053E14ED09E3E7A0FF377954754A34A9A04FE68A437B
8306B8463247F1E670BA928FF7D401437FAA45A7875DE9FBE63BEFFEC722039B
0EFA4F3DBBA7D50C464E3F297A0F2C1AC23880383DD1EAE1BED5DC11128649DF
AB8C8D394E7EEEEA3CD2038DC582527BE93A66AF5795E3F8FB790158EAE26FF0
3905C00431377233DEA8DBB68F708D35B86D297DAC95C9804D893D3A14B304FC
A8383FF76E2DDED31E84457C936D03766AD21B45EDC9A9FA5D694052EB291880
75952AA030C15A30D20FD1358CBB6146F9DAD481556EECE67927D5F8CD69B10F
D72BD5379AE5BF2A66CEF538AF1AD7C1FF4861724351CDA70B19FD64AF1AD298
E067AF56A2D1C7AAA4EF4FE57D4D43FA1130379C20EA09D799BFA4D15D40C546
3B4486759025BF4904C2426D109AA161C6CD52102141FBB7D13E40799FE0D83C
74966210FB2A04DA41518EDD617B1EA6F47A0EBB0D2F97FFDF0265C26DB9702F
3B6793FEEA8C6CC2F331C5B4AFF0E50F5355E38DD3A1F163A1DA8BA81FE8C99F
72BD3CC90F3B9E88F620B29A5458BD6C7307E8E389F15EC6A0AE970260E41C17
FB0CBD99C1A7C9B01DD91D2D2BCF34923CC375580A1A42FE641D499BC88ACF0F
226CCDF39A4FC7E7C9691059D347DF6C594EC4ED2D7A175C726FF6D05157CC8F
D9ECD2A8C2613F07B02DCA5BDF2CC4DEF46F68D1FA02388C7D722C38C16C0E48
7EABA7801BF3D873218347EAAB678C3C7849AC9C89C05ABC8F823679FA14D731
8B9E31A47D53AE41A5B956D8A95FEA7A3F6ED50035873195C6AC6BC8F3CC69DC
5575C9F7966136E7F80D0CA8000455159714C4E47251A0041AABB8E55D4C9322
3F3BB12678C9E927E1D8278606F6052C9368260A9305629B25EDE43B66198003
270593E48D98D14D75280EB57355C0FE4E3C53171C308681AA246047CA296FDC
C9B8A68F4530CB66E6B54C581C2E447E4DCA6C8559B3A864DCA35BA4449DF519
011318245A95D1F2FF7E29203766BF9E65834E9170DA9C08BB3E919C6E545BCF
E959DF7130E3F29BBB8AE896C9CEF4EB02D1B2C02807B36805103157045103C6
F1766FE7FD56D43F4197924C012E0836FBC2D9C21C9E36997277059755173BC3
37280B4D314FA9F3A2B2DB82925A56F57A05F1DEF0CCA48FAB8400C78ADF435D
BB26F53D4709C5A24C1EB5B8F37CCA61DC5F1C8ADD48541053C4B39EB55E7F77
67B215745CE74FE327D225BEA9EC4A57E91AEF6CFD8C2BE072335490916D5C62
DD7CDF37DB1C251B7F55C3B83827FF93E781B10BEA2ECBE11AB19FDE96C43FC1
B83E1869968FBB51165226C5F8AC52BD309C660EFF434CCDDC96690732695719
BF559EFDFE0B6EAD6BCFDEE0A39D75FF907DA2849E0EFB2921C3462E87C36D0E
3449361E23EFC82823624BE315FA621F482AA940C78ABDDE922B2271AE9B3E3F
8272C3EACDD687928DD1633985DE2BF059E3DBDE012C18F6AE8B711FE9BDF979
DE0A955FD707DC42973D333C8D7F2BC38B8D0FE51C7F53EE41B4656876A468B9
499929ADCB14728000205640C4A89B9CAB51C523CED124E49A39E3538AEC51BF
FB7230D3B809E2504073F13AE9A124E69117B28109D493CCE9C795C72BE005C3
B2EA046013FD00EFE343394799A243C4C8D9E7D802376AE02B1CE7039EDD8CF1
CFACF03005F623F760676FB1ED875251020E124913C71D42B6F311322A4BD85C
43DF604B74C19D998B886BE147498F75DFAD2DE482C82696E65DF27DC45B761F
27A105A56936E2C7D40B914D872975A8AD0DA978DF334F2C1BC0EE05C2E4A586
D5F90C32FB2ED40BE9BAF092864D4FBAD5807C7D67F654352DB42EF8ADDD409B
C3A70B99EEDD55C86B895DDE8E8F09143BE9569BE7B879E4D82CB8961DBE87CD
54598C23B52F998E74C773D2876D3F59BEAD035E19585377B36CC6503E6300FA
C6D5AD04F982BB9D3F4FE2F9B056E5F2E1DD4877C31A827F4A79D68845AD691A
526EC5D6BA8411CD773AC41DD6F57306F553D4919C16E30403D9A367F897E734
20171F6FBE776B3B14702331EEF065F712C3023F7FDEFC33A6245C20E0496B6C
96F43551C1C1028DFC00D743A67551337DBCFAF61F6361D12879D78AC6868AAE
18FD9D7491DD84CF4DD44AE27066144ACE53AA2C41001FF45209ADB2CB808EDB
3711F35D6957F6B07E46041831981E7E4DD186EA575BB7738B2442250BC28D6F
317845E5770AFCA37F9BBE221E39ED5E4CDD584D477203CCA2CA2A47E7686743
1F73F05089E00A9A7B1ADC79B42CC574BAB3C10B42A227A12DF1BD681E16A3AF
6E023F1AF870409874D13DAE89598F39C9E46DD5CB8CFFDFD95CAA1864954B41
F694323E346991FC643BB5B434D6630FBC48FFA88CF31DF5840058F4B048079F
BBE676F0578E09246A7DC70C99B7DB441069AECFE0256645D4DFC318837A4D2E
44A67EA27013D5596459AC9415BB4F27E0C7DDC8A34BE1DD403BA224B51CE691
455BE7E114D9B3A533F9D75CE675058DC362C59CD087AEF796E3471379A70DB5
1C853475CDDA3F24A848E73116805FFDED3F8472372A8B3A4332DF7BF348EA56
7A42AC9144FF4D6FEC4E50A178A7B949C08C564402C80DC7D665E165B8A93326
A8111AEFCF2055EB2EAEFDF16B4728FC0790CD2239323AB34DEFE56AF05F319C
1FBD142AB52806F119E92FAD93D03B58D9F85CA65D37423EC9D1316EF0D8EADF
9D1019F9ACBB4028F834115B7CDFC0FBAD7C3EA0B86C31C304C004899BD6E829
0FA62C7737A61EA5617DE13598289D8BFA3D96062C8CEC2BAA1C317F23E1A782
8BC076AE4353A48793B032C7B516D1A9510AFF58BBD047B6FCDEE74497079430
313CCBB530A50D48AA4FF5C43154462C64E0C5B77ACBAE140610BC868DC2A75A
BC377C1DCCABE5E8D81E11126E4A13E0EB27401E05634ECDF4BE706A9135F299
FF3E5C929497CED54A18D6F9241F09F9AB4E1359AF7628931352A77A6A1B4899
07F97D81C5E8C1B3E767D34EF4882A31E622F47DF05921B0F36436718E45BD87
2B28CB8A0F0D9B9577752FFEDA57BF0516FA303BFEA997FB0E6C703FC837EDC8
79273272A7F2E3755A41D019DD106C432C46DA4F3DFAA30D7429A6B1B412AA54
68C1B2AC372E41FC90BB28C1022E5B263308BC5C5103E8D4E7416943D32A36F8
B7B928525C5D81F3C480E9D7CE0EAF2EC676BFA21D0665D62CB2EA5CE5EFFDC9
08B217A87A33A05371068E066C645E6B5BD05C5D22E0B17DF9DA75C53EFCA93B
CBD9B6DA8842480B781D4F0C94F0F720CD3564FE7B1687B492F7AD79E7D8E727
E21238B6C295F5D2C984A7AEF071D63E71E9779A4097973E1848201A5F81CF0D
DC078324F21759D0CBB8ED17B8027E64515A8A5DAC624EFFE6B14CE0D17B4F40
99BEEA59AC3AD4F8F36EC8793DC2AF360FE755137A6E28125BF9D9AAC28F8E55
70803F56D13CBB8350892150A0B1680D0F170D31B74969B6EF3F5ECDA9FBF448
0E893B439661ABED690A61C484BECE0E1294AEBAD8C1C476F4242BC87CD56534
91A24421F100FF55149A23F7A28EBD145819300B1717001DD18A329E8377F89D
29457807B949EEB4AF83ADF4C92DFB139716A8B8BCE2287017BABF05FEA6C890
115918346F79474FDCC7D57F50A06922840EBCEAA78E95CE6D141716DCA08193
1B7BE67474BC085D5836435F85A44496822D88AAF522E54D8DBCBE8F4B59BA4F
0901A0D2C43D87F736F1E6BA665146B9CF7301EA52B2F52FD068B12C79BC23A6
4022CA1642D98B1C384E00F76E0402F194ACC9E9C68BC7DC72470D25144D6768
0F2CB70072EFD13E34F81A7A238FE77A5B5B73ABBCAD53A2DA6E13B34E253CE9
75D1CF8780A45E57D49BEE6164ACB3186A23458CD43747E7F99CD7DA6892F867
508EE98BF576EF318FFD6306B4BE3F9FC8BE60546112C084147C12376AD52185
0F62B5487BB96C388D13C6670A2CED9FF40874C2BC987C9224A234549C9B9A35
D8DEEE649F6316BCA05E3F68E05B675D82A5FA9B19644B63B689419F125B816E
E0DF6A7C3B044F73C9458752ED37D4B99A500E81293B6AA8F429EEC7D35E3D1D
B7A109CD87B41046AF94AD591852F2D72BD7ABBD18AECC0AF691F6447431894C
D562D278B0B6ACAC12CF637A7C056B99ECA49E2F6021859F83BC751E8F126531
B2976DCA32564BF5DE117A1DD2AA39E08CC8A0BCD819AA59E90A89709DAF6914
68FC4AD4E6E9BF7B9587A11200AF18B7EE6AF5685C28BD1BD84698A0C465EFF0
75DE1E2C0D4EDC97B3021E80B4CAEB2C5CFDC86D1AD4143E2E5BCA4B8F59CE80
5DE41BE9ACD4F2BD522D21824D2E9CFB5B068E305F6F7BC2648069D2F3D0CD2C
2D6F0ECB69016AE817FA422E27D121899462D8998B3624E203EE5D14853F2ED2
FE4D0124E32323C7B940A42CE02B1C185EFBC745271A3DB80345CA3A6AC11C7A
9BB640FFD51FE5B05CF75940D14C4582ED9DB49690BB42976145D29AEFB9B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Regu
%!PS-AdobeFont-1.0: NimbusSanL-Regu 1.05a
%%Title: NimbusSanL-Regu
%%CreationDate: Thu Mar 20 10:08:51 2003
%%Creator: Primoz Peterlin
%%DocumentSuppliedResources: font NimbusSanL-Regu
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% Generated by PfaEdit 1.0 (http://pfaedit.sf.net/)
%%EndComments
FontDirectory/NimbusSanL-Regu known{/NimbusSanL-Regu findfont dup/UniqueID known{dup
/UniqueID get 5020902 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /NimbusSanL-Regu def
/FontBBox [-174 -285 1001 953 ]readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (1.05a) readonly def
/Notice (Copyright \050URW\051++,Copyright 1999 by \050URW\051++ Design & Development) readonly def
/FullName (Nimbus Sans L Regular) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -151 def
/UnderlineThickness 50 def
end readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE33C33655F6FF751F340A8D6C01E3
2E02C24E186BA91B34A1F538959D4450CB683EAE5B034D030186901B458D3777
6B3942BD2E07121385120248891AEC2EB33C4E3A0CF00828D0F130C31A918C18
979FE94379C648EF21ABF659253E43CD1253866F157F1DF85AE7E8714F061B1E
ABA3AD094FE8D6293916FA82EE4F486C7E513A06D4C9BE44306A8287970B4ABF
B6D1F9274A5A0BB6ECF713ADBD1260D5D6C4420D357FD486470A74B2F0621B59
A9373ABECDBF32FA68AABB66FAB0C970A3354A335D70DB2CC5A3208BB6D768E7
B58CD9BC2B6B7E110693C5A88D680B7290DB121996E3B7C8AE3C23147280F8BF
D8C60B415552700FF0E44C2257B467ADD5D550F61EC34A76143393E0B34D55C0
8B64B48E5F1FD16E16B967511AE15434B7F755BDF2574191E3C3DC528B69B5BA
7DDBBD3C7878FA69ADE75011A2C0F02F5707E86FA632D1269281D3C265B31F3B
F3145052467647AFE18B9D763FAEE4BA72CB9C385568EE5BBF5854C278F1E3CC
475C6234E83ED33345268BE52F0931B58F302EDA0D5751348E7B7E53D4882FB6
9343BDAAE87E48F6E82024D8EC1FACBBA36582092CCD76553B0449A5090774EA
7242123C53B80F2E927B98DF2B36C403D1FA1E9F8439F3964DC9F89A0CAB5AE2
C907309460F097AA87BD156575D6C73EDB2B40C015E67734397ED14395C43394
7A0201C6B0F652B035FD7BB82ED236D0F7C20048AFD83A56925C7A2898B46270
B440913E4714FD89697B3E59F5BDD5A2AACF6630257957ABE1A63502A3081B6E
307A534A9E238F986D4C866AFBAB7A0B1B5A6E99AA0A56DC1FD7E8A39CC45147
259AC7033A0C58192CA82FB12E09F309F75690043646193AD92D2368F345771F
01CFD21236BA52F74E36CF4B94259CDBA2EF1D61AD93A2B942A9896B0819D20C
59E440851CB99E89C887FC62FD9E7F88F54E5BC157D81A5FBC70699820C51BC6
27D7755B195C0BAD8225A6F3EAE0A5A674E8AF6B11BCC69DCF5FB89D8BE0E2E5
FE7E2588F93F583E4E2F6ED5457E90B902B02F51D54B9F0BA54291E687F4A7A2
08CA5FCE0C9F3B954247312EDA3C532D3DCDFDCB56FFE03B36DB7D549D4203C6
7DA8772A2F732A15DE675D3212C28DC755E3D0156A777BF514112ABBE4372ACB
97D7834813E1850F90CEE543B4C09BE1E93742EA98B8CACC09FCC4D2595EECD4
46C942EEA60211FA7DBC11CE869D55BF0C7EC6AA747EB2AE2CB3CC2DBEC936C9
540CE2E08291323B36F6549CDB97BBF9F0DA429CA9C863B629410885540DA6C4
9AAADB30C39051C993CB547BCD573D6448DC09BF7FF2D1B108ABEC2AAEE4060D
182ABDB3100AC627E5C883E8F42D90D699C8028D4123472F211C8FBB744D7E3D
C626ED03D8517D69E1ACD26BE4F83FAE31122294816736827D138E4F4CAB1681
236C1654E01231EA7F08AD0E73BBE1BE19A7AD6DA63AE0C7F5A360A53BB35268
CC90125C7545D9D59F5127F0AD964AA66DF020F639832FAF9C2CCA82C01120BA
6469960C350D3AF786666EC14158728E0BA2DD8A639C28E0A7EA8BBF608FD7DF
79C7B5DDEA05C8C3D6FC70177D1A9EA9AD056F0CE31AB535A22FF7EB33748071
694BCE70111394D24DCEA030AE4C07AECAC39144621A6B719682FF74DB5C081C
B538F17221F8D06EAAD43B64DA5CF93030CB93DD54FCC5B44980F2AC6A66C512
54F71283450DFCA305E0B134FC95E54C2699C18624EBE6A7D0067E306EADCFE5
2D2A78AA02574548893EE05FFD60CB41E00B2E7761AA55732EFE6EE3C19EEF6B
179276229BA324E59A81107FFFAE0685C7C24E70ACB8564454277C41C28075AC
96964C61BD933742996058691C47B09CEBE352FC29A63119C731B3FC8D78A9E3
69F922CA6454BC1F6CFD1E03B285AFC3D8A7C81B83F0D950DAD2F3E562353B9A
1D56DABD05371F9479BFA4CAEC5CBAAC37C200F6E27BB35E591601EBFF9580F3
78E3BF2E599FF22A1434E7D661083C7F8D02F91CCD580EA19FC752DC7DB84DEB
6DA73092F21F04F718009DBA58BF46AB95BC4B9154DC2390AE0089A9FEEC29F5
90EE85785CF7EEC7F87E5FB5F9B4D986B6E975BF8F27A17CC3B6C62F58C1E729
F224EC05FB4EC009EF48E7E56CA5CD83B143CE5C2E92F4A9C78C0B074F8E3741
00814A32AB508D50D30E8EE99A4A68AACF07094AF4CA2CBA140FD94567EB14A7
7ABCEEC8523E52DFC005E7DC4860A186F006339AC5668810A5D75C8B02FB4482
79AFA3A7210E155E3618BEC815EAA6AC4A80E2709C627092E1A3137CAFC1A856
EE913CABB9B2A1CDFC07658436359C2461BEA57F9CC512BDC51EF254958410B8
FECF198AA5C28D09422292380844FE7D375BA10C5BDF9D2843FC5CA819E3F17F
6C658C658685FA95EFA2CEDE9C68F323E4BD8228419C64277A9A14F63211FB51
47517EC668CE35B9C5532DD43A3E0B767F6680C3B8ED166296359290DF299C88
5FE57A62D57C30A4DF1328989E3FB23610D823B86B712CD58FC1CC7EE95469B0
8B1934413D8807A8A871E3BFE103A1C44B64E7D139F154795B4C5DAC762566AC
9950BD7CBB1B73718B855A5A4398EB19CA7E451D16FE0F0E1C19AED5E9334679
C247C7D1FE0770F1CBC0AD36E4862600E511399D22F773556780188DBB55184F
7F2B196F5BA65829D9109E395A486D4AD48D6DB2001691F99CB068EC99B0F529
2E5450773EE176953AC1F3C71669F4C261E06BA9CD09E8A071EAE1B8944C4CF5
9B4564DA6C51C3F01A4B69B445B57A6554BD7199409C5EE801812835D8022A2A
330783C102AEBCD292D36E5C8BDAEF59F579B4D9BE9112EE8E5A682403DE4982
BD08AD5FDE09BA53B6B6BB8A4610BCB91F157AB353B8F3213E4AAE0D777200E8
EBC1DB38817E534CC2DADEC81A3B4BDF044925AB86E28F8B0B5E4E1FC4C00D21
2D22E0146EDF026FC8883E48B530913AEBF504AEA0A41D10D247041077207160
F1FF36B7DE1C86A7C5437C384D4AAFBD7FE44D0BE3634AA9FBC94570B52D3E77
719D0B6E0D7A1D3F610A8236099858201774F78FFABB136CC554ABAA8FCAF83D
23CFA813DF0FE9E224C1457A6AF44907531361C8375FFCDA7BAFDAA5AF84B3EF
03030B44090B7161873446B4D12D49E2E04684DF94D6B5C755BB95F54058F197
CF0B233FFDCD223D860296AF407E64D14EA3C6359EA5F7BCA7A092BD64CD598C
2785305ED0DAAC6B103BA2BAAFBED249D9AC90A7094C60D1D2754276DA382DE7
A0D2CFF39E22922E846FD28E00EAB5175C6A8D26167A9EA50FC5FDE5F13CE265
C3C00A93EA012A40E06793D493546FE16AE62CF9500EC322ED833A776D1300AF
8BBB7840C0FB77FDD7B2A6F3F047B6B5EA63723D7FB665D5CF74C4A3F7BDF05C
68F4C3F94BFEED7EDA71F7A95C376BB0A095E6C175E2065A64A5270295BA9FA4
5D8AE6462032EAE7D05C96A8D3C9FF39B6249A163137E63BF44FAEBA42B4FAF0
CEAE88878B93D0FDE79F775373C16D9DA7FDE787425EAB1CA6746F9AD5B9F5B0
4C9098C4A983D1EDC2987AF1E831A3F576AE5FF2B90546037B6E2384697E213E
1EB88A0F0656C551DEAF330F09DB88068075CD6F778D18DBFEDF83D10F5D142E
749EFB02500DDCDED17EFB09FD236B31D21AE0D41D06DC7839C89D6B31A63B05
988444DC8C58DE7E2D36DC592E7455FF4D4B04603D71D617A938A80EAEB33A52
3A95CB6C7071C8036EBCCB11FC41CDD40491913FD2DE6E5292FAA6F5B313154B
8F25EB4A3ED7764D50CBF9C8F4B2B29F6458901D8B99CCB09EE484DA3C0512D3
6ECC754F751B86E3386397AD98AC3288759EB14DCAE100B204D3E97886B093FE
39D8A1088F2AE84FC4C38584327BD2004F7E7F1409291B647475FAE656DDE30E
9C0FAC99E135C968FBE4C9DFBC00F46056362C1A5D4D2023F5909397AC8A05A2
C92B18B4EE0E009372D4190A14E46094D5BDBE4CCEA59C37A541ECCB99562471
C7963893876ED427DD37D6BB80026D494426D9DCA99E266A75A3B4E787B8982C
95A7A3F8A6170ED97211B9156DF9BD5C147E0A26E69742CFF142DC4F8BF45DE5
76E06C1BF6C4EECC81D5B5AF9224930C8A8EDD27A9111054017A8D2B44DD8B2C
89555C3B300DC4A74F369747EECE92A6E65A01E53D53EB3E11042F97B141830C
8C6DC35E89C8C82E8BC334EECDAEA01AFC4EB5D65AB9022AD279B3D8D6802143
0B4E5C7C946793984E79E6EE1AA96B428610B2D69E8707F379876B13EC7BF604
B917F0E530B9EEB3526DACC929C298E851621263D405262663E2174258A7AF94
0F65836F86CD035692FC38BC130F8C9619AFEBB59C7FE7446D6996A03CE127CD
6455A09B3D4BCA08132E257C18B833D3D5EF4234FD6EC6614603A89D196F4A0F
5EC45CECEA433EDA0DF17F1C2DD407BB4F32DD8A61B6DD27AD01A39FC3BC37D8
43D5C46FFA2ED93473F1A9D76288FDCA7C1A3933176F8E80D14A85280E85A4BE
D33CABA8AD796D8A5DF036EF74BDE7307F11CB937A532B8867D1E54B8DB0F865
9705F8ACF5188DE408BC8744F2024D3A39BE4CCDD55CFA218E1FAB64EA3BFCEF
77DBCE439AB22848AF1D92784F9D917B6EC76F4EBFA6444391217C0C4BBA960D
0FC81F2C96738F0AD7559C66CB34B7B3433225B87FCF40DF24921B8E2D47FA33
B80A5A377949A3D92307F4649E3470D19682CD7AD4843B1436CC322BDF71BE31
785541F6EC13AD7EC039AFE7CA6C46DB76F4C079913F6F7B1E068B708D18821C
741E6D83839AF76E88BA3C1FED1AC56F4864980B9A26F1F35CBF0362B10B80D8
7E6AF4BBE95DFA32B38E4C72CFF3B776CEC2AEB300C39C0E3FF203B4B3A5A506
F94C5EE4A3A1374D2A083257373538E3D3AD560167C252849C5EA39E6FD31919
067972937E6B0AE18A702AF818E47303E5A8C83C9BB81B4F2AFCD343138D33AC
7353C6E82CF91C86AC06C42B925725A948C883C1BF2D418B1ED0A0272748E540
5DA1CD07AE4938FF8DDC441E0E7AE3DAF04F32E3B02DF581664972772B84499B
E5E0C638CD2857F405D293377C0D66B623A951EF5645EEB1B5FDCF7A570A72E7
61BC2B575F9C8ADDCC45977D913612B5A1AC5AF3866BEA101C4D88CF61AD6B61
87208E3FC5B95008C917B74B39A76F5C826911C3823A27BAAF7B6C25A02C4952
DBC464E9210C1077DE48F4F813E6A39E19EB2E3B292E666E44160971C6D625C2
7AB63C29E5AC1D9BB05283D3C2B0C11AFA95D53A94599046C03670600CF4D509
FCFBCFE12CEDBBA792C8DB2847F6F1A4B1732CA63121D4AF5C38783DD4D14106
3A4E71F139FA84C88C8BBE2B758977F6C22483C0B8333104D455F32CF4AC04F3
5C62A96893734497C38B01ECE15D9A1AF722DD42CF0F5496AB5694CED9E82CFA
2DDB1BE1681A9955EDEC85F9C9201658C1526B851940F22CB6C4F76C05B09100
3C84E80B33E0426F712446CD5D24E5307E6AEACCF9909E4C19523B83EBF8B3A5
DD60DA49A987772202AA3B87130DE735378D56E32E9B66BA2782A57C367531F7
37020A532157AC42836EE9D25903254471A21B196A86AC6D8830C20926B3AAAD
E0A6E9EDBF4571D10E0F1C493B6A1383E75193F4F52BB477D166A51BB26056CC
ED521A6E2E3BFD5C107C45F5C3EEFBAEBEE46461B5A06221572B12D2FA6741A0
B52911258374AFF0B5FD03B207F245A7925E0F264B2F9FC1DAA420A5B8CEA8F7
8F89CE863E0434909DC52D4BE3CBDE075CF469CD8C66CA8DB977739E64A53441
DC07F68D967F5BC6B104A6F4BD387998339008968BC55F73AEF72D65D813758F
96E2384C71FC0FC94A42001ECEE7D4BFA160E1EE72117C1C7696910ED68B31D1
B8F6B6E677028666AFC517979766AD054A49D3A9641890C87E71D6B1379EDA63
ACC499D8BAF5001D6D79086456DCA46EA9EBAAAD49CE26E7D9CE59C780657F25
0097B97984A09D068201CF6A13C6205E84A9DCD0E8D4C17E14A04E04FB943237
B7B59267B9B617E9D3202BCC99934D4B7BBDF200E0AD2859E8D03055E47931B6
7EC6DF431535F996C03833B0F3A9122C937499677F8FF2ACBA4C014ACC37A73C
1F37D512F8BCAB957DA032E9671DB50573549D18BB0AD3876E23FB240F5C6901
7EE91BCA9515BA6DEB7E98EA3C3297F0FFE46D940540C89B45ACE8A916B4F45D
8AF4A33442D5C2C0A730B56DA3825E7B15C17D2D2EB388D72C8206BBA9424E5A
0F8644E5C65BF580A1B822BA788A184E2312E2753459A8DB2A0D9A8E3E3F5D88
91F3E51846331076B3ACBA7271C354B8B91FCC2BAE5FD29C087E8C92ACB9656A
B533A83985CE4A4A8FE953EB4575074C000DAEE99FAC490490973A77DBB67F8F
F6E873AB5EB30B7DFF7BF2BF7D9EC1FFFB67EC958C7D26CB5299F16C204B6E63
0FF9A002E7892ACF05B4EEB204AF5369E1C9A5F310005197C7F50B981953FDDF
8293E10C6E08
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusSanL-Bold
%!PS-AdobeFont-1.0: NimbusSanL-Bold 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Sans L Bold) readonly def
/FamilyName (Nimbus Sans L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -155 def
/UnderlineThickness 69 def
end readonly def
/FontName /NimbusSanL-Bold def
/PaintType 0 def
/WMode 0 def
/FontBBox {-173 -307 1003 949} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8D62A63193C4AE94C086C1
552833DDD8F116B5DF33205AE709B3AA63DA7BEBB165B67281827B48FB5EDBED
02A1A5C0784FC57D3487DAA59520BADA1BE3FB9795669924321CE4F466CD8E3F
7E8EC2494AEE80E2DD7A48A6861AF5B9F0CCAA4A2FE2B03498EACACD6B9C39C6
A8F2E39E06BBB061CF2EC380A32EFAD0B790974BB5CC3DAF0992471456967362
77DE34813F27ABE99302F86BB4D293A37F84667E7F3DFEE4CFE9D1A676A5728C
AEB5222FF50DA97E74B2CDEBF725FBCA7015A188891C8A376B9DD8A642C4B184
B1BBF3F376A6D6E31EF1C8354DDF8039CB20FAABCB34D4749B3C8C8D6972CEB1
06B8A5AAE3AE40A91F1F2B1155681A9CC933F87528C99A2B0268B43A3E829E7F
3BD863CB52950773BD9B0731DC4992541D7DE7A055CA65DDD2317F1705C20D1F
93291BCC254CBABA425C032B3B15050D41DA14FFE1B3D684EEA428095A01E931
98D4F849B239AD9D79F4502F0271AFFB0C297F2F347BFB9C137782646F648F77
0076B85F5A929FCDEA2703333F6918B8F125627F8B505C688E30F258DED1AECF
2C86EDCD88C29249A8081731737195FAB7ADBB54743BD66511194DEE2516959B
A20701E2D97342248297425491F6C9471EC9A98E630D734DAC19721F0B324432
C8D7A0B751453F89F7008BA37BC48E0831EE3ECBD8A0A292D63CFC890B28F695
9E29AC3B4DDB78A6883B9272CE34A012A82ADEC0B6B641E3940A438A098CCFBF
C50544B94FACFD9D7AE09AD0632015F81D2F77FC6D80A42EC11D67D8A91C376C
13C8E3444CDFDE4D2A1ED021410F4D6A4E97804AE949BD913094D23108C9D384
56F11025E2D24939114B6BCF579A0315C52F3CA1BCC2860FC1A0B9FB8A37AE2F
C20C0FD44D215FC2AF737FD0339B070D54E664021240071C665DE4170DFA182D
4E385685FB41A2D85888B1149E9A766CB4F309B4E2BAA28CF1F8CC1618694531
974C61927852E3D987DC8FE2904DFC7462FA98D86B27E6192C5CFA79AF1BF7E4
31E90DEB617ED5B7DA30AA1B750AD0340DE910BDF4F844DCEF584652EDF1C79B
CBFAA9A695DB48626D01013F6E77503E5B9F029FE0B019C7207B0558CBEFB9CF
4B1A53439CC169CE2C70B197770BCE78D444F6EDF9840A8B741F645F5AEA9D49
E3F8A19E93F3B6ED6ABF5FBA7CFC21560FCFF3F25B87B75D65CDB23CB54D3C26
66ABBD1FC66C0FAD7DFCB05E178555E2314470BD7E64EC738BF61AB70AD1C661
5B51881FB83E438FA711592ED5E788AACACF1B28C8C2396D5C8CE61D98B0DF3B
430C8120A5EAEE73D6E82CE7F46C03DDBEED7FD8F430A540F2FCDA575E926B66
322279567FA1FF6AB9EAC01FFAFF2326B40E27E034DC75E7E797B53DEB549EC8
822EFBD2780E3A78CC0F9EEFFF109D3B8A2E27BEDF4FD8DC2FDFA7CAC25FCA4B
7E3D4B21F6896D964A688848DED6E8EC6A58365D7A62C2FDBD0B7FB6D86C3DA1
539967C49407FF5E0D54358CA6C8C48F723817824D9C66FE5891B484C4F3ECCE
8A8CDF069387E4FF48B03984A9B36906B7EE0A734C90647664B563B821FE22B2
AA7037F55F05E547ADB16F56669A201DA41AB841209BF77FCCB5ABDC05E978BF
AE410EAD0B667E61F0F1C54F38D882DDE8DEE28A07A9E0A42143E0FD4299A1AF
04E3C3F00E776079A79D9BFE19964559842EEE059687FE5220B6547F10E5C09F
9E499346B2E0D667B35592E73C61A2DC1F13CD09369054DC56953F4E2DB2163F
7CADBC404D407A616D6C0517DBAFCB566FE28CFF48B79840BCB88B39475A7E1C
68155445826E9E570D265DE6182B00FBB0A75AC7D17C3CF29FD2226E97F0D816
D95BDA0BD99EC4932E1CB09843818D588D679137AE1DFA9E9F19C49B461DA073
DC1BE4AB4FC3484E54DC9B6C7B76973D37010A4C8990B3D25F7F3D20BE507F7E
56122CF46DFFFDB6FDF9361520D2E1343E16C08B047148E29DC5E5EFF4711229
E2CC5BD0CE85FBD3D0CBFD6FA67EA64C069AFB7F7ADD9AFFD76D70EECBD73D1E
1B9865CD2424EAEBC0CF1861AFE3978CE9ABE0DB8F96B4203CF8B129997FC08E
3A1ACB0EFB065D71A8F9BC511CAB6DABDC2EC9F4D778E7384A27AE6A8DD935FB
42EEF66886F80532618647E6A6669428F89D6B87969B4128A52251DB3EBDFA8F
59FFCA5E7FC82E22654E37946F0C146B9D507EE79DC7A715CF4D65DB27CA7BB9
536B90A66DA0A76FE2087A021FF5FC228782D0F0CD0B7217D83F2FAAA790B57B
BD7321283D1CC48232284A8BE86436AAA3C6526E6DB6C905057A9D4AC1C9DE35
2F12B86CAF7307A0BE22081F24AC95E032C7C1461479D489B8F6CEABBD6962F9
D2DA9E68A45788966DBE3F4C2EC9888B56E96241D345CBE471FFB51134E6FF73
120542EA25681E01597C9A8068828C292F19747CEC01D9B10A106F17B39A5A1A
FBA562AA931538E83705D3D364B37D0664664C6FF0AEDEFB0648B44E547F476A
D6E7850D0E405AE6523DC0CBB3604025F3608619F0A669DCAC8A04695C7C992E
8920BFEE188E9A5F8178D528E7E6BA5DEF6EF5B452A9C57BE4F3C797DF577C4F
A8DF7125193E2ABFC8962C8120501BCD80329D8AE47B8A922B0D8AAB4E42DE1B
24F8D9CC3A6A9E43A0310316F78211ADAA1AA9954C8C41A5E5BF815D1915037B
194077E47659BD7E30F41CE95B7E39699B92FA8FEB6436F2AAD0271077708372
3CA019EB02233D61F76028294FCFA010ADBA06F53A700D3180769277F5D48783
26B6ACB123477906B1BB46626685E8BBF183265327078D87FD6B36EEDF1DA499
81E89D8A8FFCAE76174518C3C26F3DEF5ED468E6CDB430A0AD5A6B452AFF1132
8F282F51F29DC3710926499E305F4A869B3682CDD012BB53D2395A6CF3773AF9
C7102FA9828E503D2F5719F62D0AFB3388FF6CE97D28399E0813CD6D6B06A1C1
EA390810190D03F33D0F47083EF2B902266807765C02CEA81357BE0FAB99AC43
246F5FD1F9CA26B91952571B891F4208BF322354D7D798D152C681AB2A407E34
B66353F33E64BCA0E217397DCFCBAD85673A1F9E8146BFC2640274A5E621C4C1
4580C41964D20EECE94C99D3054384724518CA938CE269841C42B4988F48BEE0
8EDEC618A6BD6E4674ADE0FCFB1E1F43E822EE2721E984E4FFF861E848907417
C33F871D66D40597E4F20CAD0CC21D2C3A11820D341A6621A2C89D464D9F271C
2AF9133ECE53E795BC8E4FEBB379F0A21B75F34987BA586C6FF368ABDC475898
4C311625373FF73925D862525CA5E696419DD4A7218F726809BA1644C7BFCB66
7D8A6123F3B3A1C84E0F312BDB6B1F9B82DB524A8D57FE5C30096F4172959B12
A70DC985FF76BB327CF2F2FE3BBCA3201A5E839E11A2D878FB2541B561AEC1AF
B3BD19017BF75E761FD642F61A533698803DFB2A20226E582EFF3AD62719A4CC
3B27215BDF4252C36F8F82234A46B51F8CDB39DD517431692EE1FA1132ED0087
D8EF5E30FD80AB1E09D56A9947DC9406DE7410672590BD7BAD0511BF745478EB
EEEAE799E3F0391DC6E5BA2C45BA3902B718729F949BE7E93EAA719F088815A4
72A1F81ECB08AB8017A8F66007194CF1DBA3AF7ACA56EC47B8086E763C18E054
CF5003E49F0BF70AD604FBC9604694996FDE8E0A89BC3C94DD1D7687C6A800CF
A6708EA9EE5106D1D13A9452ED5E4B0DB26B259EAA7E45E28F19D07D349707F4
EB9BE91885E1184C2837691CA4E856783857077CCD79A9DE2B73A934084B0429
E8D86F9E5718DFB99CA7E44B6E7CD7116B4CC3063E0057C62045CB40FD9F4991
434DD53D74FBB32CA8ABAF862447B426AE4194F920986C6C0F372B541F2DA435
8CA71734E3D310DDDE27DCA40C2F8897628A1C50C88941D925046AA7C0A0A298
C7E44F3529B3FE49BFE27C867895C40EC4F8E41850F178B69A281F5B5A093C94
5A219F788DF07EEEE87EAC1654E256891ABBAB7980B1B1B4711FB26D09C83B08
7E1DCFDD2E70DC54A2A26B1D78582A33F532481524A5067C247389C2097D945A
59E80C9D8E65ED246B3281A88DE732A77F78B569AB4974491575923B0468FD4F
84E839D7DC60D2C51C9AF2AC7EDA341A5207C2F7CB2D827B4E00257D80F5E2A9
018F4C5AF9E42BA0CFA3304B4D32C7CE21C55A733B3F6E2FF93AAFF227B7B80A
F0C0822CC7B7C5C72272036088C3A20BC438B507BA741FE9031458F3BB612DDF
2F27B4CB4423FD2C0C1AF33E151F90B78C210ED9972B0A84BD44A23F67673A8D
D913D95425DE9DA289BB60135C7008BFCA3278033CB4D57F611A4A2D5AF05EA2
04890050D67D0855706386524CC1B5698E2BCD66980B5A79412E2CA7C4729281
9CFC5FEECAF31DC72E407853D199758976B4902769B2552D1044242653BEA660
FC30E365DEF866E567D2F6DBB7F66F6FFF785E6A5C18C7AD06637F4A12394F6B
51C3A86A9361A5CABEA4F2074BEDBE197AE7E0BAFFC0DB5DAD5C6C911C660720
BFCD7C31327E5E62694AF1F030CF8494E3EC930B382663283EE4E9D3EAC896C9
E50A85C1E620574519E6223753B16449C566CF1D783EC7B15B4330A37FC9C1BF
23CE45E79F91ED5F64E18887CD987999B6ED8D82D9CFF3776B14756ACEEC1757
543978CCBCF4B126FCD8BBFDA4B1A53175510DDF5F456F6AAC08C96301F6E31E
F557FDFA2A838E9B86F3AEE66E29D6854264845ED9EC42B0CD3037B06DD77539
7C844678989C902067EC814CC4AED62608D532F4F5933A228601B780BA2B6C5C
54087F6433BAB933303A7D07625363424D4E83D3930C0BA1F7DE287FA97D0495
E28CB8E2FE2A4CC0B9DE515011AD63473B11FC9A0751C98632D7F9F02DE71547
6B50A1F83427E472BE232C0EDE2097309D26995F5AA74AAB92BB7183E58236D4
894640CB702929176F7C82E33985E69F7D5EEC33C8C31D3AAEB4C3CBB2262562
241DA95C481AE0B817A8EE18BF9DF17C4EC137703EFD2B7967C707EB3C44EC87
7FC9440AA4FFA1AB0196CF0B21F0851081A26969E75BF021B6E180B1D5DFEDAA
D93A07401045A4588F9913004B79C031634F63CD5071D346C29EBB74505808AE
35CB8763834B514946D5D8244F809EED4F0C08108FD2BEB7157E93DF6BE0D0C4
5D99CCFD5438B1EF41CE9D547E0BFD0B88366F92ADD983D0CFB72FAE9382D0F6
F1B09890D2A6500DDB4E6016981F50352C7B94A779A0613A77A4545C4CA322DA
C4DE6B212EF8377C23A7526E92D5BBBE4F7EF58A32480F1771770B46B4FD9185
BD17E8FB993DB70221B16731EE262D684627A3E2C15509A26E297A394A2A3C02
FC526C3668958AA2348E1D304FF10028C9CC18DDF1AC53BB638F514DCFEF9CA6
8452DC18488862757F11A7FD7917C7A11E26DA7E2B40EF51085D0B8A3E5CAFD6
A50DA3F744ABDE1A58DAB2DDE9CB3527BC03FDC6A76C1DE6EDF85C1A02A5AA99
7108541BF72AAA53ADD7540C5B783211E80BC84FF128C0614E3D796E60989B9D
EA90FECF3C7E34D141778D233E6C078C574916452575C7B3F7D7BFDE0535CBEB
57B88696B62F9A8127A1F17438D2720ED84570264C5098160CC644902847637F
BD2E1DA05A4A7538759C107D0A7754C4C2765F9AE268781B701F63A17DF48F66
F15D2B2A9D775CC4C147812436D1EC34DAE7D9896A86C3D268ABC0CC5F7AA0E5
6AB1EB2D89B563921F0AEF1ADB81267035D2CC6843EF481B1B3A92D09C0D5657
BD90897BE143A3074E6C51AC3CCB3B6F49A5B2955FA3ED81F506337B1528859F
883036496651EC85B178C0B25BCA1039401B0D8ACDA773C0F05F1E77F480A084
59D6E0427577C3235210D2C5577B8BA4CD640C1E1AFD2F6CA12861921A938DE2
770F643C7BDA1CCAD9A6B2ACA0ECDEBA83F11AB852A7E427EB79697D983E71F6
B38D77FAA9D4E471126EB644181B1097273D8F09BCF8C117954E6F12F80A9724
5F09C10403410B4C7EE0994129423B7C406F9CFF662DEAB68BA13D1CE9930F86
6536B1FA3CA123BAFFAC1A14D476D7B1B3301F4004130672B5E23AE4C8300A55
8606F7AB41B429CB3E016350C2CD7576038A9DB8ACC9EC07DE2AC992F180F1A7
2AFABB8C77A0D89A8FB9475634C477BB520C9F57D8C91EAD58E49EB9CDD123D6
9367D7F04A53B4E23BB4AF737E3B26AB9B825F4A5617BC30BC413D0BF9619AC9
18ED9E69C281D96BF1EC79405C070309426682095538D9009AA3C82AE44C3A37
692FD68D46F7488DE0CE6B71F1EB62D107B23F46E89B0DDC70334FF6D7B4E5C2
1A9ED331072F1FD86A5EE84AB5231D094249AD3D628EBEFAFB671386521D5697
D8A876D4F59C13476CC3492D4E097CE378578EED3501D0698C4783FD80CE8853
15057F8754EEBCD8D36A1CC3B6884035E15760990827013973EF7B13B200D7F9
8BD8375F0C12ECDC8D5DA75DF975F697B35C7BD14DFFBAB02C2D8A3DA002709D
0BF305736012888C22C0FDCA8678B5FB7A9D371C6FF110C2E7A7998A5FF0C914
9F2808950E826E5BEC87678026968855B882264E3E3A8111C79E4F079F55DB81
1F949E035579277A24C639AD06CDE0AF980643F77521994A531023214515AE9B
BB5100882F10AE5ADE0322DDBAF4B4C093D65DAAA633F548C6E1B5BCA050C6EA
49A4FD06B504D8C6807C21A4F13058457F4011D42D5ADE705FBADDEEE76CB8FC
6E5C9B2E55D57FC85CD2C5610A024FFED264A951EE4766CD4901A7225F24DD56
BB7AC20394673D9DA92451DECFEE0BEA449EB6F02F5C8B173CC7BBC567781BDC
08C375D2F16C9C57624A170770FC0025F441802EA754A438B0EC022A01741B95
6EF2D479AD556F5BFC4B3D88D25B70DC658B70DDACC6511940F468D896D0064A
D482E641D9FCAE9EE8DE9410D1740ABDDB0955D5C34DC92B42886AA915D0DBF5
FE1AB572126BB4ECC0B582D7C575B5B74AA42649375B491D3CF2146470A99335
3E6F4CF76074CCB54E6E34700471C54B091899D560C9AF74625687F9997E76CC
941EE50698C63E2E1B0848390D2020B15BADD05846A360C90D7DE9A448AFD733
96CCD84FB2F2E4473157EEDDEAF0E4BE111731C8A64FC088FC0163A76DC245F7
B83950DF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY9
%!PS-AdobeFont-1.0: CMSY9 003.002
%%Title: CMSY9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMSY9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMSY9 known{/CMSY9 findfont dup/UniqueID known{dup
/UniqueID get 5096650 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMSY9 def
/FontBBox {-29 -958 1146 777 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMSY9.) readonly def
/FullName (CMSY9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 10 /circlemultiply put
dup 14 /openbullet put
dup 15 /bullet put
dup 33 /arrowright put
dup 50 /element put
dup 56 /universal put
dup 57 /existential put
dup 62 /latticetop put
dup 63 /perpendicular put
dup 84 /T put
dup 102 /braceleft put
dup 103 /braceright put
dup 106 /bar put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
028B698EF742BC8C19F979E35B8E99CADDDDC89CC6C59733F2A24BC3AF36AD86
1319147A4A219ECB92D0D9F6228B51A97C29547000FCC8A580F0834F28818EBF
F29D3B2C7C9AFD969BA6D3B7429E222AF78F6DE00CE2C8008A5966422936DC5A
DE549B458EB41026E123FE75E703E046F665B7DC78298A145548DEF8D579E008
39279A5208EAF898A357DF3FD9CE4450811F20B454D86B2947BEBB11EABFC62B
187B12458E022CDBAA6EDF4A89D79300F635D8CD973E35FA8D9B1240B3D30D72
4F30444BDF0B51ABA15A181A3196A6CDF9CD1D38D64C83E745A767446641991E
23EAE067609DC2E84B44D923CC98407812813D5AEF0EA21E560B31BD77D735BD
E35EAA564A570DD3294C703E16BB9F251D54407269C8B23DEAD063018D6EB748
4204A415AAC8384025FA922E7074FA7B8A6C31FD3761E7B2737D4D9C9992B7B6
DBD0CFDBD87D42E1A451FC5C7EFAAEC65D10D278470DDF42DFABC836CF15D042
6900E0DCDD36E7153BA186B8358E74F91A1D43D62EB0B821C0E97FE63F1586D0
98F01E8F6B6F2A435343A25CDD80D3AEB42DC8E5AE02F8837B84EE5EB508B02B
6980D2349984FE1A0D3ED12355D556BA483CA078B7921FB336EDAFC22AE05C1C
5614F5025B890009272DA8C838B81913C872A54F7E932237FB1BC2CE5D64CD04
2D320C8E2E610E9EE36EAC7C28C833F8A14048E751B61D0CEB342CBAAB34D104
311B421B8CE4D903D2E2518BA8B734E2637E2CA55426C4A87EEBCE637F8D71F1
54626C52083262A5A9A3B49142948BC1AC0B7698811AE81FC3D3B1C14E6C274E
CFD6C480514F3649D7725A0A14C82C9D537B1C5A9ADC816340B8B4E484AF55AA
905EA936A83FE2BE788D084469008F407447E0077417096333F163CE94CD3098
4B9712EE23120829AE2695EA63975492DB2615214B11C87ED0ADB776ED4BA0B1
40D09D1A617D4F57EE1A9B05C8D5F42AECB9C6AE67757DE6307B1A9C467123DA
773239976AB0EA052B23F263031ACABEC9EEC7A43ACD0DC2D7AD66664FB0D937
6A0F463A173E8B90B2596DD323D2350435D9D31B638112D70492F44769FC0C6B
40A291FE78AA598CAFC19E5AD195BE7264F0EC29305D36C7AB8F2A733797D75D
94C8F7AAFC49C13C108F514745A394F460294C6F3F44162BBFA878F773A5115F
062E934253B786DA2B9A6E8E843E06B97075BE99F21B330D6684998C5C340B72
09D69B655097354CB682D42120ABF5109E5522ABEC94D05E7211DACE8737A1A9
0BD3EC16F48798E67C7C85560D79366504BBFE5F7F5EC1B05B9F68F98149A02E
E53F321C213456D802C01871E9024F965258F71215F40EA71057C15E349F06A3
A016BF1B7E44DC4766FC92EE500EBF7C47D36B1EA34981EE6FE38FF4903466A8
C9020B91CFC731642003AAEB145EC0F13D6281B0838BB4236C220F6F467F7DCB
C79BB9CD5B6A180DD2ED7F94DA6B5CB833E62E898BE832DF601BFBC8148F9430
C8AC459F23EA2536E301C9DFD3FFBAF4D01E7853B60A69B5D012DCC0054C0BA2
1293D3B4EEDF7C5C78118138544A60FB1A500F72BA39E63EF5D97D68369850E6
9B6336DA577128DE68FEB71877360D97204B5F3C06E808BF95AA6D6013524BCC
85CBA9FD2CFEF383645E7E960E7AD471A6A3B8B8C3A0A0B8464836499309D82F
52004FCDB68997BAD9E4B5B881634FE1213283B6B19308BB67F2364F7ECD5534
467EF07CBE71989FFCBC6224417C0710EB3EF2676B9DE846E7FFB1AA6608EC9A
76C31724A19ABB2AD08CC102F5DE8E4E513F90A53F06D440A66B000CCAF6AD12
6F4B161B56FA5FAED65A24FA183B84F4B45407AA69624068EE0E3E47BBE973CA
C72137823F1D676131C8CD5070092CD73FC2A93E0480310E21CFB14C031206AB
411694AFE7B639ACF35C28705A115E98BC69C66F6C58E9E79902453798D76267
29B780AFB6B895B34CBEA51530E8300569EE4D500527BA294282FED81F730A46
6ED19AA5AD45852739882216EE937FC45D75116BBDBA6FF4B4423B398E383CCD
A7D705B8BA85076133E823300C3EFC9EB9399575F5F6BBF868265304B299AD77
B6B4EEA04C83E163E8CE2BFACA65F9DAAE3AD2B0F8DA1F986E6A12DDB2AFACD2
217E37B093F46FF3E20E587A9490401C2833F5844763FE2C528E151214E8CA95
018E1D8D47C9EB5FB4F0EA2A6D064680DEFD2C5489298F83B58EA7FA8CB019E0
671028C59C3E007DD86CD247889ECFA6AD6DA2433B02180DCE6ECF9E495D0976
D063A61B007233DED5E3F351D790F26D4011582735A69F37E7CCBB0AF254B925
B378522B748BD9BF152E2187DEA12BB168C42AD8D67D18567393B35DB2AD8403
5A7093EB59FC276525B8796FE81944F7F03349BB077110E182A61754ADECECD8
A5255DBADB523F3DC251A7D97F17DC76281CC632FAEB382A972D60A15FDDA57E
2F42AA338D889B47F6A3C1FADAFA8D11D63EF8D0C8C0FCE61FBD8AD34EB8DB3B
722BD86CE5B1268F704ACE82A39466DC2D96C9849B9422567FA5E728B17FAF61
59A77E9B3289DB807DF54D076139E3DFE176C3131FA4540C1542AE5AD6200FCD
B92D5DAA77DD4D3022049B6EA2A037FE96E0CEBB1608C663F1373246FA74D70A
BAE7BD37F3AC23E003204FA8270B4514DE1FDC5401B69CBC98A67A5CAB5505F2
87C242B6ECC86E88EEF44B9C79DA5F88CFADAE8B4CF437A7CBD5E0C01A9BC479
E92EA48C808820C567E74D62ED7597FCEC53DE9A0B3EBB9A3FB50AEACAB82BF9
2AA56D029357AAE016582592972ED01C0ADE565E87607F17BCF4983E3321F606
ED664B9516D404B277C2C1B0F873D469D64A9744D9C1897125FD471E71BE060B
A3A617DC8D812E184664BD83EC74EEB5197611380F2D859E1A61A14404493D04
B5537C04541E557CB5039905F37E72B762EBD2321633E12C38C409338AD5AAD3
1A507BB2B8F5235F0614D0CEC2BE44CAD504C9B2CD3E45437A493A33B9BF8A1C
3FE66B1E673449A54E8E3C3470688E94EE4404C888583F7C96B43A592D586D25
8AC1F206EE5FBF3AFF7EDF9BA91EEC6BABD573D455E0AD6802E7E23A662D4F12
FDDA00EA054CD331DF86C099C4BE8AB4EAF5D8EC1BFEFCF50302BE61E6FF26D8
1E88C544570E8D6F7D875466C70AA91D6CCD4DF4BBA34FC67191D1692D3FB76A
66F114152956A5E38345E7495BEB1A389B7D0A59624ABA784F77C1BF7728E556
F9D97D71858D61624C22C6914A3A995BD75922A2C37EF2CA91F923A4561CD3D5
2DCEACD9C3A65A9FAFFFA4822E79D6D89D6366DA6362DB16FF061840582DA35D
E4EE8308040C2DA5F298944EED470D6E4E1FF58DFDDA96C20C85E2DF2652E12B
2EFB8F890D301E8CE777678FA786E552A62A60DFC369AF4BDC069F5457FC86F5
1FB1A38A2222EEE86FE1AC9A8227663AE33217C1F381115CCD04D2F381A27E97
36D356DC64615AD63E1952B37AD4F967317D76A6DEF039CE8446AA634086BFB7
7B0B34F595B61ACEB346F51ED10ADDB7B852B5B2BCFE416D0435A7CAA4C9D9A6
152D9AD938F39E9756AC752F1604D884992BAD768C720C45479F5AD8E53A4832
1B44D6109DE4460A662DA6081465E2BE02ACBEB52259E046767DA24E1416FF44
D5AA1D303CC4249510D703CC6CD0FD7DDB078A91089FD86ACE1721F875F019B9
82D7C5B2530567F2306F47DE90EADDCD12AA1C693B1982827DC36A74C86474B7
0A8A2E084CA403AF654E2F8488806B943E38ABF544ECD45FECDC441DD970B180
FF3FFF1A50D5E22216B240A527F95DA1E43770A3867F225DD2A8AF01A965E06E
A063997C4CDC0B16B52F9B9C8B0DBA94F88F26A7A01E596DCF8F33DA3DA5B02D
2ACF771F25A1372F521A80B93DB0337886FCAC0A2E8FAE0D7E1E0C31EB43AE3D
B4C2020F322A9857A9EADFA7782CA70DE7421B9A83DE1873EED8D096701370B7
7EC33B9C104E9CC16DF8C80ED24D1F91677E355DF037621ABBB75E09ACDBEB82
30F1AFB82FAEC4D9E2DA93303F72C1078679EDDA35ABF2AB38DFF091AEB273CC
5A7B29C0164977160CA75F62BC20474C7C1F127AE7E4DE865FBCEF852698AB80
B61340CAB6F86017FEF570104E46B6FB3320E78D387CC58DF1C4FAD8570C0126
B6F54AB5BCD47904A9255366AC9C88576456D3CF605822269CC65979EC3CC740
AE3D09257BA3AC7A364A7F5EECA3E658AA20B53423553C416D98FD8100D80A30
A1B19F029B7473070D7C60CDE51BBEEFD2B45B1C82F4FE32A5BB6BB5BC32BBB8
F600ABE893B83B806A5435AE2B40E5CEA9068C6ABBCE73C9B3533520439F28F5
E171DB1DD90B2EC04A1F36767B2B97D4EC0FBF217D4E80ADA5383BADCD7E066F
5F4B23738A14F19AC7D765119AAC9AB6CD0A8AD4EAF8955CB9F5BDB0156CACFF
236D24E8A12AEBA549FAA9D7053D10AB7094B5D9B86FC7375E245EA8D7FC64B9
859A1A37C006E0449AA8DB8B89730348C71C7E014A2EF8D871AAA856407C33C9
392720173DA60850938D0537564455C3957631AC8F8C0B3B29BF6163828796E6
0944C3000B990715188203B32BC4E3FCDF173A4A9C78753AB7D76BB9A4C2DA4E
3EC638753D6FF6356EBB07D0A9E8D3F50EA5451FB6C836B9E5EBB8F1331C8CA0
B0CD271AF316502CBE87F652B5ACCD43176AAA32C6530C69E77E3C85DA496F3C
06980ACA739DECB5D986622AD81F204579218660EA791774C2D11878DE23F858
BBC4ABC7EBA01B7FEBB32BC914FEA8E5720731FD43F8A5CC53954D13455827EE
9C7BADAE8322E77EE7413D6C86E6D378FF8044F50F529E765A1CAC29E8B1D91E
CD40F70F2D4890E0FD04502933212D5AB176DB143831958605C1667B8841E770
CB4D513DF0C3182C23CA653A7A714B2A8DE29D6B203F5A9481E0CF3FF073FC6F
476B0B205136DA43650A940035A970584DD7D06B7CDA8E960186158B75FE3917
9B1D0FFE45EE1606C875DF635B80F5A9E5B67A6ED748F52A53A710A45AC20BCF
FC96755E685A3B0712D5E09D860986C61C631A8D2A505C57D57C1D4AE78C552C
DC5C9EE15B82A4C3020331B78FDEFDE53974C391F375E8118EB7B2D23DFA3F15
389043EB6F33842C82B896073760197B13D3DAC172D77779DF517AE31BAC43BF
5BD6F75B59AAA59C7EB81B776FADB720282DC06BBC9C33AF5AC0BC59F6A0044E
3898A4B5868EF32BC4F980DD863E8EDF6DE3E753A7B3E39F8E8BCB3D3BF14EDE
3395E73BD07440FCE88FB28A96878E823C1E5519650F2054EC2CF733EB8AEB0D
510E5659A3179C3FA8E31EED621BE0EA648D76C370C3CBD8043BE206F28699D7
5871DA483AA5D3580CD55902C85DB9EF5CF5D3191738FE64DB42410F5AB8ACFC
CE07E524BECA5633B082F4793002A4A7215AD1BA31159A30D72AC60EDD0B2BAF
73C9934C85C5372B47BCD3ECEE463CADC05CE8352EC1399ABE2465AA53E5965E
79400336B1F5D1401EE2DA5807F9701D1086DE505F6AD4E64DD4F3E5E90CD64D
FDD25E6FA03B679597CFB8C5C1F03641CEB7B9B40787E70BC6B063621382E3D5
1287365426E44A2EA208C26155CDF782F404CA7B3C6D379103EF4A51CA3F1343
22B04A0B55CE5A7633175838B9E50480E9B80446CD3B541362E7A10BB3C58A42
88C0FF580B4A0296073F5B6505E4FCCA5D4BA2F7E8D59BB04EC9ED4E664BC2BB
8754777594DB26DA0985663D321CCD13FB261BE8A771470DDDA783493E452A87
D0AD01AFF8EDCB7BB159F1408FBCC52F126C46234CE6BEF241B49472102598D6
91FF2DCBA2CD0E6658A61DB3591EA02E4DF202954B655C5A3C34B14CB60CF9C9
2A6683AB282DFD79B33FF3A6AA524582F174F11A5568159083496B242ACD2770
0ACE8473D363AC11250E5DCDCD3CB2281B71FCEB8AAC1367D0714796AF3BF01E
80BD4B05A0A45E6CFA6C672850B9DF113F5EB15923ED885A0E4488D4914B62A2
FAFB6A63F8AF0CF0DA498E1BA68C4150B6E59CBA80BD17026FA09920006D2075
BC6F1010D0A10648A20D8ABF8137BFCD6A5DB3606F6B3CA51E8A4645D32E5966
6DFF7537F65DA4268A86BCA5791C21F5FA9F4C2F1F6C1AFC4D4BADFA63609C4F
5F5158608E6FFD9C5BF00646C3AAB983DDA5E37A9C2EA81796B161A06201FB6F
8EACE87008EE7A008BFBA69AAC04D73A8C0447FADA0249D8861ED405537E23E7
BE68C4349FD64A14E3A53D6C6484E704BE4AD5FA0269F56D3B752A070D9872FD
A5CEE543B413F13CC4CFABCE885BA4533EA0969FDADC14DE6846B330552CFD60
A75BC8C9DDA76102E48DB6B81975A1F3FBE182CEF410841CC6164AFA0CE51FD6
8E8E6F0971277052E21126909B5EE51508306B886E945C11DFFE1C91BD0D79E4
554CC7D6A774C9B98610A1E49C3326D62F157CA9D89B56699F32DBB9D49C716D
CBDEC052133F8E18E8F3D7A59008398AF3E4E1192CFFE4D0B7D2ECC8DE2ABC1D
4DF7F2EA5EC0DD756CB2FF9F95FF10E506463D3037BABD221C08506FA603DE1C
DC45A5998921C4023E501DBA494C1F41C0955A761AC3D5B13A88EC4F0BF40756
BAE8645EA76027B8AF74726521DC129B9AED4BAE67A511EA56EE9D0D8D30C7F6
FA8BB890375A263A0BC4E9CBBBB8F8F8613A43B10E964F8CBD6BAA2B0BAA70C4
4CFAF6EBF4882B610AE13689823D37B046FD26DA85BD96B896CBDAB6662573D0
2CB87D45A86A016146513441BF7A748F1E9C2AC7172460EA628BFB22F9797905
F6DF6749F13C7F234A2CE4829D41E0F53EF3C5F52165297AAC4B5AF4747A9F53
60370B4C0110DBB42C25308F489A856B6664371FC2126BAF4710790021255653
CACDE1B9ED6AF5C696C3D8BEA4698DD9045B3004A5C4C03EA994A5445C9D4EB9
865266850047E28F2D82A08617E9283FE637CFAE4F7F261CC2D616A8C746EF23
7360553A6B434201944C04B1522533C61F615A20BA3678AF8D4BAD1FB548D82C
72D41699FB96EF40ABBABDEE633F05B4445BFC4E6E661DCBC8EC473BD2BBAF7F
75F7FC86CC7B1F3A2343EDEDF6B5F7E98A0BC4443E21611F4D807FE7F597A37A
A4DAF8A8E6D04FEFB320E0E25C61E156A72A3E4A69EDA04B0E3B72B69FC19E63
AA33A682663A8F37F4FFC1533CCA2A80DAA675DD723A7E13D9DAE3BB0F5F3E07
99BAB9B9BCFB29B73FC76EFA02F4F632690651DAAEC2B3688B636F0FCB156047
F8EF7239716BE5D3DB2FD1DAEEC11DC2D65CFBEDC1C950CA737A04FCCCA509C4
7E47664E160322366F70CCC641B9B49192AB839E0AC609AB2FDD3783095293C3
11C56740FB50D23AE9FEAF66DB13F35367B562F15161AA270EE44713881B2387
7889FD10198AD4D750390811714DAE7A8DC6F5770224E93408F8CCD4F8712A9B
3C583C983D98CCA7FF9DDDEF8AFA292781B1D7089336CA631413EA0728353E8B
3650EDED7ABB6E5DB5B85014A3A9C4C76EBB664A5B3E0F3CB2ECFBB6294F5C4F
69EA3AC8C071B122B129A28E04FE989DA9670EB6246806A516517DDBC52DC001
4C027D51EF1F98506F21E63D57FEF267B913F1ED4770D892239222F3A9035C35
FFA38D1AF3ED9A8C02235D7422695D30A2F801389DADF34CDC489EEB38089B6B
026D884EE1C24FE5785C383B988FFFEB5459A1644CA44D353503AE117E87F956
393DEF6C47D4E1C5B1A33835C9B8E1B98809DFEE43C4D6DBEF1C2B1ADE4B8F13
3B5D224C25927433D5738B0FE019CB88B1F373E4AC2BDB5BD86887FCFC55D330
CAA6B2F58179CE94608E69240E41CBC436C8E761E295B857FC933CEA15A3839F
B798BD3C1E18BEC7A4719B3E1F75C42A86C70CC864EB4A582875F3F1EBB30B5D
DD611D834213CCAAC483B43B62EE620C1C56CC7E9CF8704FFCAFB05975961FDD
A498D72C313AEE1EFF147266263871ADCDD2D2CD922A19655959CA79B74895C8
8B7182B78039D2C3956923C9DD71A04C7A9CF032A8B76B159EF695080C2C3A54
59F52DF5237EE2205F873B86412505B6FCA5AB5BC8937AD9FF4898D9706384F6
1FEF1A5C7C895EA1EDA6A750662B898F653E32D7FD04FC210E9E3DD63FFC7224
0DA9803D5B3417C6DB2B16BD60334A7E7F91209F6FE5A66C101B12C662E8608B
2C6ED0FAB737E69A5BF653B8F64D85BEF620D38D020557C28B1AC4FF788C6552
E068AF3163963AB2B9B929DF48D3AB4AE19E06E7F54EF46A3EADBEBC03D045F7
1719521E5B4B1B3B5DECA6B2B342DE2556D4ED0CBCA83265402235917AED9E23
1CC5688E8EC4DC9F774615F60EA95A74CA35DABFF5C9BCECE1335E65F120AB4C
9BCF4B5AE93C086058929DFF3DDE5B456E29B1F79186D11EF3FC36BAFDA7D39E
7D34C5FC4B66B6E8EA0821DDD83C4B86E2221B1BD566D9BD9C9082862EFC3546
BD984120A857EFEF6F9EC6ECB3024070CAD0710EC373EA74FC4827EAA3CCC18E
18949AE5C0518E74F7EA0D39A72C688E331C3AAD05B57DC42F96326005FBF405
EDE3B21E3EF8E5102146F36270A08DAFB86BFFBEC396D3CB9047AD108A4FAE22
305F8ED053627D05BB81A8AA861A0B7898AA6ABF1D2CA0A5E7AF10A8C651941B
51556D2C1C23467AD68FCA6CA8C5B900959103CC85C85D95821EAAD25206C3BE
5542526C856ED15BCF2FBA48D19C73D630DE8D025EE410E8DE18A17FAAD1A75A
1981DC4E7B833B4F9CA8BECCE599D3C9FDC268EDA8589305D1AAB54C18176965
8BAA94B5CC8224501D9980FE6FBA55A217BD7A0F49DBCAEA24B1445CB600FEE9
81F54404272CED79F2358A708B9243D410126601CDE32F59274D73853A73B9A0
48E0653D003F4AF77A0259872C53087C957969984680C2A5819E6AB2A8319D5D
2DC41F5B65616F560BEE83146E76824F783C5E6A507F240BD20CC4A5DD5D711F
0C9957A3019FB559903D4FDE147861FD1B86D374579241A4BCF2B467AE5FBF54
429D4DCC30D3F034F6E3E915A25251F61CEA9D58F4C79B7D7372DF2BA4793030
1D8F06B47C9A1A1DBD41DB89C4CA4B1FCEE8D9B51C618BBF9F84DBCEA4C6A187
3F344FF9BF4C211F807DC2D44DDFFCCBD0BBE33F50E1EA37B553CA72BD95F84C
DABEC5DEE15399864ADBD8102D59086660B305338728F94B37309D461FEFD476
7B354B6AF9310AC2DF0B3FB246FE28DC6373FC7AF22EEB4A9B2342F4891D9508
D9091CED25FE3B89DBC1B3C20D441996D671C50287EEDE2F2A708C03359D5E03
8F38CB712DF2F717DB7175062FD58AFC844157D41DC817D87BEB6B749EDE8676
033A9CFC728B0387236CA17F2524F44C7501C3B6E7A31DE91A4EE5E971FCAD71
F7856CE6DEAACF7B694E936C2E8C7D47884145DB5FED113009715D24A0D8F1E0
F84AF9BD9D71DC3427F41BD3DAC15F4A0929D0F8DE5FD8C8FEA7419EA47AFB93
9E7D54B5DFE70AE85A589383EAB884ABC7D3CE3CB3C1DCB3E406B46510AC3EE1
F8381517ABC5F87D02535A6F61783BBB01D8F91C9BA7A97D583E22F56BABB0D3
0078E320F20C1525E9A455F0C5AC11A8D4DDA428CE0F967AF08B27EF159ADD6A
C8E3B0FC438B0BE59DD9C26FA726F691915D4B8B78B2FBA6F00A28E8581EE799
7D2E22B2175B33B6DC3B04B75B52545D659E64A09BACAC2D337EF2C76121661F
9E7FE8D898FB8280347152688BE260937AD2DF28DCE004E452EDAA8C6679D40D
42E7118AA138B59EECB77C7ADAC285CC2E535995CA6B45D0B51CA4B656CBB794
FEB2E883B140C9EFA88F7B41A47E853F2FDFB7260088871ABC826CEB8ED2CDE8
6452A8941C470E36CC4D92F5D05D2255384249A64A53B271D6B57F53D5531E3C
4B72181461AE0DDA1F1859465AF8BD6BC33752780C6D09F8CACB26C8A1614F6F
A9EB843CF46D8CE2166072E59B0BF48360302918C48206AEEE9EF37042468784
C64A9CBD132B618D4DA25CA6E6EA4EA5FE513FE32FB30A183BEBE8292BF9D21E
54E8CED0A11B086D48F5BE7669081AA25357E356AF117776A861C8092BF501AA
24FD47C1C15037BE69A29A2F0BD3D496ECFD6D06B9A5AF1794572D259A56F5BB
544B7F5E17BCEFDD420C9FF6BF22B15F62C667DEA0295F385FC901BCFD2153C0
C0C988E8C83136D9F4480C4C32CE391A320E2743A769ACCBD881D1AE1ADDE92F
FF21E40B6C76E4B5F41CA82F186EBC7D957A3E4074F78EB23738C4DC9535B41A
C8FA35BD30F65D0477830C25B9DFC7DFBA3635C2CFB64B5BBBD8DA3C1F5B114A
A5091313F7F14A6795AE5B92593C479EDB1BA45A290170783D350421D64CCC04
440688CA1F4BAB0DAC0C00C65135BAAA46A20D35AD7FD5A97196C34F635ECFC8
7D77D0954594F6F3299F0BC9E84A41B0CDF5F384F0F86D1365E0CCCAD55C7859
1A46E792C629208792C69FA016377631760FCE137A5A52887E3A2CE1F1CB1F7D
63AAA4396F6A78798737B36DBA199FB0C1AA62D394FCADC9A36FB6075014ED64
F7CCDEF5AE84CC7B00E9AF2F5F5D5B75FF6D3502F6DC9476D5FEF5B82CB106AE
B148C068545D91BEAF8A9483EDCC8DF290318E5B0FB16199672B8D2F017F1588
324D9E12D44D1CB1D0E8D781107F2CD4BA3C2FF0F83CC53AD63CC65C77AFCF8A
1B11F7FBF0EAF70F9FF04504A7F5DA4E970A9B42B17D24E6802F70E1AF9FE1A2
A7697C313E5B78864AB557B3315105A89BEC5BA6D5F5A7AE3F0FE42DBFBB206B
A77B02F29CCE2E15824A738C551E0A24E65901F0B9E803B279A9DB6998BBDA6B
7ABF09F357E9DD53FA6AD8849D4E565A4DD5
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMMI9
%!PS-AdobeFont-1.0: CMMI9 003.002
%%Title: CMMI9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI9 known{/CMMI9 findfont dup/UniqueID known{dup
/UniqueID get 5087384 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI9 def
/FontBBox {-29 -250 1075 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI9.) readonly def
/FullName (CMMI9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 14 /delta put
dup 58 /period put
dup 59 /comma put
dup 65 /A put
dup 66 /B put
dup 75 /K put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 97 /a put
dup 112 /p put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBD07FC5A8862A8DB
7E2B90C16137614CDAFB584A32E50C0935109679E31306B8BDD29F1756946A67
7A7C2D9BA6FAB9B20A424AA0E6F4BA64C2801C2FB5A1156CBEED0ACB95F697B8
BC2A6E6AA7EB1F9FD8E3C9B1A16697EE1F0E7400421A7765AB218FC837A49365
82DC6B2C877A7DA84A81E6126EE96DB25C17A207D3020A045DCDAA064360DFFC
E3CD50E21ED239D2A6450D04F879A26443ADEB6A20ACC504989876476C7D1A74
91564FEA1F4CC2C8C8FDF666DB537F315AE1886C73CB5B00E67E7B398A6C018E
540EAEE98BB8136C4F044EDD63C33431D2CF9740F051DF365A4045D9D8782112
7BB5D494D9235BA98CF2F30CB119F5A904C32AD04C960C43FC1F5FD8DA7D90D8
93AFB59F3FF4F796481AE2A7548F948FECFC6C127C4D3F159B08F206AE8C296D
EE470DB2F879EA79475E029D22D7A8535C09A18689DB0609CC233E5199C02756
972CC9C94D9FCE264DEE5D75C8D651E4E2D1189AD9588CB815722BB5EE3C379A
6F31C2E6AE1AE4CCEB29766190AFA20EA937114978752189F1A9F42B39483149
796FCFA123BA9CCD1D9BE28289660BCAE16C40B5B504058D55CFCBFB4F4E3D94
DDBF39F157E63946534DA81C018B1C01B9F10DDB55E0A5C2B3985ED1977C039B
D6755EA42CD09E27751E159C30B93F376DBE61CD3AED34BA36A768F232EB3B80
E3E6B77C4A48D408217818E398B83D995AB6BC871F20991DF57313D6EB0C793D
0F28088EBDB7F38DAF7E01AAB3476EC24D7BB38A9889A7D3038D930FF4289B83
F54A7BE1E2D98A3822098D2E4D067A0D400C20C0B2B4BBD74C13ED1B827490F9
ECF48F8C3994C1C5AAC9CF783BFA4F307528F51EAB55F961808A42ED53F00C97
72A432EAEDCFCFB622389BDA707B6ACC9433B065CF29EBFE93AD14B8ECD5F47F
F073F11822C49B8BE924CDFA6348C3A75E9BB9BF3F31C41716B34794B28CDAC9
4DB8B087E180A9B3B17680F73D9C12C8D86A922C948093629F5D7F542ED882A1
692F4F6696865E53E3E2DD43B2D5E8C989CFAA5CA5C4C5999045E170BDE9921C
BACD6F2863F5553EAB2BA2D4A9034729EC0C4201DE90DA89B0A27C5A5C974109
4E37BFB3F46B3A506169FB0C68E1CAFC844419A8D261A1FD86A3BB78E33D5FB1
CFC687A5975987CE45155E5FDFAF0CC5FD5568CB1C26212F92E88255F0549F59
41B33125946DE43436BEC00804063FBF03EC796E3361B1C852EC3038D107F80A
9198968265D5488B26D7670B22C2D75EDFFD1B7B4AAFA36DFD94640C9D0E2D20
5BCA18683EFB91834A3939AB8EB60E2F09655BE003582634C52770DA9668C292
2E02929D812EE2B0CC65F020064AD5BDAC5F5693B30508F40ED8E20E87149BD5
8DD41AFF83FD1944804017DC5A04512E593549FFFAE501131CE2FDB65EFD0B8B
33809CBAEE411B3941C241550B9C30DD28088708F1C0CC3125CBEDCD985EAD28
03313741F67DB5744A87B381147D5BA70AE1145C27F794854628D87D6C1ECCA1
749E3465B950175D3C3F40E344297BD92D3190041A4392033A79BEAEAABB8DBE
CC14E39612F43721CFAE6F79074429221CA588AA2501DE520A464DE157A03AFE
3C082FAE7628FC0C57FFC61D0330AE6332D20FDBB09BF36848FE05E782D6379F
64F9C82C45402481B0A35989027F9756BF5A79DA2D96E10F39167ADB4305578F
90B509B6891338FA1D67DCFD61804AA6621526B2EE4769589A2646581712AC05
DA6E98D16494F07D612743058F54FEE516BD89A8EC3E03F9D7F905175D3412C8
F7329077FD6EB25213F3CAC94BA0C3363B759401B6EF7548C7D709F3241D030D
4EB46A1AE81863C412BDDAEA6084C37143A4C5E41BC646315B1CD09F934186CF
49D1D8239E363A435307030BD79536B50B723A39DD763DB539F24A10DDA12BD4
E467339D2D6DB177D6FC539FA77D2DE4118EBAC161E928749F7C753ADEF86117
58619F1155C563DF2E11ACA8347908B98113AED58FCD0394150EEC94B7F986EE
88BF7171D208D8F1774B1DD478F0C2958AE372D257E7EDF0F6B5D6059CC4D5D3
B00FCBD2E9CBE79235B9A5A3E943CC27AABB58728C95C7DBD4F4A1F8A4DA99AE
7377B0CC0BFBD454794398AE0D5F7281771FFE87B25A819F36E692286A42D776
01794A43CA9BB30FB8FFDAAF014F909A369E34C2F6C75B7D4EB9DB0580E33F46
19654443AFF8384B95600B86FF8E41FEFD032355626D60C7507C058EF832DF41
194B48A36F11082D1DCF4723E21401E0C7447AABFAB4639B26E3D2730E348F55
53EBFF39CDD03E06E2FA5FB379603C879EDB7E1A10F89695C9C47DEEE52BE0A3
F446F187AB9D7E93E6F9387F21129034F36DF40605D28FD526AF82CA9D232BE4
412567F06B38ECCD496EF40A7B243E46C9FEBA4F1BF4B1ECA029C5EC239353D6
C0B100BF7E7DB33BD1277DE104F15AA19F37340A777741AD1AD693BC76DA48CC
C6F83CD84591ECFEE375979972B0FAC4C10B625E4BFB261B9FFFA83C31DA0108
4FFB6377466E9739E0EB64424BD9FC7239C7DD834EC6788A0F97FE714AF92831
E1BA36A8A9E24739F1DC82DC26CC3CE28C210AA7C569B19E1784D663A0CA4E81
AFF43E86D6F5F63778847700072CEB77A4EB946DC1F23DBC00BCE773203F76DF
00F0B085F31420672974DDC642D885E95BA6BBE43E1CA8ABF464D9881CDECC7A
E98E31B9754C9B72A8BD5CF6D4D214DBC3BA7A0CDF6635953F5AC1E7639C4A91
C7AECE4C75CA3389C348F656FC2CC96C84C85A926237B6504DB51937C9CFCDAC
B75C31ED570D180757884E27757783DB2D5F35ECC48C496CDA342D49AA947BF8
2FDAD2F19DFE8CD1C76A8FA08F33681F3E12E229D7DAB45BE3A3F258B5ED4980
F15340CF20D965252843E026803E8AEE736EC41CCA82167401977AB719AA2F50
0B791EEAA82027B3C712D2EB9D14BF8F94FBDE2227609BCAC41EC08DE2BAC023
28352F913F7DF08D4E1C66E83F764578B22B4EB7191E852B91ADCCB1BCFDB1F4
E63DFD152E86FA9DE9BC8908130EFDE29CC4401339C05B5B9764CF8EFF14951A
C6C13AF979546996BF22F2B96D3D585B90CD27DADEC78914DA48432C6ACBDD42
20EF583FD41F2F6D6D10C3DF7DD077304B5940BB0462656E306CBD91EB9B756B
7014B1884A36201EC582FC9345C386043DD2818FC301EF78791C1D7854F8FACE
5DE9801DE9F59D5B4271E003AB897B2EF49501589D681D59CFFD9B03F722EEF4
74ABD29997515DA3591496B62666744EA76DCA45504F8075C0652D6779DBEAE4
90430C2945FBD60AD53B51DDBEFC7ED703C418B4B244C8FFA5A3C1B7600C5A55
3EBDB93C16AC191C3A28EB2279BD3F0D67C826BC6A73D3C0AD02262368AB4621
98A1605F2887BC5880E1AF2780330E0FD01D7CAACBB0F008A42C427F38236066
54799594E515B289044BAC4DADF8B3686B4372C5110201221FDA923F131E07E7
93C44BAD406838BA4D1C277EF74098B8C0EDC41EEDD58C195D7DFF5FEDBF96FC
19CEBC6C3006DD2CBF76916B4298BB915663C2F61AFD7747E03A03BD7280197A
9DA590E3D081C6F53DBF94E8D6FDDDD910A70AB18A0F6D48A590FFAB314D6CFD
E3FB20C1F3C91063F00726A2C13A3D48323F9854839405E5A29D66A43E6E2B84
A8B3765F1D817071D4D6FF42BC785C2D11AB2B9452F141696CE19C6AFB9777DB
107D6E22D8CC6C26440BC48248AD8805C4329D46BF433741CB519B21663392DA
5DC7FC9BF37E5BC396BFADD7263D09F6B4D69594AB386B7BDFCF3BACB97A0E08
22013E716E642592A20136CF9CFD61D4E515D80E06A4CB4FC9D9B916C93CEA95
B83B98C48CF36C1D02291D4F5C0419338D64E33C90C90EDD2BA3B96D70FAFE0D
403A060CFF448D3E28A9B1E3916018465E86095BAAB4706CF7ED350D7C554789
D7F4FE5F180767DE8739259E68CF142040BE1E2E8C6152DE3417C1FAEA7584B6
20781DC4A9796431EE713DAC4E713C839D7A4FDC8AB6BFEFFE767AFD8B67FDA6
943AD387E5D3BCB09039ADB64ECC2BE2620C6EC269E708DD06C311F450099E33
AF46AEC644222E7DC4DBB9371EE12CFBC4F9B27AB46AD1DA96CE006E1DF8291F
A550A93026CBFFC1087B134EC6EA76F5E109CDA58FF47338A0039A786A575F70
B8A03A4F9C8D07A4C856C77D9BCC8E3EAA740172D0C2D0A15BA35C9E5717D7FA
2691774DDE730BB9D7C70D7AE103DB8D35F3728470C76EBA0E670634E1A0BA84
2FA102BAD7271DF2680D86A4CA6FC353869987700E5E3FD778165456033D624F
E9B3E80EBF431ACC934AA0357E824B8AD73E222B510DE8445C55C07C8E5DE46D
E478F832BDDECAF2EBB11941DCF84CCD887043FAED9AA90D12BC8CA9A0C8D94F
8D3BF1F80B14B6CAE6BB1C6AA405AA64BB94D5A82CFEA548BA070796A02F9642
87326D066101435AB9EB40BA9EA9E61B363F5F5E3B924369796E8B78DE3414A4
2B79C6A13ECB2F34E6299658D07D2B3DEF3D4383CE009A927F0EF5C196652842
D96B857AB5E905201E7E8BA21A5EBED1FC6863BA9A1A6E5390407F75055E2EEC
512FBDB3E82CEA13663F1A1944DA072C765D8CED06AB461470C5723BDC1271D4
4D1D049D3EB131743F1EC9A6ADDAA038ACA2C41D139DC6A84EC3C61AC7F1E559
6155CC2F49171F6E07CF56D721D9728E87FC7DCBCAC46455A3694C765FE807E9
9CBC2D304AF37E0F28CCB22F239541B53A4D24D09C662559267467EA487BD33A
0BEFD4899B581D20582930703A868655C31BE935364CA6A95FBCB22CB714C040
9718824DFE97929D0482430726CCB5A5307957DD2432A9B6271E849148DEB76B
FAA290FF6D0B18DC5B76407852E81C105EC6CFAB0F620C6DC9DA555A33C167B1
430A8BC338BFC7D75B7099CC906AD923FA107C74D3FBB719D77A4E5A685FF9D8
56424EE4AA074434B809D894ED50F6A60A035C5223EA25DD8983B9B34210DABE
718D7B2BEB293FF1B63CFB1CBDAFC69552963D90F5E3FF533A3FDBB626E9FAA3
F3C119E5E01C7BFF832A033C3515BF049E29558B1DAD652F2888E339E67D15AE
95F9BD14E3253DFE9072B24C0E7E85025B71096AF51C86AECB2921126A43156B
EC812B32B1164BD9B2B947D503C015616DBF2024F5C8CB3236C1DCA653D661FE
6B1C19A22D272A176B7F1B7F9E67AF40DB0EFD4940E58B2A050249CA4E55CAF7
6ACFD84FB46FEF952D18552B3972D79D808B4C263B8C7E1BB647A2D03E102867
630D5C3F2C917F765A4F6FB8106BA6A9D0093E27A4CB6049C2371287D94B5111
6E7020776EBD744C6C920464BBBC0AC206033E8240017F8CCB112596ECD7CAFA
89950CF43FD87ACA750C03A778A37FBCE9C82C2F5ABB135BB02DA8E8C0D24475
3BEA9D79372D0022FF1ABD378C151417DBC69FE5C9CA38D23A3900E34BF924A2
90777ACDC37930B67DD44A2E76DDBD9B89598D5F626BFD325A978D277265DA47
38CFAF16E7FF1946E15F41CA73F7B4B02E5AE8FC4C37B115BC567E4EEEFEFC34
EC8974B1465AE57759EDDA28DD38A9210871D35D331AE1BE6097C3EC21C770C9
B25D040B2ECCC3AEB1EA1BF99E0C2C0F192C13BB9152CFCF75332E03F9CEC376
9B8C285A35F53655BE38713E09AE34BA2DA9C06FA42A6FD2D00CBF2AFD2BADB9
1571629C65DA38A431710CF5B01FCA68E8B8569922FBC3F9B64A5509B6F677AF
1B97E91FFFEB6308AB68AC58F9BA43DB5E764021E75B56170EB44C2C0A7DB86C
62B8982256D3621EBE3DB3994DBF5C5A14CF34B4AF3BD5697F8E3203085DE9D5
84B0598169760B925463E93DC87CE70AF4C2DF0F4287D2F2069847BCCF7A37A2
AD451D5ACE4DBCCB2E14D5DF38B226952E7446BF87BEC736EF3D5AE793304618
D66D3299AB9F9CA1D13F134FAEDF36750046E27706C7CBD8E0877BB6276E5196
BC2A355D109C0253644918E1CC11B717DE6FBDA201E769812752888CD66268F6
4ACF4A9449378F9F9923D584BA1B51F33663BE7A306887BC14A37E3C5A4654E6
531D6EB63DE3946BD8BA95CFB037991174F36D61D842071E6625605CAA350A24
FE551025D10871FE0E2599A63900C8520EF4911C53A03897C8BEE152451708E2
43FCF4E700C583A5E8DBCC03BF9CAB864DBD19E1760945DEA0EC0BA38BEA8256
D3A8D4F70F6685A99C6BD2BA8B412A26C002D76138CFCC7DF6802931E5D97BA6
0151F6A4C572235B4196B22B7B2D14B32886DF0D2CA8A277ABAAC53B63F64CE4
E4C088192AAB674497E8AF81961359C389B51F4A257373D907C615030BFBEF53
DBD99058FD06E352450B658478C10454AC8FC0232B70D5CB916981978053E358
99D322A07294748BA427FFD1E45C909171017B52B7C742FD77A8560852D819DD
8DD53211A14D7B2FD11E42941722FD3985D627FDAF87EB57326A0D290B5077D1
8A4230BEB40523A8565F95E0D44F036A571DB698EDD9D94FEC9512369E5E5E73
A3CA5C142617944F4F99C0697ED088ACAC007FCE06E5A6EDE7D0E03A3399DCE5
362271BC31533866BA79FD1FB3F608B22CCD4111FFB1BA35D920A23AD157C6B3
C3DAE11069D5E46DEDA7158C6478D8B8C0D9DC237CDF0CC6633911673C43FB79
E4F9B7F27495201E5ADE66255BC2CBE9D9F237DECB62A19D62CB41A1C92432D2
07F0629E913A71B3F1AAF8B8C5AC66D3C8605A48F8913E39C859E163DB1DBC8F
0ACFEE80A40B6172032E95A76B752B873FB4DF23CF3A655AF1A1B88C8DC156C6
190DE72973950565454C0A188A33395FD3D529A88F2B578356DE8EBBC12F04C4
5B899F667D9E6F3A4EC6DD8DE71FD4C2E2B6D56823EE4E0526679D71FF1B868D
F261489F06F97B010CCBE640E2F57BA3DC3332B329F7958394BA9777D833AB50
005E8E9232547104065ACE33396772B0E0BD66D2C6CC54DEDD071E444D8C95F8
6F88B31E20FDB80F77C83151B7E25BD3736B4F9BDC52EE78C41E9475E5A6D94C
D348AB42F5E36B4F167D29EBDFBD43B03F77EB296B06A36880FF17D412E77EA9
F2E7C25FD05E16BEC6732681EA21AC3FF6893B93FC09316A370CDDB86D9E6087
F6042C3F9ECD742778389170F5F041329782FB9F9702F7533E51F355F71825AE
2BF4F8FE50D413AC9A20C41B42537FDBE8DDC5A5C793D3760C1EE13716068752
F0AF10812250BEDFB4D7133FD58F4587BACD572505C84A7D3802D27443175FE0
0D89C3398B55176D8642AFBAB5CBCDFD6220C8488564B4306D74A58CD2921AAD
73CF803C754DAC2F30A5324886E273064FA51781D5BC596BFEDDCE3982EA1AA2
62CA7BAA1B16C6EBB99B2AAC4E6C9CEFB3D10F19987045C4918DB239E6E63D79
5F44B9D097118D081153AFF96E5EB39CBFBB99A3BE30909F614869031358EB98
F07A97EA78AE50375941B2474DB46AF3305F2B208D45921F93743A6CB8AC584F
6BEBE25ECAADD5A789EF60C9F54446687E7B030DA3E5243189F02BA46BFD28B7
DC14822E136AC7E40CE20458DDBF356488045C95907363864CD6943643BF0109
EE027A3091C11EA392EA91320EBFEA3B857370AD8EB86D73F035A476F7058222
E8CDE78CA1AA9EA69A8AA6EBFF3E67324C567B914134DE042D6F8F18A9373107
536E8D90189917D343F5299024239E2EC1D2D177D82E97F8A614D2BBB0E55396
D3BAA9869A0C70147753E076B7B3627AC4BF0EC971310C9E947E11D1311B45DE
5BF7E34E78760F8A25C609012CBFC8AEF7E7DF68B41BDCE88DE54162B260CB91
C49ED99825BC8E9C0DE9599E8F9F8AE662449D3B57B509FE3AE55865902C743B
3754A3A2F61C5FEC5DD89072F6A6708A2EE664643888AC42C394A7EEF8762859
353E43AF38D0D4E667A80166DB2416958169754EFD6DAA3294A3B2F2B7AC3291
FC34401F9FC91BD81C0982D875916EC82F2EB30354EE3F932644E9B2C7FDA771
2937EF997572001BA25863D8B075B85D0CDFDAF3801E3D31E7405101F4241357
18A3FF22FB124127F9B64E0D74934080C7E5A9C442A51628331EF6383121B2D9
7E81C232AC4877080B4CCDE948F829A8F50648CA631A2A7DB78DC2AC247E5219
877A6F47ABBC7A58944B8AD634CD22A1BA81AA51A291333E885BA7EC10C250FA
5E40016512648687BB089A73AD95D1DA7A25312EF1C7D29542F6D827B9E51503
AEB7EE9E314E9A28C8DB704D01E8C4742C9F0AC602C5F2352AF5BE564B9FBE53
45CDFDA657B22D74BABD24C07D3B6F8AE0E616DA91E5363B4BA15303068CD1B0
BACA1D0A3B392945DAB37BDF4B5906536188D36CCCE6219D59BEDD75A954AFFD
2007295BC2DC2A31AAA7432D7D3BBAFF895425371233BCE0D2659B42FD47BD94
B969D37AAB487B09331B4EAA405D600D4B247B32B4DA9510410AD7FAE5494C8B
FE6168B74E2261A1B09CDDCC14079C53965F9CC4DB3D8B06F9C5F4A8C53B7E57
F026B2938B89899B729770936094860168A5A3331EBAF18B1E1436CB37C94067
A88029F5531D2AA6EE6E280F465A6B1B412F8B1966907C8CDBD216CF4800FF8D
0267E0D76E73AAEB87811C050E67DFB66FFB8028F52EC80CCD78D85AC4364716
63D289F6CBE2AD63BE34EE3B0E12EEB92A4BDA77A7EE90B111400A4682DF222D
06F2D39E8BD0672D1881F1818ECFFFC6EB2547062C76EB751BC56514227A16DB
7C68A7FA64B53165E8BBCAF912D5C74F148F9B368CAF03D3D7F0A6FE6E79FDEE
B58E34BCAFD0A8C7B84F0C5C00723F2E3B707CC3220DE9C19ED31A8EDA3D31B4
195DFEEE777835247F02B4FE8E19B6B097294A3DC8654BD0ECAE16EBC5302FDB
16061A13A5A5D7A3EFA65733B376D85181B2E679B9D790FE5BE25A451A5BAD53
2BD48F7BF5AC10D4FFE56A86A59F4D98392E51EF311157C435114625298B4C9D
87DD7DC9878E922157BE35491AE27B2CEFD2F02A7089031761BE61E825CAC9C2
2291F8553DE7C44946DE319C384B98C9B9E0B7BE7C1CB82F54920DB1E19B7DAD
5EEBE96F0B2F2B4166042EFE1045C0BBE0CC2CB223ECD3B402C8B350D99218D6
13540F6853947E09E294D85DAF3923DF43428C0E09EE53E5DFD4CFEBE7696776
FDB513A9A948AFC5696856887F3AA09EFE4083B5AC36675973FC3FA756158A36
A206FA36B6122CB8351742A9EAFC14B7020A2D36E903F8EDEBBEDF3E67175FC5
8D47C81609D9926E708062DEB8D442D7504C2259675CA132237EDD9FAEE32DE1
1F4320E3B3C4634F0648DDD3FAA155F02AC844ADBA1DB6CBC69BD1E874E08C5B
E5E85DBB6DBC55AB7F42319D6814327C45CD06D43ECB9B9382C489A10AAEA00A
B3AA3C611AD37F4A4DA5C0279E689424DEC7B0E1C00443930D406A8DB892B933
4280524F123B48D9865DDBD201FBE3B3A1DB33A3EB0000E341F29909E9CAD9E0
F157F6660E096EEC27B593C20416AB2D990C6B32103DCFAEED5B9D2D9B31E7B0
3EE2C56DCAECF62FBA7FD9445AB0C2DE91C450602DF68D0CB54CACA4F91EFA5D
6AA468A63284709013E0451262B9BF0CBD52825F6DEE381F57A5C0CC8AFCA619
C98D39DB71AEBAEAD06F279EC845383C38F4698F39E296A84D1DC9C37BF1C9AF
CE5A9D0A498D99C7BCE3816081AAF905F0B8517777B9CBF0F5C4BD34D25CED61
0B3DF7DFD0D5AF8B9CC8D9E662FB96072639919C81FDA87B257D0FC7389DE715
596CA99CFC3AAD703834F3D3BC11DC105F96C6BB8098EA0388AE7F330244CC4F
D0388B4349ED72903AA1BBE21A5CAEAD2464D8D80F459F672A45E71B7CFAF076
9D613840FDFF36DDCBC6E92069D9990DCD55DB418C1BC7A93C9A6473DEE02C5C
805514F924C06B18820E549A6A81A76FDD2D5D261A7999B651072C7E203DEC5C
41EFB5186CE4C7BDF98E5F177E582D1368B9907F8F4DA8222027F7004D525AD2
135F5B00EC965C8EC509A702BBEEA14525298D9F17CA89296C46862C8280F1B7
2E8F055E43F8A61883BF5129CA91E9CB9ECB3079BE62CEE9945A7F071B976F76
9466562B7DD5618CF29D84638815AB49A979EA8F8A459EFF2667565896220F3A
FDB2DCFB274DF368878A357AECC1EBAF257838256BA160336640B3DB633111C3
8DFD83C02B504054FD43AD632F8D1389923F3C753B7FA9F88A9EA26AC56E2129
C2967172F0619E4D5132030EE3F537A38FFAE2A508DAAA4BBF010413A423CD0F
FEFCBDD1660AE561A4E1785C5DBA75EE59952DE4915F1CD3DB26E2715CF1809B
9DCB2D2AFAC1D03FF5ED881B16A4B99451D50BEFEEA4A8B42DD18BF41584ADF2
F58FEFC82694C136747C6B6D6539F3149C81773D794B127966EACBE7D79A1068
30EA340F6A9AA8E216EF1E78E1EF2FB647BC9C4F32CA2F6BADB8230D9E92BF9A
2F039106BA312AA31A924EE1E2206BA3E6DABB370B00215EC34D0BDA6B73C4A3
E7B21A1EC2FFBF16A9CD2EEA98B7C123398077588E8AEA70545E91737139A7BF
2789E042770A663B022868AD0F7DE8B500AF4A6832EEF8D4B8CED52A410A7A8B
E9AE114F1103317C2804F8144BDBEF1605353FAF350F164D718FED22CF8FEBB8
2CB84DE2A0E753F9A64AFA0747DCE343EB77E515F1B4394A610223150D88C168
C45A394E57A5B03ADC59D8CEE789645AD509C287A7CD9DB5D8611D8EAFD8D4D7
B83FFEAAC4E678727E636043A00C35C9AF6AD26B7BF051FCE58DCE48B0523C1F
A0A441B53EB3DA2A95BFBF259997F5A79238F7DF19F4A473F6CD68059C2A4ED0
8E25C48438ED192CB1F84E5B2A5CA94E00FCDAC5F2148427B9CCE0A6180456C5
44C3C0C32C869E1D543507D51F1079652488A84B07D4CFB29A9F34D7289DE5C6
484AD532E4C269A4CB5AD2B91FC583CB5693680B68AC9A83EDD21E8074C84534
21B6E7F01A2A4F5C85E1C58C86A9F3130926006EC7CEFB2B5FAC56573E8912DC
702A4607D322D08F46FE191D4969C18576ACDABBD3B4636BED420956207644E2
6F480F95DBC8B4C96AE8CE4013B4B4C853547B195262CE08DB6D68C876C4345D
EB075E19545D1B0CBDFE087D89B5677F9F2E51FA1A1D389704626E560FBEE701
BB9153FF44824F42F239D67A5FD70BBCC6F289E87C1B8C1BD0A90F7794363D31
A12394A28E52D3476A4662A03A8718DF268BA86405C5AFD007E7F9478DC2E34B
3EBBB027301908F34F0B7ADA965A20E0CF0BCCA8F388A54199B2B65FA2D497CA
C8BC9924A3667BE07FD33004E774595C7A1225F6D5B0B06EB2602685B2EFE5E0
60BA885B140AB44CE7091F5E0C0A6CCDD69987CB803EDA2C89BB3245473694F8
9260ED88752E5CCF838C28CB55FDB380E9A0748D83A661C0504FB6B3B90B6CFC
106518F4FB42CE5D0AAB28D29B6D1ECA2DC2850C06AD854255C13FE636FA8865
E0DFC322480419D52AACDE347A1718DE8B58E80DA4AE821F95B3A5DF08A4ED02
EE84E5874F6B3B5D2D88780C0535910B907F540EEDF65E37FDBE041D97271CF0
3B2E320D8F39203E62C61A75AD438B3DDE50DA4E3835A1E21CCF2F61570FCAFD
4B76F777FF2085526307E49A62BF7EEC205E7CE99250242E120F826EB1D8C901
0311C6AB23F2D14C65FE87E325A9339E7AB52FC3CE1BBF782C0BC2F5152A71BD
0A916C866BAC0C351A03015901FD3A2C7FE8D3B4B7216F2873A9DCDCF9EA3E30
978C7A64EE44F82E9DE43A83058D90040144438D936F14DCFA3D6F25288E1EFE
A4ABDE7EB7E91F1E4FD33B4D60398EBCA810CDF73C5DDE35E8C440E7B7FCC193
678E6894F2AF904FC3ECD4D8CCE97848A1F0486CD87BB22A9F8C83E4DD486D8B
DBF0465324F197F3887F51B79763A0063FB8FAB16682B08870E0F07705286911
155A12626F0B127B5517F90DF073C9822BEC86645A363BD52FC2B0061F683A42
E6157350E6C5B65B87355CF1A046F32860A3C9F35ACA573959775B1DE4CAD74D
3D54FA3779C811DE617616790BB6EBB25BEB0710AE4805AF8E55FA39B91491D9
FA639ED08835D1B286BE00F3B6D6AB26513E1458EF3E67F0A59CF66D81EF8DD8
5CB8D2CAAB322554103ABAF55DAB4E04E6A6CA996932C027A248A3C7D5DBAF39
164517B65F0478342B65D5AF2BD96D163AC907AEF31F0122F831D1789E39DEC5
70A05F4ED8B4D6ECE1B378438DF32AB32B6FD3801138EAC01EABEB5731726193
BB19AEC49807FC89C4DA56CBCDB22F92FFBD429FC2D75B5E197EC910DAB78E63
7AEB78D8164B322B831D437C52D47EE99D7B66114F85DB410366E40CACA7C8CB
6A26AFEDA3D1EDA5108141F536B1E9BDD4415C2BE456F5262E8F2EC308D82B39
A20FD646CEA5ADFC6AA55A5DD9AA8651C18620DE071193111D6BA6CB572D26D1
36CD8F1D2DFE4D5CC6EE8458FE01C479769317379BDC4FB294EF1EF39ACB8F0B
43617E916B436289A6A70DE4473F1A20DBD29CAC2C1629D2A7BDF4B01C8ECF18
835B7FF2D445258C1BF8573EBC27A2B08E3C82FB4E88B61980E360CD46FDC87E
F1D9B8C0AEFCE362C07C7F328DCAE22375C28C1DFE13FA5DBC2E4CC5BD539E38
50ED661AB854DC6F4E6308A7AE9D1FA0A6B64520D37CC9F33BF07F334113142D
EEF2BA64F375B9159DCA6F04E132B38D6BEB9579EEEC214B48FD4BCF544E9657
E9225F79B41F67069FB42E7379640D4677B815EEFC3772D964625D519998893D
F1370080F68DB9B1811CA0C7AD57109B2C90563043AD65C03C29994C0DB80E2A
3617206DB1F3724AC97E79790CA6EAB2C220AB783068F824A0CF4E9E5D75B5E8
4AD4504AA98F68A63F2EE6D2371108F124735FF72BB7B00B25D01D446D2E7744
7BA7EBB15571CEEC13523C77DA55F724B881A1949735CE9D26055658B6A94C37
6C0267DCBF8305F0A8019141AC9FA54429800FFBB5404E2DB69BA66BA2D92B3F
00C7BA7E3506D45FC93752D920CB392003ACA3BD4C9A2119241996339B0CA088
6B16630ACADEFC820653EB8AABAD63EB21250686AE4438C0C9A7B729B032BD3B
C68F3EBF28A7DED7FC2005280DAC0CECA5B0D147918611B18FA713CE823CE3C6
4CDEB68D1D8B0F466E3BE65C52B1B0520E49ECC4A45074E1504C16055865BA3C
8D46B18F6621E7BB77733897838B503E6FC4962A416E9C9408F36BB05C040FA2
D56C7B53447F0D4F731AA984E6E1C3B5E55C8DC2BACE6BFF7EDEA5730BA30273
C2555B020F09441069616060DE45B7251319484A121ECCFB60AB3600776DBC8A
28B16511F5E30BA34315F81C3F8FB4A0805C287C9BC3A6E5B481C1EE3DA0CBD1
DA280C311CFE948081E0A87BAE0F045C2D18FA9F70C8C025D32DC9A76CD4C0C2
B2F9FBFA28357CF7C6F0B5B2495532C8A6E6F3B700FDDE270EE78842BF268246
BC3FD5DC1003E7D565AC30E90C9E8E792FB3183B3AA848B6BE5E587B15557149
DE3BC23D98EB1E99D29F4B6B919A2A9747240272732FB685B9B53DD70990202A
9335237990F8CF2817E1DDFB30EE7BA6D3FB79A3647447F2F17ABF74229E3416
B0A49131E6408DD0A80E01DA135C1B492721A9023B1D1A110A6EFDEACADF48E2
B674AB95082023FB4BDADC402FFF57AAA16B1D20B65D382C0E54AB7B3CFFD50A
F0329066984911385543DD1176D842DB0E29ABBF7541B4A2AFB3C112EB42EC3A
C76F03F38242268829B00F4B1090B6D7419E193377DEB16D04843251E0BD7B48
67E27E75702C500E184EA0A0E27FE51AEF141B4005EA2326DB513705592261A1
8E5F19437FE6E2251D331B52CA08A6ECD69DA80E235F7A214F79314773E84270
B9A9A6A31B5899465FD0128CE67F7D373C303B5CDC5751CB85B4047622
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: CMR9
%!PS-AdobeFont-1.0: CMR9 003.002
%%Title: CMR9
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMR9.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMR9 known{/CMR9 findfont dup/UniqueID known{dup
/UniqueID get 5000792 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMR9 def
/FontBBox {-39 -250 1036 750 }readonly def
/PaintType 0 def
/FontInfo 9 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMR9.) readonly def
/FullName (CMR9) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 1 /Delta put
dup 33 /exclam put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 61 /equal put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 71 /G put
dup 72 /H put
dup 75 /K put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3DD325E55798292D7BD972BD75FA
0E079529AF9C82DF72F64195C9C210DCE34528F540DA1FFD7BEBB9B40787BA93
51BBFB7CFC5F9152D1E5BB0AD8D016C6CFA4EB41B3C51D091C2D5440E67CFD71
7C56816B03B901BF4A25A07175380E50A213F877C44778B3C5AADBCC86D6E551
E6AF364B0BFCAAD22D8D558C5C81A7D425A1629DD5182206742D1D082A12F078
0FD4F5F6D3129FCFFF1F4A912B0A7DEC8D33A57B5AE0328EF9D57ADDAC543273
C01924195A181D03F5054A93B71E5065F8D92FE23794D2DB9AF72336CC4AD340
15A449513D5F74BFB9A68ABC471020464E3E6E33008238B123DEDE18557D712E
ED5223722892A4DAC477120B8C9F3FE3FD334EACD3E8AABDC3C967C61FF003B4
B10C56D6A490CE9594D57A2D431B9E5E10FE3D8832E227A7087611431ABCD029
85F4865E17E17F8CFBD2CADC97E0A8820E3ACEC873F31464466A9545E967E53C
DBDDB8478E69063FBB891566BAF88B7660A4405B16834761F041CCF7650AF955
F9E853AA9F5F4382E1FE7D0C5BB4023818A2383F91249D48CE021250EC9EEB1D
2835E18FB73026250B32A8849067D5E2258797C917F998F2D4121D96560C5FB5
B5D3471216639A8671B6DFAC5E3554EC36D9A72518525A795590C74DD70DA3A7
78BFC43E51D6F2BA52F17D4DD00D389D3983EC54912AFF73684A8A7E345537B7
E62361C04A47859DA084BC72EA53512DC54132EB2EE671793603015652EAFDE3
41C4B6B679BD60AEC5153EA0D2200CB1D097DAD770F5F31E6FC475A225995277
B867B731D5401E2D02B85BA85158C80FF7E2BBCC42B98AC867E67D25DB656072
55A0D32AB7AA483A5A9686CEA4E2B3031D90D84DB3E2DEE7706C91BA81CB8DAA
700E5F61E07D6998C9552C81B66FD10A10033D49EF3BCB0FF22ED0A3737523C9
8F851C61C4BF8A213BF6EC70C956AE48B5BD276CC0437C72BF6515B10739919A
F00F6ADD2798CB211668842349171A5AEB0664D2C44397E55A4A9EBDF54A3EF4
FBBCDAD9DAEF4B0CAEF7112FA828F2F8D9F633D37E5516AB5ECEA87342EF8DC4
3A50548490F5BC9A8A1F98AC7AEAD9D913BFA10CA86D73AEB5BACC1FEEFDCC15
B3655522CCA2C772E902FAB2A6FC153597D52763EB44AB7489FF061F7F58E8F2
AEAAF4D17F36CBFC00D3C653F335D14240C87DB4339DA9D30A5BD1F502BC9013
461B9DB2FBEEC01BB18990439A0E9CA6576BC9CF6B1A3DB9386C4A5D4AA6A5DC
CFA45FB75F22E10ECB72565DB441A194902C91427B4F676E531C661F7A2C3C85
CD534D1C89B6779B2EDC8E44667B992C20C70B663BFBF680A6CF4383EB7CA26C
4D1F06B5EF4025BBE65795F1EDB5CCB97050872D6C07BC2974F905ACDB7A765F
291365D6C8152153E7F017A25FB4476C60FD9EAF9A121633DBEAC32F62850223
D6418566AB350F90F4B35F19598478F76B63E347D4C61E203D4DB8ECB9889181
C387F4B663A502C638761D2782BB96EAC81A0108D7BD6938F67FEBB69218D115
D8E89CFABCE15C6ACC7FEB983332A51A6A73CF4E341574F366713D7FB29956D9
9BF238A87483D37E526A2EA2F101EDD34E34CB92730DCA7235AA0027189BE405
2DAB4AA021A30C28B26C50808E1E965C02F6212EC7C72F5683339425A7739380
A422E6191ED8453AF0CAAA424AE44DFA7CC5C2F6EAA8D73A5101D8E9517DBCFB
2858D0E8ECB7DC430EF23A9E4428CB7DED8D035D6050251AC101A2D0E884721E
2F21E573F948048BB8FF888911C508CC198BD750083B339500C426AFCD5634A6
AAAC1C7E91249667B231BBFC64B4317192FE07FE9DA0DDB5E517D097AAE46577
9555F29D45C67CDE9812CAD03F220B20519F2FF32DCA56A554D4296FE2D1F3FB
B209B5270E0E695EA5A0EF1144957CE045881AEB8D05D72CE57F4D34617AED67
0D3AF0472CD8D60933651626550366E300E72A9C89ACD475C2E2ED9BD44B472D
9DAFE943F8E02A6DC38E447EED964624C37C3130E48211CA279BB6A0BD59466B
42F3D89B5746F29E084E22CF58395AF0F29E55113F3A3F2F52CB3A6DF3D026D0
C81754B8E2E4A15F6943BE9D0087D5166060734FD07C4C57D7C7D90E8C9C1F35
623CEEE3ABAE75E1A18A1E3B50B7266BD2D8E812CFEB4A46B856885B185640D6
B9C22179551002B94282F57FB433B7FF157D2F0D240836B72AF4A331668AE5D4
E6B85415F4E8B9D2F9AF90FAFAA0A3866DF417CA5A31348CF9B41B8F5F4D2F97
CCF7ADE851B5E2E2F6E319AAF5792EBB9DA2C6AA8B73D889F3CDAA42932CDA7D
07A7E59183CD89520DDFC36E5D513BFD8AD0886046585F29B4D7F42CC0C27AA7
53915AB1167D292FE91957E94A57FEE2D49C20C9070ECD736BDEE0F046E60350
EA539DC298156A4E0D019E7D481FDDA6861E20678516AB80ABEC1F09B126BCB9
52E8272A06BB6DD87ACFC423B4A4FC9A3DC8DCAEBB807C5F748F1FF8B17B8B88
F426206BF1B7B7D239D26BC3CF0776C467A98CFBBCA5FB6145D5900137ED19DC
D002F10704AA680EC753C22E29AAB15712EF22AF73D80820A1EEE953463D4EA3
81FAF99518D4FD0F862A324FC44C4B9542A92C5B60CC983CC8F647CE5BDB4D6D
B92B380E0E5F7208A9CD91FA9A469548162C761C1BA05AC9D60B766764D821B6
B4E17F56CE455F06EA1EE2D38FE47581746C4C5FBA63AEE2B58E877D1A8FA83A
31C972D53B64E92EEEA147426A92CFBF76FC614119C6E9C6476FD6A069C803BF
E949FBE50B5AB1F1463F9747E8D353F7BBD991C4F90F920BC9407D8E24720293
846D052214E60390C3CB926D38C83AF697425D80C2B4FC4706615B905516B733
46ACA325CEA68FB21B2D17CF0B68BA4DF249368625CF83441EDBF2B86C957C1E
44CD722BD2537CE84FBA07EC7AE15C840041B9F7F3040072E6084CD55B301C08
A64A53BD4D3DC30DCAC6C152F316ABC59B8EE978793EBD568849DCC2A75A495A
BC83470D503F8E389F54B4A4A31624E83C601B43AC1E52CB811FAA7CA6B644A5
1AE0BFD4FC774C9C9DFC2769ABFA9C83F900BE2DD4010416053A1D4874E6ECF4
D86E44B4CAB15D53E5630C144B0C15B58DAAD785BA298B1893D1B09BA5D40344
6678FD2D17FF6674433C976D6DAC659175CED26139967C9B2B9CFFD78FC2570A
E5142141C2888DBF2DC8503F9137CE7CB21A1EBC2D65BF33FCEFBC85C9CB736E
24E8595CE934AB032CC70BD6A3B0F3BDBFBBE185512FDB7BE3D4A6620478453E
75D044BF770B44C9741E31985E6DAF5A318D7BED12B02A4BCFE60D25EF12843D
EFC9BAE2A3F2EFAD66D7858E83EB46BB09D2FF8AE9C43844A7001C86ED97AF51
C511E3A89A1BE349FF5215D1A57843EF51456B9838133846F19BE79AAA5C1AB0
5F400E5E8E7B0BF96EFCA3B8F0894BE589F2C9FB6C97BD16D38F0A237CD4F034
099C41F85C7E2C7BEC8E02C4F327306A53B4B48B26A8926670CEEF96F6DF2281
7C2DAD99EF8B81BBB777227C2475AE7400DC393D9C0445E925DB1E955950F7AE
53E9AC4306794239346A419F7B5DF4168382EF5956B81F83BD4BB7635B3BCC84
7D84D05AEDC02D14675D777CD19B08124001A4F4EA96990D96000C082A12F00F
7FEF793A7FA69D56D3A38D012168C5458B667190AFE80E02C816CAFF0A71953C
D80B085CD286027E2FDBB05452AA762FD7C813B2E19A79C74190E04E746C4933
CE1E300CAF5DD53B08110509BDA404EF07FA1BC5224BF1205DE8E0C3276A13DD
866675103B960C5F36644F96B4FAC16F5D6E91F74629B318FCCC8E8CB13EB76B
B0B7B90718D913A52A04732EA3667674994A325A7973C601A7DDD50F658E0826
ACB8E53D4914B0274AED98D7BC3B2B7F9D48A7ECC2F8ABEE05CF2C4F2B90360B
B7DF779EAF3E103D1D83EDBE32DDA873768D8C37DC10A5354A94B4153049AD64
FF3E0BB51AB91D7C0B4134D8731CD0270DAAF19BED9EAD800A14B65B68EEE89B
40DD624111670DDC7C030DEFE0D1B96420E249332445C155BA96231C88E70643
D526BDF3CA1E05FEE72CE2B881CFC01ED780C10E89F0828AD55FE29043BC56E8
2750A6DD15AADD54492F6092618F4CC6A31766B17FC60766D18C307EFC9BB787
39047DAD6B38419EFBA46B4E2C932F97451FE78AD75FA90DE409FC6DD46585D2
1941F5ED47A8FBAEF5A917A240959E8D9F9917DEA3247D9CAE6BF7A88DB4C4A4
F9F5A6DCE542420A032FF3392FE0F3357B51F884D6181583A554F75B1DF192E9
253CC828FF06B0D992D5316435980B044BB191508C7C45CD90F797F88856424B
14A5707459C50EDCF3E3D8D1667AAA83015405354CE744C66D9A5728F29E0085
6DBF740717FA0799E3BCC4ED7841588B496A5E549B953A7FD288B4A045DB611E
E3B2F35963FF18ACCB1C968BEEA2CBF52B3999AAF89A05320BB2E97F52CFE06B
9F10E3A79865A3059A957F97972D80ADF678A36E2B586C101FC6AFA4D137C13E
EE7102C9B8EF78CB057F8B7476F146E8FF5C897FD5503DD198128CFF7B5FB339
FAD0AF0EA967F77B07B367A4AC9F668F8BED99B98E87FAC750EE045602D76C3F
289FC9D97694C96AAC0AD1BD3FA94DF2CBCEA24B40F47B9B59E54EECEE7AC4C3
A3F5D19160E4C1EA830D57FBE10D8D46AC5CA0260F22FAA45236F0F542BEA9C5
5A88F878F68B36114E0573900C65E305462B22A3429A17C7A567694414DDDA46
5F30542B8FD4F00F6C295B2E8D3A986B953D96822DB2ECD48E8BB1763434E652
152EF3717F5E7FA10FF0B01D9F64E22C5DBD7254629658887BACEC0ABDE972EE
67299FB84A05B3EFE22B6976DB4CCA384232DDAE38C31623A4E39EA2E82C1EA3
BBB68F1A7DBF405DEC37CB7203A895C36A44BD2D63F45B3888AF91D37B510A59
3C921BB44DA620892AD87B665F69F6FA510B071ECC403CB2BE2F54B3969C9E88
713244BC97C1466DA8216DA7600C221E7E7EF5C789D2E12B36422023A03E11BF
2790FD6062FE6BF62F5010A92F0A104B76E255A0975E04F6F20F760881BDA7F5
D834D1D328B6EC19AA7D5E5678A84C74C82553DBE8BB5765E84F5A8789032143
6020940B4B8D45FC3433D356E28C25F42D0C19F911213D85951B2B00D01B77BB
A4C72E964F9D95422BEDE582A05CD52E03D28A996E6CC8FCD910CBAB728073F9
F9FAEED5470FFA55930447C5BA816F826F983D53EC9941EC8364B3060FD74C95
26D4F5CA753B574FD2FA4D1D333785241D8741B79E628BC852FDC35478C5ED9A
C1BE88C5EE7302816E65C12B58EA16FEDD4672EB3E24B6EDAD5DCE263BA8A970
350B651E5A9F3C281D85BC3F44EADD0D93402E36489BA5185E7D388974B0B700
70575188BB610CCA20F081E2CBDA13DCC6F72567962ADB342E02C1E763B673C5
F7384E24C6E1730A3A790D690A2103AEF88E0C1D4480DC9B25E5C8C9E1919C95
F83320179B4C7C4A26D559BFB24D7D596FB73758C9990C451E77FCDDD17763B8
9C30A9534E3CB6680D3D419D4B70B0B0A0D160FCCDE169714E373F65B7144CC2
DB9A44E041211E1517D3148E65A2486CBE5E74E625261CCF65392FB4F3091473
F9E8DF327D59A58558E5C9F7190DB577D5DC658F5E36258291C708B3D224653D
064BB6079F91293FC733710893AD1C96169B30CBFE4E9D52E7EFAE4AFEE68FEF
1AFD5E7E9DFCE8DE332B0FDC0514F9B3090AC85BBFB527FD8034DD33E9576325
A8769AE09AF1BA792447DDD932B98FC9486B39E0B04DDB3EFB7A30DA0940B33E
E27490E0E841E87B1C90E5248A91742ABEDC10F43A8AF0F9C5B4A4930B1AADAF
01874B9AC3B8D0DBECCDA6CD7E96471FAA15CB7F8A599C5746327CE392224C3C
40BD60AF97BCA6FF6FCAB2FEA114D7300B89E91C3BC92D5B3E2C83BB37992D8C
72F661EFD0AA034C738C019DFB79BF40651A1A34BC1EB9F5AAF58F8B3DA32645
24AFF8636486F08BC21533B5FF7391B0679A78DFDCB03DAF6BB7475A1D51DAC1
EE4BE9B986655D1FDB6936445EF99B58B303FE79F11275EEA96A9F6808EA8775
D873D1052FAC93769789C700F20EB2ED6D15676F6E563A769CA9298E463FC311
83281483B1C953370D196727A6A0E66D32D9480AB1B6DCA77868C1A2D5DB6483
5F31EB6B18EEFEF1CDC31533E69B0AFC6B30FC9912DC89BAAEEADC30BE14F448
1A6B70D36A5D9B01799BEEA686066114910842D022EB464A9A1E8F0A5628BA69
AA9A1925CCADD44703BC67A89F3B48E4680726DC4360274185CF3C8AB747A8FC
4B928AD62B092EFE48B01E33ED756DB696171FDB775396BBA138E056F71EDAE3
7A1E4CC272B8418114B0E81DE0BC43DB3C133167344488820A92DF10FFA26FB9
65FCA2C87D302E956DE6B4FE145145440C83DB43A68F8B29A592B127BDF49063
B7F11E155CD4CAE305525BEA56B7C412A6260426407BD892A3F2B444AC3421E6
FB6E6425EB5C3053C5644666B80405530FA0012B54557327C98E0F4F064099A6
4ACAAFC1870359C1B6FBE7606BB8A26026AE20C212210449905E628AF1B20490
8CE908B7EF3E3DB551C85AEB0F7FEB6A8D215B97998E5DD9C7CCFB2A9402B8B6
1770D4023777D4B45A73F471355353412C51D4CE71FAD1E0AFBD87B5F86307F3
10D0B94F1194EFFB64AD5DA54A4200490F609CA8B912E149F8217ABB1E9EBB3B
C4470E7365CF5E1E761AA1945044B225BD53D142F6588C50E0644740F7DD55E4
8F73201E5354A8BC78339211AFC4935F44701FBA043AAC4BA4698E9D7700029A
C79F992F62627C91EB855F64C4B251718FDA71EDAF082A0C7B00550949D617A0
7071FB14F05620CCF2180941341D8E60FC88823438FD728A4042AFA8B853107F
852F631518B61B234565291B5D5B89DA818DEE3AE3B68A2869DFA63255CC882C
3B16BBA08FCE3632E57FF7A07F857A1F0FDCADAB39D77960BD827CCC8661A997
648BF5BEBC0FD2286C2A112A8DEB9CCB6330A049170D5D68EEEEA011D3EF3EBD
855236B9380087CBBB6BE24191F728B7EAC5B50F7A547AA0989B7C7D3437DBCE
1669341264E290646F2C8C5A3ACAAC7CB63DC692FAAE13E9B40E8BD39FE16A0C
1660CE66872D061056C04DDDC265C024BEF8B7E3C3AEE76FE5C9702002C28BE0
B180295EE00E567FA2E5CD1638226D24A7C732E1BD8103B476EF5702768689C7
D4FCD47F2AB94A2B1FBAE6ABF87B09E7713C773FB65CA83F7318035B332B9F99
24A2C8897527021321D003AAD7C273E4BFA2710B9BB26C2CFD3D9A5D7ED1096C
552D50028AE2476FCD6D12A5D0A897521313ED1A3A8456A70C16EAA50A3E6733
6DC89FEC56AB54A579EF264377A103939D5EE00A90B4F2206D0023AF9491FBE0
800C6540FC945199E20E945F46CEEA2E885F6800B9DF042BCEF4291A4B1A62C8
6A7ACFF872B25FA3AE69E0093F3D0FF13A3313430C06F1AF94D500431566F659
E8C859A5F80F5BD2E85C8E32603D3745628E8FE6FBC50FA68F9C3811A2BEFEA4
5852CAE2AE5AAD3230ED050593BAD0A9581EB7B327C6916B8FC348F4C23E6FA2
00FA28AAACCB3091C1D83F7BB88672A53A2EA3B8C7C24374E400C57F0F01019F
E52D5C47F389D4C9AF126F4080F9AB8D1C8F470932BBECCEC72A9796F6E965A4
82057DDB43D68298A00880D4C2E2496F26F015FD83C5549215753459310339B7
6B2961EEEE74DA31FEC8E2BDDA42D4080A32372AC372524BDDA580EF6634ACE3
128C69D04D890DCA337212B109585C665AA83EFE47D5BABC2627A86EAD11BF7D
744176652C7F9497785A7A06A994ED8414BBE8B26E74D48CB83FA24AAFBDD507
84A90195EA3D77BCE8C2BEDDD1DC52E8164DF15D65B916EBDF3A8A76849653DF
AE3CAF9561AF3B705F75B9E5DFD6758DB65A2FD54683759912E0D0035CFBCD86
5D239CDECAAD9AE5D95377E0D3F61C2AB7EC99ED28D2B4A7B6004A566B43CECF
7E35419EBC2A47CC76393F4778DA801EA75B4C1FC38062AA77CC4EF0E6CB0C81
9A797C01F89BB58A957D3DAE33E4256B1F5A7D66C8989C512DA066D6DC771548
F2DA3B490834E7B4CECD9293A5DD581A3171DB1C41F348377A602A2DDB80C0CD
7B960942967BF3983FCE91203F8C465362CA8E91B3C759943797C24CC83176CE
2D044CC07FCD6CF9DD7FCE413A0B2CF777529685866C7855509CD57489F07108
D995887AEA9D20B3CDA77BCA95B6F655020E2964AD82AD77382DFF4903C680FB
2C666FA0A35C4C85E87189C909F4B6A0C788077270ED2C2B0D838488F9DAC159
7864727A4F21FDF43764C2E9B8BA9A8416FCC45247C82FE6FAEBCE13C1E3A49E
269A4690D0AE927362CA09840E5D802CFE2BD403D853D4FF9DB92D17AF722C95
271E384878E4B6991DB3A90422F7D0D4A260E131BAD83120E618BBA0C7F201C3
E6822BF981212D1462A8E8C28005291E4D768BAC7378E124713CA18F365A18DF
7FC981026EA47CEE8FFB0EFA469E23050DFF752ED042F0A9F8DD7CBEBE018E1F
056476FC098BE6A639F16CF415B773153D9615BED1251E4EE61363C0F51AD30F
D0099419E94B1EAAB833E4E31084024D0E7C946E83F574F370790FF713D5F12B
0141EE5B103939B88DDEA6D3A49A83886DB260065E423B426EFCAB1270E1C0F3
A18E54817F7BDD3895DF79E9BE619F51924D7DFEF92DA0B1B3A34E9B39FF3C91
550BFA9D3F8A47FBA0ACFCBC59182DD669E9F6D78F7F3A3AF68D14481FF110E5
BA8697371A4B9F7D6B00568B0CCEC6C3E76B305FBF8E3411C2F06D6699B77C74
D3506CB7F1F3CEC338951D72A520932C1BF608B2BFBA7A3F81F973354B53CA5A
E854B71DAEABB1C4A05C4BB50242AD7D07C2EF59E3A458C598C3D296AAE96F40
AAA72A0C22DD1FBC1C8D7F7111693802519CBB7CA35B8E19688E347FB1A2AFE9
7D4C70E0242938F2ED5469BFD0A40CFC541CE31FC98261FE9546C44C7432919A
6FC3B1D50D20A736ED68E499532482EB4072F955BA4E042B68F8079219AA89F0
FCF13863CFAEF68CA01BECA5EE8023CE6E82FCFD4EACF73FC89343F28CDBA5CD
414405AFC0CD92CAB0B117AA039E23F44F22065749ED5078FFCCB4CA1AA3913C
F361D2F7242677C022D5E1D3C146AFB27C32BD7AB195B48A8DF4CC73F9ECFAD9
85F4FBFB3E8D7353FBAFA3087278308100B8A07FFCB27235C4348FD77150450F
A8D33B98BDDE23ABDBDDD8DB22470CC43E202F8559DCDD7D5FFECB836A65FF61
8B6892DC4C3D9424CEB12D257C6D13BFC785759F355285E9FED85863CEC1B6C5
84F92DB0E10B22FC36DE5DB4F625C9202E9D9C01B62EF23D5B983C9A1895CC67
C268BA8DB757B8AB9A8CAC1CD50209BFE9CE250B62880BBAD0A19D48CEA7817B
9F50285AB5E03F100F339270049138602A1B9C8E29716E2E97CC0DB9F851CF95
5585780A5C037EDF4C9BC1D95D72C9CCB31F03066CDE17ED24DD43831BCB4EB2
E03E45BA2B9969FC58430A39EAC70582BC3F615299BA15B8691A987A0AA0444A
A831343100DEA12B8E658C1046A823DEC28923630C1C7B9AA0F2E7EBEB1297D4
B457703BF4E4990657CC0178862B92A19B5D8BEBAB25AEEB7D24E833F7B8BF3D
E4498F6A975C5196976250355A446BA414015D2EBA4281E278BC97749D405AAD
6A8F5D170FDBFFF15E77B3FF03CA994326F4C226D6729A7580962F97633A7C07
604B899D0465B74B3C3FAA92BA5D627FA697E1E0E2BBD469B3900F75C975CB3A
61FE7CA40A6098BB95D07FB57A1804EDF45A328D4D4CEA17604F3D7797A9ADBC
CFEBDE754B6A6B9E8327A68EA20601AE774B9761696AE7B5E2FF38A91483325A
81A787D92470FC818B336415706D38591372BADAC83082F00E3313DA7375B4F0
84C4C64703C4779FCD81DE0AD1E995FC2D039AF2636D9E92FDDF861002CCB3F6
52A2EDF2DD719ABF861F4374D2A4B752A22A13CEC4BA5A6E2F7097EBCF2B1D51
52E8D7EC353E7D81A7554FAA97AF53F99B4173D8E5D8CC64690352289D3F374D
2C2CBEB881AA36F2FD32053553592858584EBFBA53E8D8E0F9EAC13ADF5D5249
AC0BC2B157F86990D94315B96BF3F7F22A500C53429EF18C3D347430A1B89255
00843E833A56E05DA1D289D47067DFCAC41377C0566A9408BE02AF108419F845
7883185955BADB667DB10186FB84A230D7FD29852913C5BFB951BF1C4F86447C
D21B505E06D0CDED9647637FA47D10BCFA6DCF7D80EAFBE9C18BC901E14469FE
D0174C93C50997C9A79C56678FBACDB937DCFA972B92105D3C833F5A6EC82AE7
16CA34CE544502ABC9526DF48B0762B57F8AABD3ED665B928A193AC2863B4119
EDBF07DF107481D00ABA4975049E84F39158D80A13C4231BA0D23BC56E2BD236
FC1FB7FC90ED0BF508BAECBA7E2591A9FBDA8F915EAF14592EFEDEEB26995C88
DDD550A7161D67A593C7E45293C87CEDC5F68CB1368AA7A650A2A57395FD189E
1F28BBC2CCECF73CF2A7B8931DC6A5278CC228831CB64A1B37EC685CC6A5D696
36AE100B7D9ABE1FAE5EEC4B49136DA63EC0AFD3B8A6EDBE98C69F89E7E79443
1C0B35BC15CDA74F3C7E96A68FADABC633A7F9759BF94C66CEBD7CF0A7097AE7
D5B824603DC5B5427FC99D44BC407E773EB47EC66F053940715AB13DB890CB94
45335AE1A55E6E1A3FD0961C3715D5B0AF9D77A7A50BD90ACAF326BD6465548D
1F7E48790BD199EB4CC7C6977026DF7B97064EC2DB868DBB484DDA6371DFFA62
CAF3ABB6F746F1A05D02C5873365CF67F9DC63A7A3EE901563B7782A3FD72955
3F486D1A1278D605EC795FC858B66B5B3771482D10CD3F626C1A3B26327EB02C
5D7B84482D12863675912FC35484553C310CB92B3ADD04E4FE606D0A151A87DF
641AD78F02CAE344C21F3BE4B57F740374ACA9E078CB288F8E35427C3D6F2C22
33F7EB95A02F86E9BCD8F232623820BB946C4F21DEAC15A91D3E2DAB7B4FE8C1
FF9193BEAF570837D145C156530B257CFA3CCBE49A3AB12438D7942E5819AD8C
8ED82BA51C8BB59A73F946D1042A59EDA50EEEF2B521033D954848487A0644DE
5BF416A43108780459F6DCE0B8B7C29A644F2F337A8D3A6C67B197FF3BD727ED
5B8352A969A72EDF26016EDBE2B220F870DE7228FF7B8AA7FBAA7E427A5F3509
F0E99FEA05CF073BFB39B5DBD2D27C10082B5DF0B24F6B26B10918C3299B7DF4
EEB9D171CFFAC5DB8DEDB1083AB52B561E0D9EAC01DFBE2AF2D355658E2E4777
4C9A6F2436CC4742941AC6496CA711078AE51A1B728541FF56D3A74589E8B0D7
0934E8786E650C10CEFAE40AD0B70531CC28793D5DEAA87901379064EE5975C5
517DD4B3AC126CE82C0962677ABC6BFC6B0A2ADC022E575A0EA35D9BC85DEBB7
18158F7DD673E4F886367DC20456756F8F6427B77AA521C155CEA6C1BD62DA23
2D66C7ECEB4CBE0ECA38F45B27D59A15CA1A59BE953C84E461ECDD23F9B88CDE
5FA2B78EBEED9D5128D97C1CCFD484B421D3CD490451F743C388DEB168CE7BD7
2C70BED8C75AC6AB5155F48332BB05919FAD2CDCCE09AC96F354618EDB022E01
EDBEFE1071AFB858DA0C7ECB33886744E8C4737DDF516A1C2CFB4CE6BB7392C6
3DE04AF49FEE563E22B45DD418AA1F1D9084E6D7D79F849064E3D8589EFB04BB
A9EC4D40DEBACAF3D8D82EA12FB3E76A0D71F2E38B01CAD2C7D393DDFE6959B9
3C79F413D56B3E05C4D8EB0021026EDDC8E9F01D16E67F5F32C075C3A30703BF
C5314D4EF0F8DBAAB4412F11515B8B2B5F73CDA0CC1926A6F653AC23CAE35634
4E9D7E1638072A8C8A441C3A9D8FBE3CCE2BC0850D9FFADF99F2289B06FAC2DE
33D3B123DC2F74351C50695A9AA04E9E9E23BF70CA9768C2273F5D9926D197AE
598B796CC59206F4E64ED62B06A6D4B303E5885EE89EA2E2F8B0D1ED713A3981
EC4A5CB1B1EA879FFB5C001619907EE78E6069FF70E49778F6B565E2548D3806
0215C23D972C8CAD7AA25521CA5E99AB391128A5524A8BC5278B713F41C53BD1
C7CB40AE519AE77F780342263D1E5196B0E8EC6E72A40B22AB73805CB81154A0
4159E05AC2A2811F0B1FE7094F9747D07F280EDC1A420764B714E181731D22A5
6178FB618359C225AE6D35DE9036361EEDBDD326614507104B8E9CB0D2EF0E40
0B8041D39A0D4CA79F0F2AE8A5216E091D747442CFCBE509AC2E0D9FB0810AF5
C4EE457B9978B9D8A5EED6B07AC6D3FADF3B8C05E75C5119308DD3DC3AB0FB97
FE9C1889D9CE1B41C07D11B1BF5FCF316DE61B584BF18CAE688EC6827D837324
50223F360ABEFB009563BEC0F897C71E2DEC577C4104562A9F20F7FB216E7D57
913DF3FA6454F30B251C33C9C135DAB8BF8525610091D8A9F091616B94105826
18A78AA2C634D0362489FC859FBA8B6F95D182DA99496B078B6BB5CACBF9A6EE
113EA413931438942240A0D8A6A5CDAD15989DD56446403C2A175B437C628B61
2F8B2DDBC51C8E777A41F8B3581E296F541489F56666025C3A18E1DACD9DD7EF
F68DF136D772372B742806A37C5376BCDC29C78D13BC6783938481D62CA58480
4526A86D4FC2BB7C822C420324052632A2934474AD32514D02A28ACBD25C5710
F8684BB554854B7F6B6803953A99102FC7A12421DFD16927CF302FCAE6E8D546
0AC48EF14A86DEDCC0185C7DE87CFF9858576C5669F90B4B98061C14E31958EE
14044962F0B426503CF390B5AB13933C765CD66F1A58A12F58F962AA97DE690E
FB01152FABD2F07EFDC557D454FE242EC605B3ACF90F776ACB0497D88B600D6F
8FDDCE3C1F5B91036123E2856B3C8170F01CACEB359D67BCF12C0AC450EB1880
1E27706E2162E6D9E576EA527DF39F87E90E5FDC38B481DF1C08575769670DFF
FBE96AD6B2032710D4014F9B4491AE7A38A708F2393AD051D6386622B8B48411
90187A4C0FCD45F170BF38ABB3C1F8B439F948C9174C4C4B27DAEEAB36F7E994
F5CB4B009D595EE51DE6755B9FD45925B46CB548A46E99CC187FECB4288DC57D
237ED42C1C70F387DFA922EDBF766BB8B3457EF4569126884C6E671AB6087420
F4D4F441CB334E019214813B0E90A95C2D90E5A01DFCE8389A1FDB3F30FFDFEE
9EE1AAD8AC5F0876438B21653A7D42B8017CD6B405CDA3E6A846C9731483EC3F
A8B7FA4C7346447A713625890E6D5AD1397B785B34BF4B9E91090436C94018A0
8C39BD4BBBADFF9E9DDB31C889575D67BE63618EAF3345494ABEEE0C9B82911D
26A202C7E88A7058FB9CA0EA4A50EE6711E37111ADD121DAE60F37AB0ED965EA
8051384C22EAB271F17E928FA1F4733D8567F93165E3FE645B16C776D047444B
7020FCF838DC16B863FB7647325DC010E8590079268996AA35CF595FFD122F8D
6E7F8C6D1CC4202453B0D96728ACFCBE80D55A5453C14DFD3C49F8D85C837DE8
47AEA6F0BEF50AC4D98933937740360B631D221B85245AE95BD2E77CE8788E52
0F649259DBF81E38E1AA970191BA1A3BB211F1F4B8D8FD6F0A4A399DC3CB99C9
00432ADB717C42791D8890FBC68B95FEFEC2A54DAD651C30116A93BF03939E47
013D2BC0D5D5FD7F70C2B1BF40F986DD19CE637E6170CAA7A985A5DF945756EA
D901AA35C9A8EE9A3936129E78021316A52E663E8D7F57170D88038EE4F6100E
F729A8C618C8EE7E5F5D9FE87DBAB67106EF3097AAEEACC6C509087B44915A6A
1D542A33843BB359CF60C763253C81FFE3128D3ACA9152ED3BD769500F02CD5F
EBE8095D9B4C70E605E5EACA5EE074032D46FED2E4B6529B0AB88209E9A281E8
9DCE5589480498278C1EDC73624B9589A8D68AF41B466E449D88AD86A18105CB
9DDA214565456E196275E89F0EAB2B56BB02B3E229FC2AA3C5F6BBD9445AD723
98953A91D2A73B1322D99C64422B6F561186EBCFC6DDE8098CE7582EDF64C1A1
AE3719E11582C0AEB7065F8B4842AD5D163F485C54CB1918F70AB7C1AD5B5B22
8A71DF1BDD629ED3349F03F982CB8A268E6261A8B0E616E0BC0B964D4EC52129
7724B42EFAC8888B70022832F2D3E78EC00E69B9CB53068EC18F4D0128C89669
EB279A5F76B3954B39CF55BD4EF96B4DD47CF656E9F7D8B4608A496CE2BCB61D
FD78FA62A6F675B31A2E156B7113E162B7E1F856FF9FB8C3B7B9D7D9CC6BB36C
F0C41A82ED378D7F31C11FD6BD828E74F6BB51D3D98BE4E93516F82608A839E2
EB91489AD4269DB5A385690CF588CC03B75FD04DCD8EB05C1A36C9C1AFFFF4A8
4FEFB279A3803AD4E0B7C18A720D57632CDB14F27BCA9917DDA7B8878DD33890
1A2F851F18E85A38C60BEDE467821C742E3A34AD00EA8287699A4537619F50EE
1681D60CCBB50BE8FB87E06D63B475403F794B5F434872F21779B57ECB7407E3
80471488D7A83AF80219481ACC0E3C35623154978D0D4320001528796F5948F6
588584FA31B02B7EF437E3BFD39316C28373573E96C85B3EA65CEF11BDF58241
0584DE31E9499F05421E288FB6CEACAD6D03AEC44261BB008FDDA7D689C7A62A
A9B8FE1AB4CEA99F479C8C14CF0A55B936357744F12877BB251A377655DC329C
E3B877897FAA8B51263EEAF29851E452B59349209F25ECE6BE949842BBE3C3D6
A4D1297679256282DFA6558DBBD5C962C26DB9F433C07B964CB46E2A752F2558
234BFCCBF9B1745851ACCC3EFE991429A0E804E9328E217D17622751EAE59DF8
143480C6FF02BA8875EC7849E51F3C78279D995BBFDE381AAE17EA23845E98AD
91708AB20239C65EF1E3FC874F9E185AFB748DA797DE8D8AE98E2882439F1058
D4AE71D4FF13177FC14B1EDC872C85C87EB08F963360E81E3AC3E4535B0DE6C7
F18455C648BDCF0C45830306613B5276C8906675C4CA0C9E2BA7B12AF0089BFB
DD92667D865703C087577698DC7F8CC1F4AFD10A8B1F63F120988B1E46E9E220
A583CC726C613F44F0C20B263C22DEB85160DD1102AEDCB8D8AC26E65C4B0CDF
FAB0196FCCAAD9CB1F939A4CD40D6164B3C48B2522957C5081161FD1687358A4
FBAC084708A66D4FE37CEBEF195E58DF08B57C90A0AB21E3FDA6774D9A0A39C9
953D9F15FF1AE73145ABE3E21C1A6536986CCA0DB72FD89775FBF0D420B89D12
43479CDDE323616856CAD17701B5BB9071EEF18F86BE481A93DAA9F81CA12BF2
1448EC65D5541532058D0171C099673601C2D717FEA776F8479430BB58634F94
B56EC93E2D936319B508DD53A3DE72F986B1D4B37A91314B7FACD312EDB07AB9
E9D6DE61A0D781A51770AC8267B1A29AA993DE16EBD616666860C3F5ABE422AF
98A9EFA45547A558D67E892F8A4D381AAF0F01DC1017B4EAB439164DBBF6FE00
6008F5E9808D51B0573142A6DE711745FDA84738BE165AAFA2F8EA55F57E8906
FCD5C043FF9883D1690E984DD1FE8DAB59B7BCD7924E1E26D8A567E4623B6BA8
E1E75910E884876BF01320AD06314CACBC1287A33F1BCE9959FF4C8675C879F8
3D576F526925732182A596F594281A166C2B574B83F1B791310923C6184AFE4F
62625B858E61528B29341516CE5AB517978C475E6D12011B81231D8A2E2F5C1C
8F30BCDE8DAF085240E298554D24B78EA259420E9E6A327D197B940C6B3A880D
2E470B7069CF429BA12EB7574E460B1EF3D01E65EE89CF3E295BEE65210E712D
1AFD25A950A42E429FA89752329624B202E79B9747BB0DED902BE9631DB88AA1
3D2282F733BE488E4E451378C83106970A8DB99DD2810C12A43F0627E49DEC69
FD658FDFE9503E43030F388904816FD93201B4F5E7511DAF9237B144F2E528C7
1B22FDF398F70975182216FA720261C3616F711C4B2943AD6293EDF23818F493
0B530DA750513F1A0518A5CDACF73C8C29F42B9BB7198252AAABE2C38477BF12
953664A3693EA16ADDF61D489F4CE9D0DE03488120FABC322A2A3F622A551F91
1FA2BFE5124A240DEA8C229D62DD173892B9CDC2A29674B1E96D7105742B0B02
AEFA1C1204CC2DF12B46B7485E15831E5CC0304F4C7B82C4135C5FC4686FC4AA
B93C7C87D620E4938593F6B28C84B8F816AE467D4ED244D674947F878B1512DA
D414FC5F9648768E2528C630530D06992D860D577A854575E6A04326087A0DA7
AD8AD6BC2E1B1B5142EDCDF2BE65E013FCE1C6D21AB7B0AF29964276D6AF7927
98AD7C15089B0080CE304A36B8F9C4521858A19C18891B4ED19A14614AD1FA26
EBB156E2EE174502169E0468BEB0840231634789E830F1A2B9D36F9C945C6659
F0935ED394C8F24A376CB78D85AA0613F0CB1B652655A1CD7F4D7CFDD594F365
B4B7246B5F63644FC5C932CEFFD9D69728DD6190B0E3C40D40CA7932318E4354
1F9EBEFCC29769C06E84A4583A41A2D08BE5CBBF85B9F6B1BF0432764FC1F2D5
F535AE93682E79659222FB130532D292AB88DEF6AD075CD7D38ED3CE1E8D17DF
A0D6CB5F8540EB075D7A5039BAF366A90D81DDEE12F331746213333A808CFA6B
4968E061FA0C6E78F34BE59C5F4E74EE54E5250DEFF1CB8ECE978057D45EF1E8
ED357046CDB66524D4182CA01D17035A9C2E56F1989AF43945F51A0D3AF01E55
645C5602B8845FBB8100D93D401CBC52FBF536943A2B11AA73B05BB94A2E25AA
16B08DCF2295594B461F061624D5DF3D1DEBF93CBDC74F24E5A28A6130C16271
8991CA58F5955CD901C0E8AC0268B335D62E0B85F14CDDC3327F5833EBF2F3CC
F8707C22ED0B0628303CAA285D0556F76BFFA47F4DEFA5CE868C9CC1C88E9B34
8107F382B78FBCC570E9B72217CA17E6B610272DFFD0237E1881BF18872EB9ED
66F92F3918E3298BB4411CD72863BEC5C502A418950AB87D9358F079C00C1CFE
EAEA2A4BDBFC9DB46211E25E68FB9172B6FBF552DF8D595595E2C9F24E41ED4D
0D94561732A6E3BE2B22E7254113E74AACCD7F9848FF768D4A0633167BB0315D
0CED94DF0C11E02669DC6D16B74FBAC1323739A3DCD1E84E7D08BB756B56B455
8ECF939086EC940413221B185CC4E43FFE8183B78BB66F43427CEA8AE684FC3A
15C097FD51EF3EF0A981F0642D033745AA9FDB9057DF141C26DEAEB3B0E8F7C2
114FEEDC4DB8B3631529FD0BBEA34F9B7A9523D5DD70CA070F3E0BF00883FB00
5D08CCD4016C6904849BBDE9B63446DBABB8C5B53E632225EF9CC8BA2862AA3A
CEE04EE74136007F1BE5BEE1477493DC4DFE03595BBFF10069FD9C8DD98B46BA
BBE07B25C2861C5C503F8BC592B465D867F6DC4DFFD11ACC6487CAD998C2101A
F18C7AEC0F220621C7349CAC01F9D04B032A285BF25972DE325E04DB087E9916
EFF55632723E9A6526D6147CFCDBC3DD9F7347FE14F08C628357DFF723191B83
D8971B963D22C03603334FB990FBC9EBC759FD68226B523DC248375853A07963
888B95AB6B75992D4B60F1CF0ABA14156DA7538517B460E82285C10046C2693A
8D9FE80BCAD723A9C212CAF9C8BBFD03760105D327D560E29F9283799220402C
CA80F706FDC39858B7D2A9D110D77E80CA31E76F934A29EC67D744DAF7356E67
42A13056335E5262B1B4DDEAD2389FFE4F3318069C832A360262F94BAA2FC5FF
C8CC4F23F49B89BD209DB0CCDDC3426AD6514D83EA8675149C2E96128C2D21FB
3B8D5ACB4FCA1C0E08994FC6E2E3CA45275A52C69B3A04699D7D3F585BBE0805
0CB35D175C950BFFD7F208F0DC21422A9FFE5D4D01206B03FED273F135312B4E
B231461C04C62AFA7081C8A6DC2D97ECD3A162C0B22B5890F8B0BB839AF440BE
9B612E11ACDDA5ECD8C2AC909161A6AA5D2C4489AAD7786C22E1D437F415CD6E
A42074C0D273C9B0A9413F86C60CE6C51451CCEEEE8D687D5DCC6B65E4A5123C
CA1DA6268B7276EDA841C773294138983118B5740206F2F9B99EF1A6F6C39D04
0AD25BB819EF0E78381FAD3B0D0C24525A66FDB2CA82DBE07E151574E3D1A035
2DAAFCD08E6ACB7D6560AFD22316C4825AF8609A03E815C77A0D4D08EAC785CC
813860BCF46FE8A83B1E18EA48DAD26DEB5DB32999B132991BB1A9D59867237C
F6FFAED315182C3FB6E6BDF5248F0FE8723A9A219F4F3E411DF9D461957C9C2A
168DBECB8DEA11B1AB17F5A4FDCA00F1D7306201D9F5359E5D943E9902FD1A67
3D4CF87F12AF9ED9477808416E1449CEAAFC74CF36155781143E7F9104FFCEF5
E5A40854EBE4A0DCB8A290B0D28AA30B5231C429D99DEB1A3137CC35A9AD34B3
328955AD3D887528112895677D29B3598ABFC4E287268EBECBC4C1BE1EA3D753
B07EFCCA8189E4EBA8D91CA68537B5439DAEA25C329BF472F2CD6ABE4326D723
F2AD768C88310F63A99BB2FF29E98707E068C2D8CD898098B1359A2CBB8B2DF6
28FA93C65544815C2485662137E8D6BF5619F24A44AA38C5DE41072F986A4AA3
9CFA237F7822069F331DEA73D6940E5DBE54AB81CEBED16DFC5CB39F7A0304D4
567CAE894E397DF1CF4A9A2C5817061660DE8546ED5848A528C57E063B7B2E73
1655B8409A2A03C246915917EED8109D87C3B4C741EFAD390C72618D2C89F1E0
78A1C6B799FF3CC7F0694610D8D4FF16974E272368D3478D4EFD6D7F929DBAA2
110676A00443C9142128C16E7E94F18903BF5C4F945B7682965B143E7333FBA4
D654154E9669C32ABED0D74E3982829354A26D808B944AB9EF2EF9BCFBDA6E8D
B86088E0E6E5FE51401FE828C3396B2D764D2F51B2393AB3271842BA7E9331A0
35197FAF9470991FF3F063F90CEC8C1D091A6F4024A6AEDC4BED04DE43AE4BBE
CCF92A3D798D62320808A70AA4CD376F13E03F4307A6E1634AAB65C03DC49677
A744200813FE2E91E2A76AD30FD32FA1999CB88E04C292484AF1EA0FD48907D2
A3798678AB8829A061DCB15AC635F2A91C6FB07E0977592AE0CC470BCD9C6493
B3F8F8D4424CAF0AA72AFC4C3B43AB28B5AC8E7F7BB997683C4D1F6FD78E2F77
41AAE32556AE17E651575667A7B6609138C4D4B2ADE9338BA68F8CE91865F2BD
C241B00CA531740693EC07FAD01FC63216873F948AD7C9EB828395B0328755ED
CDC59E4AD0E7984B4DA205A6C10AAC02DD7AFB241B355192497598E4B2485C3D
B36699533E3750C1F4096E31D3AB57F0C090F6A50E5ECD292A5CF738989EC1DA
06A4E070684F459C086E30FAA481ADEC8B71F023946D6C9A3B5A660FEEFAF466
6DD990D187868FD40A7BB6E2B1B4F98CC2BD25F745106B931B83B3329DDDD0E0
03F9F2C4F1AA9A7AD6226EBA3C9D28F630933DA935A4DBC957043E912DBFDA03
B351FEE4F2EAE0F368791C09C970B7735D288C14189263967BBCE8710737E64E
FF414DB661FA0705EC6C6154BD099E41FC8D0D7316C3603719E77E6F8F262F70
60788468EF3FB68D3D7EA4280488F444F79CFD7CD058FD42D5BA07AE165BC2BF
A96D3D62CF115A2E59D9BAEC76779BCD113A5B450AD77F54CC33C219EEA3C5BF
C932977D9FB45FB75241410EA0AD57D942DA59B715B1CE6E3F0FA69842864AD7
EC7F70D976B7B6C9945DA2D6139DB38354D8165CD230739735DA80874D64CB9A
978740C4D62B6F72C4F58FF3B1E2BCBBA18F4C6281175F3D2447355F6C1BDBAD
923EA9771EB727FD7E0C3FE628230B204F4BDBD6AD38A189D93B21BFE9F3AD43
AE8971E4AB759799B47411CFF948325D280329584907CE478A2405AA2BE4F85B
9BE0EED95F6F45E64C8F23799AC059C145B2CF92C58795B57B9F8F5C28D485D9
C654871738B5CCD5458B8943D9AEBD34D343ABF124ACAB34EB01EC0A10033C21
8220254CE82E9D9E60D7221266A8BFDC4FBD95600E6C1AA373FD1B021B34CDD6
70D197308884DDEB08E8DEDB2BD741AD01CFCA380FE9007E902539B0EE06350D
F52DE67FEDDE9F002386365C24AFEB1F61FA8FCF7BD71A36365EFCBEA27BB213
FFBCABFD080721774A479DE8544D8DC927A3AA3C44F39E70F11AF3ECE73DF3B3
A5CB0E5D1703170857BA4B267434FDE9EB7F015AE8ED80C3E744B20B7A0D1C50
482164BCED3B5C64E7301DFCB1A111B181A7359EE600C119C1D812E71500CD23
4AE2355A299FBE2900EFBEA67578803A2CA702478C0F498EFAA5970BF0FEA863
0399298B697621A8A586142B9FCA22774876BF7ABBD217A34ACAA6C1A9F1ADCE
939D90CE4C9519DD526DFD20BBC8E007AE5EE3B463684956BF9D682AB6BFCC3D
357F3C29822AA3B9027BBF2CF54B9D0FF1796DEBC8A848E6F6DA53E4FC7C6756
82D6DF3B286C4880DB12C7E72834386EF34919C31AB2ED77858CDE38479F4E54
D4DC55D0178450AE3C9C1B184D575AB333F94A7F43FC4A3283CC14C83EB85784
5947F1723879A98816AAC018AF43CD2296E774EFCAA40764CCA586CC2C399B92
648FEF150675132D7C1C4E3DD3806BDC523C0E9C6A97755DE14D88F7CC3BACD2
EEAE8C92340B12265060CBCFF9DECEFA2F95578FFD847170A61E8ED2920371E7
4BD8F2DFEB171605C11E1607EE0D5CCA2AC119F56CC87A2BF3AE223154F6C96A
5FB5F2D9492D5C74220FE452A07AC30001ACA3944B982FC858089BAE7B7AB2C4
42AC4239398C3EF594965D9330AB2D959076C49D254430358C17E636D88B1CD6
1A450FFFA57F0026ACF0903B9D00E8F9C52CEFC2C860E7ACC0D696097A2A3BD2
DDBD9034D6DBE15E36ECE3CDBE505477431E96915BBD3680FC51311F6D418E9A
252881357977C9A772FAD56AA221BAF39B90CC3874B1F91E1061C0A396C36F90
77872A310F790916219F3E4AD2FB7E0DD087595F3040C5ACC350B19D397E973D
79A210456ACFC8D7D0E2C45C11016640C5BA1C2F45F3214927B542EEA8C9E0B3
00E38AE93DA1E9A011CE90CA3E9C40DD67EBA6FF6D3C09A2D7C061EED71C26AE
72DA8FABCDA911AD4E82F8CE854037370CB04C03F517EDB3737C360B07F7866E
EBC2264675E7A1C61633442202256089AE8EAEF43EB673CFD12CD35F5AF0364C
AA2A4B7AED1136FCAB2710436981A2F4887C01E1E3808176CFA7F5D23DD26FD4
720D71A0596EDD3B26276AE756EB556B61564CDA37E55616A389FEA9F1ACA93E
4CA47DFFB61DB1B8B48F192492AB4BB318514C2C67415760437B8CC33A2A60FC
D210F14AA4D5EFA36FB77DAF95D3040583BB4DB01E4083B70A62632BBDDE8075
8FBB5BEC2A36B3CE85BC982428359FBB118475788C91F98AB1D55BF6386BDD54
5E42A1186979C51BDFEEF2054B36282247740ECB2693FAF708E02545B986AB97
826DA027624DD58E4CD301384F90F56B24198FCF6C201AF88BAED3CAC4186080
B69161B6DD382EA59A0EE3E26B2ABD1F6A860124CD68DF070DE1923067CAE41F
14EFBD5DF8C8D30F2493BA0521C398024006E4466128B1A7C1CAC1A013566601
2D64544EBE5FC2AD0C8795D9090F4EB3F9A72FF655F5A6914C92456E3596446F
6CD9DDFDE134E641A9F0A028ABC3EBD62290FF35744116357DD7516A79FE58B6
EFA84CAF220F798EA45AB8BCF19A075696E3860629B054D1DD13CD6EF5C6A3D2
105C55ABBD41241CAF2C31D1A9CBF09ABFF20F1981065042565A02F40EB54070
126E57CC852FB4FEA488694193DCC1A34217A31A220FB4B51CE704D90B2D0246
CF4D77E1141706F7CCB3A7B2B42809B9C2C986E40F9BF87A22B5B35CF0878AF9
A6DBDADFC8F2D4CAA3F0AE77CFDFB0ACA75D8F7D4F429D10289BA35AAACF403D
7A8A174342C892424FDC64BFE6DA75116C3730F150A5FF9D5F87AF78E80FAB78
223BF3403615EF9CC7EF4E2674697C2423FBE5001200472F8A4C98BDA2C134D9
1B38DD609F21F235898719493BEC5458BB487A87B98E90DCF9035E839F6E40BE
85944CF9EE7EDFC412CD568F9EB54412CC6904F96A38BAAE21660BC762FCF776
6D1ADFF8BBED6D853AC2EB5051F54185C52BB9C2A47FC5DC3789340C7E5BF03C
7D716BF2BC4B35134819A9840410E0D39B68F3263DCE6D52F3168BFBD49D2F3D
A72422322B9CD5A4AAB6ECAD0A38DDC2BE3AE98CEDCD7FE30913357BBBB2C61F
9A9A235806E9BEED7109CC1D014F53C90048969DFFE49558D475DE713E3EBDED
E541449854A5BF420BB1430ED7A318C08DC5BF89338BF56CF164832FEC0EAA0D
38BDBDA1A984202E632333068DD6A4C965A759D43BE638C796D550D7DCF519A5
31DCDD56E90D1B17C41F2BBC076E583B4B1E344EB657F535634E3F7DD5CA1ADD
CF3222DAC162A7A3ED3438376A0E14DC33EEB0B6600C7A74F4F1C42FB2B31066
5E009502071E6D76CF74AE1DE8EF8C3C22A5DFCD247D694A34316D3A8FE334B7
79548490056DBD0C62D00EE19C015F68BEA5EEA45FA4D0183BA58F73DFC15B56
1E7D44AF02BE0E69A63FEC80F2E6EC186095F56D7E11E4D1D9D2EC7C82B10329
B39195F5781E83B45CEC207D2EA4627B9A9C4935B5F2B5C1814C452ADEC678B7
ACE1C552C6FACB3472FD918F560AC0500318A7ED32CD16B2C65AE0106AC2CEDA
9340F16433B1FA39FC424F6BA5AED28D452140D820D5C185F258A72E6355B3EC
C1BB49F016A7274D597E995E68A8E3CE0BFB5754B36F2DD3D6A8029E977FE171
A9E7187CFAFAF14C242A8833BA9B5B64E95EABEE176C3EF31A19A300BEE6D87B
BE212A2197FF38ABF2E91535ADE8901FED834EDC661BA1BEC5532672BDEC47A3
6980F891AE2F43F9A1247FE1AD59E38907B582000476815BAC91FE4035F303B7
737B021AB3CEF20C3A24E53C9AC7B34937C804D37413F42AE7EB6533FD13ED63
3848E8802D6A05FF62B510ED0917D3
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
%%BeginFont: NimbusRomNo9L-Medi
%!PS-AdobeFont-1.0: NimbusRomNo9L-Medi 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Medium) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Medi def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -341 1000 960} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E178732AD0E135F772215
EA7EB7EA7641D31502E1BB9661E7B0E875AEE90400138F2AAF4A8686C73EAA44
E5CAB467770A3D12E9807BAC97B24A8EFB0E276760F4F51EC7123C43BC6F8DCF
9A2F496A9172813FB461FD870763306B45670653A9780FF409B734CFA74C12CD
150B03344295918C4ED893FB620A9499404B83C71152BF2F2DBF769000D116D5
EE264C016EE3E1241018F59544CCE53E5AEC124CF6C59A4D7D7D511ECC9AFD49
6608ADDD237358D7CF8B4D1C5BD1158CDF2D6469D9BD6E6D9762ECF34D1C3C27
5F69900E0D12AF9B21F153585742E999870BEE3DFF6309CD82968EBB40D9C269
CD4306654AAB6734151132DE4194072485FD082FBB6DFCB3FDFF9E1FC88D9483
8AA64B5825293978C70C9EC095B18352BFDC34B4BE9C939384E3281BCC6B1808
A6B61EC4E47BB6AC14B105FFA7ED6AE99A1CA0B360D1A5C24E0FBB55C66F5811
A5CD0625654654651979A8C4C3612054181CD300CD42D1D9CAAA589118D6C7CD
5EA8A9A0C639D5539430D40318F4B739DA281ABF2BE2765D44F45B218BB192E1
9EFBDDF7777E8730FA7DC0651BCD5D68EB743C51D9CED55403021D45F77CAB5E
7E892B3D1F875DA86C030A2387487DBAC8795749E849EC93439C9E22EB20D11D
07DA0F09EE9356D55B8D0D8555F1B0EC98C72863B376D3436E10DE2FB1AB9453
DADA019DCB64F6D059AB3A95B28B94435004C9A8BD3FB80E2B9DE0E330D03622
3AD965B4283E6DC880A2130185CDABC053C52693CE3F50557F524D7CCA9BE05B
FF9597ADF5D1C432C00C0B0D8EC2CA8436685B4BF3E2105B89FA6CC787B77637
248796C2F43872B3BFC8011159C22EDB7149AD8932360A88A223CC638BED257E
04908032ADA750F17279F7331189C322CB5ED9B66E502945BEB1EC68B1C7BCC0
2322EFD669C229B28CE1D0CBC0005FF967D0A4383E29538AFA13D41D484D739E
487D497DEAD8F661847A5D82D77D91219ACF666E565292384728E58E1A489054
8C3E34B413A6A550C499218E7FCF43694CBEAD016119CE85515F5EDAE3CD483B
A0F32743E7A189708AF0CB6FBAB22AC8F23604FFECE038C838472CA40ADEBF08
47AB1D450E07F9D51828D25DDCA679E3FAE54634A37AE1A5A778365C5A2C8A27
64085AC775AC132CCF27CA164C4721F67B63D52E388B17122F15E5DF391674CC
B6C9EDE307D79E390068970FE0AB210337558544E8CA59BD8BAD7D2ECC69471E
2E0BFFD4778A2E21C19645790DD11C5A93C1C33BE13B6A35DA4487D9EE9B38A4
1B2049FC64E228D7319ABCDFA4A29B08A08DD8430B4EC67FA6ECA214DAD0BE07
680225415ACA2FC86CFD32CB6210B93F60CB7A2A2959DACA9F8C687C1205E017
F6EA82A4848CCD1E76777B2EF6EC7952AE77117D3E5747718836EA0566266595
AD39130B59BD9BBF3F3814342022B997F022EDD9808B2F5F49CDBF36BDC71F0C
741EFCB8072813793C66CC14721FEBD858665236BE384DA73C9960A9CE8ABE91
E3684307EE1FF44D500F186F57D22DAA956983F58DE59FD2B73B4D2E1A014846
E680CF3A27560D1D9AF2D655DB049BA9E3356197B8071D9AF5108E518517498E
CE0255C8C4126287BD22FEB768221AD5999522E137F808DCFF33D40632058319
3B6201E1F9FA19FF49A5888335A21204FB9C29B6272613C152BBE869D3E55D11
D9759587F283DC60A2707EA2306152788DB113A3E347B57978DBC344FF1C817A
7836AFD8AC4F96F2237620EFA9C42C7BC988A1D30E8B43279E75042A9C413C83
8DBAE11B315A3B6B5FC1351BEB300A84A5FFE1F4E73AB0D97814C976112B9DE6
0C2B9C13E5FF22026C6F2643128B9155F977871CC66743AE79A77B4E9F707C6A
0E129A2ED4DF0D3F43D356D35F9E885757270E9F21A5B23BC009597BDEA4E71E
716433238AC886D639207031A9A1CFA77B04FBE0579546DEB6B1D267007B178D
AB23BAC475BA70CDB2554C11C668C39AD7EF03CF8A2EFF21391DF3CCA7ED2CF5
B5C8B2F47974FBE8689B641519DD9805A5D7D9D85748FD8BDA10E6C2E084485E
E622F8D087C10CA915447802076378323B5DA1178D92CFD7E9CAF75E978BF7F0
B3A639F351534F19665BF09CA6E71DE0E7EF6E4CCC3AFAD9965A928F7C24C0BC
7D55D16AC3D839A055C36BA4FF9E626295539FC859EA7A4A30C8865D1EC80E13
9A017194ED178FADDE49A1157C7D1FE4E809078F78DACE5A54C0701E38514044
7CB399037F850497C7CE4093E2F1A817C5B8946594087D55C2495990EF32C290
CB9B92D2B26060C6893E637E055EFB165093697034EA51AC4452F6F487A43408
BC919F2D6B6BB85AED82C53E115CD32D57D0AC1341F0324E85E9E523E5DD8638
593E67E6FB269FE8A9F72055812F964F31BF4133E260320CB31E9D5A21516A13
619B0096975AA15E27722D7FF1EFFBD47455A66E2DA5DFF28E8B1DF45EA09F2C
D140E6BFD418DBE559490BBCEBA6EF56C66D97CCC38A10E0EB7EF803BC78EBA0
3DCF28A5693D88FAA5F97793A179E82B57DA82F460B73FA9B9A3EF069702BC75
D3223C5743622228EA753DE3442DB12ADD7900805960C636974355F5BA0B8FEC
C922784AAAC3AB4AD95206ECAD22C4FDBDD9B918062794D40A6FB43CCF1D69F5
5D564C400E34905D710F21BB8E6121744435A51BC1E35515B913A00461E8A75D
468E9605BB1849902D50F737DB9F4809CB5813252D270371A93BC36DFBE6021F
EAEF443FC46E7B63103DD97C84214E9F17E250B55E65D8F14AE6686EEB06A17D
1AEFDDE0979F851D7FF3A626496695665B84FED4C7C258DDEB6810BECB56CA36
39B6CEA996D6E30A247FDFCD5CACD76D29A46A7E67C4965A8EE799C31CE1A20B
034952016BE1BA65EE2F2A8E45D4E4712AE3245767C2A0985F438C4DF62CC7D5
67B4C01CAF04B6240F10ACF0F996B91ECD4ED29F87B9F2B0AE84984AF8130F0A
BC7C44086BC9088D84F77D0BA3F6A345EEB5AB7E8D1F0D615CBD7F3E302E4430
D8AF79983D5174B666CB676BECAFED14399A3C6019216E600DF46A93CC09CDC8
633CEDFED2A5F9EE021B2227DBAE9F04AD3BF5ED74076F822CB19D4538F143EE
A03DE48C4018FD271DC84C146DBA39A9B243A9D9019ABCBFAD87A17D5FDB3DA4
947D83742BF94707B46C4496291859CC06A60CC8380A42EBE06BB9BCD7C2350E
50B4617A12450A4F95CD3828027DCFC5FDAC63F4D9BD628D79BBEFA0A245760B
85588C11FA30091597B50C6485931A458B474B3C77D56D063AD44B8774F19CAB
46BEE6168EAED2B0EC9606F6300D6B10DD25BF5803765046AE4CCC911204E513
A378EF5BDBED7725AEFB4FE0505B23F0EED4CEA493555A7D35BD9676776D7705
2EC812731F43EF524E3700DEBA71AF85BFDAF1F662D385E0AA4D434F59FCC68B
1C0B41678F97FD970394FE8D21067F8F5DF8B4FC8AE2E3CF740BE6D85F8F6F06
412B6D6AAD10305D26A2A310B04AD8F1767A4F79A273703C1DD91907A984DECC
78D901F1B109A7DB42F5EBF35A2AE603DE5D3CB1572F7875CC54AECEACFD8FB2
B9A3F2E995AAD008B0A1793569F8B29561573AA857702B4FEAD295CA496C06D4
97EC2F3CEFA50E2A0C868CD9BBC5F936E537F096041EAD0AC2FDC2D3BA9B36F4
4BFC4A513FCE430FCD1630959ED4904FCE5F85B2FD8AF1D10AE1D002FE8D2F91
A9884F25F4B046D2BD09D897286EE1AE4EEF343543AA94AB29F29A950AF02865
8E6219AFB22E52F8C57F195F6E652413F527B2581AA05A5793C60D2FF6DC6C55
8739DD6BF1BF12BB9A20724A176EA462593D763D90BA0719EE731DA5EB22CC6E
A8BD93894943F8FBE2A052CBC2CA6D633A230412D292438937409FC218E9F9B4
A46CC744D9947BC5A8F0D81313CA6F5EC07B3977FDEBFBF6D5CEF96440814F44
B4992BFF58B91EAC064C64A20E51436FD2CAA2685EC8A882043D6DCA44400F2D
A38BC82E8FDFBE4FEC60F76857535D9F058AC7D025111C81CD4B3F2507585EAE
6A5254B1A9FF20CA402700E4F6522AC95BF2E373518CA54EF4B01C53DA7D90EB
63E0A07C349F6A2968A988BB1FD120DA292201550823820978DC7DE6D6616F80
D27062D5959E5909A7B7CDA7A4D49DD7091BF0AFC053E2DD0CE5060B84E05ADD
FA249B439DF518EA7B878398B10905879C569EA213FF364B9B37FC3931E1C70D
B79FFBD30BC890CAFCB101A40DC768D5535EEB54678E70AFD52D5B64D963F485
48D7DCB55736A343543747AAB7625CA8FFFB16E186C3203385E1D80995284AE9
25230A3FC756F55822EEFE030D88CD7CBE557BCE41309B76783698B1F9D21091
C1E8512ADFDE5EF1A9B5626AE3FEB4F127D06612C93517C3A23B766A8B620311
01F46245B0AEF9EF2AE5DD19945F77AB14169547EEAD422471FDD376E52ED6A5
A9C03610DCF286572B7B949A7F08458EF4EEBE5513D815C220AC4039D474655C
318523B9499AA1C29B78FB6E21EC0BE3CD856437A79048C8FC5B8E46B8F6E8CF
C2783B4313B2F735F4CFB299B69F809C87D15CFC63870790E597E38F37EE0379
B1EA8E3B8DA2348A1F8927A5C82F68C4E9D817D5B521F769690B5801F3627379
589F11E89869BE35BA96C90FC0902B167500C25370866BCB1391B4C6CDD05003
2EFF7B63DCDED18D6B7C186B694FFAD725F0C1BB1C6B1A1AB15F47B697AAAC1F
275CA17BCF7E79EF4079D701BBBF306302311950AA3EA5788239D1FDBD99B0EA
B041DBB2B7517176FEBA36B62D8F1935FB1518723CF9D8C77866A6DE13F519D0
5CFCB01A9B4119EC0D6659AFE222577D53A7B576FAE73802D858C5393E8083D1
D0D01C4C1E41D71844D2EF36E52562358AE3EBC1F6133E45440550695787E0F7
080490E8DDD1491096E9A2096D52AAD9290C4DA30B13B98BD2BA2140ECB7E63C
D7B447D4C40763B8376C78DA73409599D242B5DF7952B08A5ADA04CEC3DB2502
C4C4A91BC788FC12516BC85BC89A23C2CAE9772ABF888D966E976366613A8F19
055E787DF0962313DC2BA44796BDB5DF0FF6FD153B5BB9A392D09E79AF5106A8
18D906AA038D303835B4250A6772745D0D59C89DB79F5730A3F3862913AEDE76
85F7C1645D663EF374287FCEB15F73DFE560CF71848CD784BBFF1F61A7B893FE
564A6CBFB8A077E525640CF21194CF072DBB2641534960D5246B4461DF495DCA
C8CE84E14B437B82D1D8591F56261EFEBF59E51035F57BF70BA92D23238AF0B4
5E51945E819F047DC687DD3FE18AA19A7353A6AC4827F67FCC36058618924298
2BC8C8E18B9F260F3109B8E21CC27AD9B207D4694F3A54CD199E57BF87646D5D
E2AA6843D41B6E5AAE85B9B747A7CC96C8A88A654990FA928BC883B8E7606993
84EFECD8E78FAF7343A81E738E7F98F11DCE5E5674A2C0F301D7726ECB9315F3
DCB490CB22017B7DAC52EDDEC491BDD7FD3BD4250C50F58E33992F1EEBEBCB10
64A0B3BC1CE35B201E2069D38B9B952234C123546D7C87C1D9C2F12E06759315
D784953EB49B98CDDB54BA437102678B60FFF80EAC01AD071824179852DEE8F6
3279DB8591DD28E393EF792A8F931A3CD87CA3AB578B4A23C03C401EF8042E07
62A936089E3E91A2E23D6B622779FC97D1C263411D2BB7F9B52589B76EED4084
5D9AFB54CAA90EB44E4C1819F1DEE164BD01A6BA8965E3BC0874039470AB20D3
78662BD3AE655553EDE9CCD27DE87DE93962D3CA8EAEC79FE4E420FCBF1716BC
831084180D01341A77F5F142B442FBC57F1B0A7E8F6FB6C483282DE613E28E0A
B1E3D93B40B4F7B12AF06BBEAE2DB05AD82C74CB2771D4D72822722D61478FAB
68C32351BBB471AD0580BC14CA70AED08B32C9D524A9799691B40AA67028CBAF
043A08F716626DCD87B65E0BCCCA2BB322C836BF6E0E3F8372BF62BDC61081C6
DB8856410D68214404F8DE8FAE202FC7A6D64F9C1C9F0545B1AD62102A30418F
36BE3581B6E97C8BB04BFA344E7C3A4C89541A4460425F2597E539F76D311CBE
FB81D18EE03D49576916317F1C38411C48A534DA447F12D865C2AD09CC855192
F77048ABEE578DFD841305A8927C1BDC2325DBB3BC4A9BFAB6C474635397B1D8
E1021F51CBDE281E5993A16DAF98DB46ABFFB99193B79E6F1A14B16F03EC0ED7
3ADC8500CB57D81CFED0DFC5B028463C6F1E62512F869561FD5FFCC904E6F899
1FC8C103BCFF54A6AD3FCE5339E1757E2580ACBCEEAB1893860BC6433E70229E
52D1192D97667EEB6DD5B723669AE598E064F1779242BEACA45FE1012AAA8AA6
16FF39C512B5138495222A999F161C69C6330C0DBC1594A24A8462FBCB66B3EF
D4977BA05FC04588303F6B38ADD0BAFC37B26A6F77E5C843C81E6194BC6F6180
501D7617602616E425740FCF3383AB42191D707823A17B601F1D900C4E71D102
607ED7F38C871043E2E37AD162970575CA08A8DA272871F2D2741119E48FCAC8
ED6FC8001DB369C80928F84166B6F39A414277AD9424C2D2E6D6116E98615F14
C511C13E8F23AA05505670EBC3A55E5E44DF8F5E397156636B562E59FC6D52EC
845BE486ACE592F718017CD2EB4EA4004559544330668C1AFB2FDD4A72EEEE8C
A21D3CFC0AF60E785B8B723C16F77F4F3568097B60E1BCCB31284BA7C4DA6960
46756D986278D56C22EE0221AD6BED409322D1CF9BFD2B5CEF6E08F7C9334D32
9BDC08103E9C54875B2146E9F849F9E4AC043A1A15A296473A6531EF4F23468F
57D052B226A961A088A49427D60AFDEA209F39609EBA0BD1FE89234DBA4AD8E2
621FC5A011CE9FCB1A8CD9C7C03E8AD35CF856DCB2FB6041CB1AF30804A3CC34
C06C6FBA8AED5822157B005AFABC3041BB44B933DA3A8336FFE9568C0E6EFBB3
49E8FEE0AD1803E4DCADDBA121E96EC75C62DFE8E756C42B2E9FE0492FCCCFF5
BB4C531EC8F491AF54A981ED936E74846306E52E32384123DFDD27A889019B8C
034CF388DDB70D053D6A6A64F663441C51E317A1C26450658DA4D419B4774A45
4CAB69CD818F0D9B746B810DB2AB0FD840B730CC4FFD7D995185CE7EFA303C7C
079E829BCDCCA6B5EC85FA0AF194069C580FC648FEFCAB7BD7636886C4D61A81
954576B52A0B916C002B02D9B025971A01FAB3FFB24E6AE36B437A2C3850A8BB
96DA9DB53869C85BDED582DD899B2218979E95E5322518F13C8EA5B201E77459
2CC408F00153F6832725554B1043C9C874E149D9A2DD6BE6C7B75DD7ECADCF67
8A54C899C531EFC60AD0514E600E617A6F6193A1F9A3AAD060BF482720A66474
BB36AEBD3B62D11556E05E624319C01C600D708E21C3047E37C05714A3C1A6E5
CADDE0E078E6224657F12ED1B1CE05BEC6EFFF84B13FA81755B90F561A105E01
D5811A8D7AAB7ED74FF0EB093BAF2289C813AD63631533A3FD052E1E7FAEF84C
1C8B50AE7C22AD75592BE8C1E8ADEEEE96C2499E4D5C40DEEFB9EEC8853BB3E2
B1A59B4C2FEDD3E39F711F63E15A82F4D4AC55BFB537D83F52C5277D9A803AB2
6BFC625612F8CA585112DB4055340A94D57D8EBC8F15FB4FC3179DB0C1A6D525
0933CAFBAA4131AC4C5195B886EDC415A68DD2926C0604192710DDD71A94B5F4
1279EA5AC4E6A55E202406943FF078021BB5692EC0C2976F0CD85A79C7C8C032
8CB347B1F3A39F7D24F8145CD8C14B16AEE62C63CADF484ACFCDF8B1BA78DE11
A417D465D568055389188647382BE1B7891A84B9697E22FC61EE575561B2B7A4
00D190989027AB9043E2FC369D4850D405F713855CE2AAEC5F1A821BDF6F998B
F6D1B7A7404D8335800997DE394C532F1BA037817F690FEB3D10E162AF677824
EB9327D1B29E89BD409E8B6566BD816C96D7F48BA56CFE1DA7858B89967DC63C
86C7F324AC6A6101D10E898CDE9DB441287B7251DD23E3FB350EEE8077AB1453
F90BB9367EA4D1DC5B85D303788CC6F8D6B8100BBE8E4F5D2C425DD0F201CFC5
CF8008EFBE213313F312CF6A47B7330F65558335F2ECF8656AC75EF9D81C6294
337BDD694DBA55710B82F265007F94D66E5EEB10D4FA19A1D17B22CC77143B49
A4D62C7F972B81DDA6D8A830032F98E54CE3F758E2C8841D81527887A8244658
2610B5FCBEED01807D8782671B340506C2E139B068C6ADDD2A319599A658E682
CFD3516B2371A41269B08ECF2672D6A0F6B18B13E1999D4236F05892140EFF16
D38271D7242117F680138CFAA4E3DA7CA8D5BD5DC0E76C5B3A8AE3B0B80DFA01
27F2EB2B720F1CC56D748F66B647153D1076FCC35621CDD4D7D3C3B0E6C92618
1D03B43D0E964590BF61F80CD8627C0196A74C076D46F3A6E08F02B6B3B41646
A487980254A98CA34069DF6B94AA41A2E7C8D9A1E218828DF290EDB1E917461D
00D5FE70576EA42397A60539F61F720CE7F7788599AAF3FF46CE5AFDA10C54E0
155E70BCF5C758071838AF50C44016FE62E8E2427257CBD8F89F81127D86DAD3
5262BEDCD4DB77132F87887BB1F2CF98ACB47E3EF8BB1A8B2B87875AED53CF37
8DDC11AAC423A4B40357DCA73B0503A69F685F1F909AEB883D71D86241798883
488EA3CA0C2D6528F387E6809D726FBBF9D73A8ACB70AC169C6A89174C29981E
BF2BBDD15216C44D2164BCE9710D68D1E394869675A12AA720EDB851CEE8CAB5
E286DB3E1B0F1096BB8B09ABB6C5EFDADDC1403EA94C9B96CCD1EDB350000883
BED650A38D242174825479603EFA6E0830183BE17F73BC4349D162DDB5D13A00
37B7ED905BD955BAE747A2461ED951935021D0712804A3BC5200716ABA324B45
6B426ACEF05F37E657675D3B7B3D270C90A5F5264FC558E02C876E2FEC0315D0
D673EB06341A5D64885F629AA932C999495F93E1D1BC6773B48A7E7DD0F8AD99
DD1CA983785C5CDBE6BA8D995C758F7A279110DFB0402ADBF4D3D40868AFE8EE
32C5ED9B6166536DD7A4944765B3835B7C55F0DC106177F0F23DA72AD1502B38
6289EBD7CCB631651EEE3A5915907320FB6101D2E7BA173FB48AC7392E36D1A1
961C6E3F40B114B5EAA8110681D41558CEFF8DE2C3A1EB51713225E65CD6C5F4
1479662DA02D2FC57BE8C2FCB0803869718BD527D782098E0174672BEA355998
9BA1C79329B3C52A85E3A069555C878E6C82DA907C99F7F7EB6BC1D263A3F79B
A6094BCB658DF4851784EB30CAEF6A19EFF43BBCE0ABF7251609D31B340A21B9
9FB7EFF14699937EC5E60F0B25273719B3BCE8A66FFA54A591CEA5FE3E4E08C1
74AAC589C330098A1A41E0B56841A6D609AB93D83464320671662C6C7DC28684
AAB1D6E1734355021C74640860DBCD73903ED8F3A5167441D352B38F104E4B4A
0B35C7A68AA72F30E59F66C27CE603F315BA14C80E8052FF482594D37CF61960
6A1A7735C35E26F19746CB319EE82783BF7E254FADE1BBF4EDFAC61ECE56A133
8B06C3751FA9A4BC3ABE37E84ECEB7D8B9C151935090596A2B7A460D40A4BED8
1735C8F9C4085827DAAA45113A8B692A609A7BF00E32546CD73A019D92BB05B5
1C3946053D35BC360795ADD1C773C4B6CB5282A41D4B15691C78B0BD011BE000
E8BDDC6BFEF3DC43C50A07113FBA9B07629B0061DAE51629CB6113D415C1560E
C3077532E0E981F879B79440CDBF6CC14F198DBA7A8E27E664B94AF73074469D
CACBABC2031D1E1CF627EF67DA4C7308D259F3518A8B601D46960708D771397D
602F3115DA889D6C27185BD53F55D086CFED5DB737731738DF034CD04B4B3D7A
130FE17A3BD73F15591220D577318B7902CA313F30CE2B5C0B5FBFABC972F75A
1B652F87AFA3BA1F66BE31752839AA6B85C8EE0E86154644CABE921689948346
DDB8388B24E1184AB7980B4B447CBA5302D60BDD88D6853300DB7DEAEF7A1CD9
C36BD2706372777E41AA3A61DB948DC0FD452DDC55182FEABBB35073A9F0F91F
3FD30E78D7EE33D9F9C24BC476E7AB960B128A6FC73A4F255346C2B02A14BB16
7F673988CAF059815185037EABA1121B76580BC4A776DD7666157FB3129D9EF2
B69F6A9B551E232F228B23063B47EDC3CF0BA53F88C62F2B5241FFA49A1D1C30
C6CD4BF9E969E2DB36C6A9E23B7D4689ED4E7C1CDD24E5EC7C231E74E0D47C48
279BE0C0AA04C65A5BA5EA4D1CE830D3D07B2AAE57DA5F8091B4501CF10531C5
0C736A5EEBD51E02115B64B5C0BDCE44BACA5C08A515D3580832399CAB3836FF
F985708EEEC5DE48973B6DEA4599E4D47C97F9B3A11C8CB3EA31F589BDA600E1
15E70A7A01E35BBC126EE2B757D65087645DC8FDB73552571413893A7315B3C6
BB81ED09F494C164417F576EB753A04A6DB147200678D6AA96214D44092144B3
5B9C84FBE4B94E473C872FCE0A56B35A8A7FA937E15EA0AE46075BBB5442E24C
22F6774F05F524899AE62749B9516E1715221533E52747D660CE5AFC573EBC12
82B989F287F68CCF4ED7D68DAD6C1C9A9D92397F760A3704F53CA8D1BF278DD2
09DDDB0964A51388B669C597141ADACC7696FFE9DABBF55B076E157727BB8331
B85E8B3D5C8945AAF674447E4DDEB4C1D21905A5EA5E993611D8A4E6025A3E9D
0883A7B3ECD67E5BD1C165A35025362F20F481B45E2577B16B4C393369583996
1674CE2B5AEF26AFE67BE1FFC24D88653589B431FB84E4DDB650C2F783594DE6
172778975DA35A724B445CADB06E4F5A7BDEF178B1674EEC1E9E4CC60A09BEA9
A64E0D84BCA80055E57D34F8F05ECAFDB45D6BC44417E8CB8EA41CC5CC1EC725
CFCC8123CDDE863565BF7C667227EF142D0083B52E637C7EF2B604061C01183E
D61B476258361737885BE3731BCD0D4615795037F147ACA04C2ACD99ADB63248
8C3575263961CA5805E892BB7EE53905885A06F35777592943F362EB36B255BF
FC85968169754EFD6DAA32996088EEB9315BE9F19F9087C77B0731CDE8B2D4E7
2B03779B8E6BB975866480273F47C2A67F8087F035315B9CDFA1D2025623754C
93CB3EFB7343EA55CD35131383D80D4AC3B8712D1CA44E8F86FC093963A77C78
92D9A17FAC8B9B0E66A12009D37EE30CE6E9307F3147D78DBD5C76410D01384B
B95074CDBC73175C2882CBA6D6FB4B7D48BAF74C510D2812B94E4F42BC3EBC35
CE328B7921324B0288E4A2A48514333F69D9C725D8731ABCF5D2C83F58AAA900
FF955319497E9590D4F91013CA0947C42378EC185FCE4783729578878D2C9CC4
DECF246DFCBBD6E444A9F31971CEFADC7BFE832A7BF7AD6421FE060E59E1F45E
19635E11C8A3D3EFFAC77DED7CC3DD229F1EF1A6E17099058C8B8EFBA9F66BBE
CEA13733037B3072C48C23DF56CA233093AAFA54FFA50A3C775B46790D67CC0E
5D1E04E7287731B70785C23DD9E87512FA8954C3ADE73BC6D52E80C827321977
F7865D10CE97CA2774F27734427BE26B5C3E7CAED86C85B5E190C5C8294E49F4
B998581A399378863E3AC6FD31927C8FBE090DFFAEFF608338474468BFD7E074
7745A81FDC2505E773E0925B6838E2A67064A6F44AB8719B95C8C26C9CA26BA6
70D4EE3517EC36087D8EE5CBB80AB303F36D640C1DEC81363028DF6CE7BA643C
32ED9984DFAF5F7E5BCDC7F2A7EC355692800DDEA0146E9E5F0EF49715BDCDAB
D4EFA0BD65C68234CA6E436B3DF24E7DC6AD37137B49327871EA80F3BE559783
0AD2B4513467DD2E9FA1373ED7C5AAACFC6F2D1985C734F61B78CD8551CD1AB6
EACF0248200C2A29C34AE6255BC79B73AE14B980A7C357681EC9BB9A5966BD29
7F621C92AACF9582FE847E18C0A6D818CAB1D27E0FE3970A1CCB86CD34DB1F1F
EFB748158B14765F8914CA986D90864B5112FEC25875E11ECE23C0868A422238
3F86C8D8E7AA4C04622193067990DEA8E620009A072EF5B2FA6EF5CDF8264CE8
E14463A15D5ACD71B827267A083AB75D951A6EEED9377F060FFE21FF47D88B0A
51D08CD78DA6BC9BB6B252F240FA3D2DCC71AC39F4869A35E52429623FA7AE40
52DB2AB8C6E032F694E7568C1D1081CB340420EAD844C7E336A2E47224D29972
E847810CE5408B9ED0C6952247BC28B35FFD2683DEAFB7220B0C5A2EAF9A4052
B1A382AA2E1E1DA244F00DDD16CEBD141E96E316D1527B5003F22B01112F4BDB
701BB94B4C4427947CDD08A647D93504EA067D21563F33124B63BC4816E1E902
D53E24B71DD4F1CC13482C48FD1456BB3B6ABC46DD1ACB500ED7F8880BB8CA52
C667FF8F76A7982C01955CD2AB87A277B25C469E9536586CD367FA092D16DD5B
16F2BA8BC75D30E26CCE6AA5DEB885D397C84312953A0F5D7371427BAC81B31A
8092A80B169FF26E4372F8CE6E41E6C4AEF2CE7215F9FB88D09FE4D1FCC0B7A8
9A874B9887FD76E6303E404F673D424112ED9EC73512EF8D4A1203DCA6D17598
0F5BA063D534C7B146FD3A05C92D538B03BEE40A9F1FEE2C95629B63B89C5877
1BC7880B8F22E0D926876A97A83DE56F90EAA717B266D35EEA7C9F8CC5EF3DF6
BA89F19590C55CAA122628853277D7546CF341E2C15ECA68CDDBDEB160E76827
8586B64CCA4B1B6F8B8DBEEE801EC907B8468C530A56C5591C9A7E04D85DF0A7
D9E5013527A4FA58FED06F5AF2E12DE0945D3E806DAB98A4B30A4D6C012D26BD
2D1AA34F215842F03C0AFD5B521350C97EC0D3FC467167B874C1929A1BE8CCF1
58F56DD26A6FBEB218043ADCAB60ADE9A67D9F06FC3DBCBB7E790A03437384C4
E93F8E3D95443C3EDB23C3544E8D909373F264AAE98A916EFC50B8595F26DABB
991447F067A3697FDD7A59325BF9336A6D26FCDD9D6D697D17FBF3E4E499E7BC
8AE2F061629E4734648451AA3B1E57CA5831215EA28A89E769C4D180CBC2B572
A2E88C4C4FD6CE26F7E1BA227C96E23CA391EB44F0F3F0BB6D13F7859BDD1B49
68718527048FF0F87F77AC4F58A6C53FDE80BA57C56FB275C555A4904C50AD27
6FA3532655FCAB4FC52D27B413F942A50BD24D25174DC5A196573E3DFF977BB6
BEE0C76AEFB69565A700F9F5F99FD659C0AF6A722A34FAB2BCDD4AAAA52ADE1E
55E7A513EFB42521D914896EC1AC4E039B64D04F65CB0EA5D3BF2B402CDA4654
6996D51168BC979721380A12EB9F44D16DB3C4A2F4EAFF8DD50938B163A986ED
841B193BC83D6B8DD030CB5D200852A1573A8EBAAD3F0AE849E731E7C7C386F6
08F5F7FBF7C955F418FFBBED84FA24739161F40C299BC525B56E37A1913508CC
966D09EDA660F44A60AAA19EDD5AFD222A6020A3E9B2EE480D69D63C62B0FAB0
EBEAB12B54480EB952E342ABE5208B2B97F7F52AE52FCD8EC8C7E0F6CBD67F48
02A7CDAA7136589B1EB8917C87D6280314383032EFDEFB5A55F96AC2AD8F809F
6E06214461952D462620AFCD3668158D2D6BCB5CC1D2DA061797DEA2B23BCC44
1973EE0E24FECD62DF10F72E245F24482CA76BAE1A5A4CEAF5E28165981BF0B5
AC80B35FBD63AF583649872879195CB19163B0759B75300BC29C1FD295F92CE1
5F71A88529F232A523DCC4EF1B312C39CAA3709D0324ADC6081D867852DEDC4E
9CB9ED41A21CB4944C50C57063102036F5760945F64864D753FA5499B786A3D5
D0C5AC21FA1147AE8E9EDF69AA707F52904A5DCFDA95BF91C85487C0571E7540
9F3182ECE6E223AA1CB9528C396EC456A8A2E7F0BAE24EE88FB207ACB086222B
C805DEDAA7EF4CFB136C92206E286DB671BA7A859E771835EA607E16129A9D29
7C5A9E460A3CFE7F720E2BF9FD04049C8EF3F25AC29C2410F3258BA80C24AD83
223A9DD4E87F034D83ED41B168FC9BEB1EF22257863B6626126DEC35911423EE
A5CBE7AA6456E662E099EBEB9ABBDBABC63DAF33831EF9E8EFE7ECB57BF480A3
6A3672B28BF6AF173EE606583ED3759EE239EDE581363B065755CBE2B7163A24
8F9A2052CB19E1C99FA04CA5644E476D69593C3DF22BCB56BF2D63B58AE03B17
82506502D3EB709B009726B95BA7DED4BDA02919F5FF24849610590C8C5A147E
34348E34CDE6270147803C0B603F9318C4A5AF577BB0B3606E590CD3FFA35C3B
ED6ADDD2C1486E5383B7308C4A41FA6AA48ED9825929F97FCFD8A2990F50CA63
486817042707935C3610B650537802D0588675F0F8AEF5746B5A888DC5411B42
D8DBC8C301523919309C16D15B0E72F189A3EF5175DBC6DD1EA4CA7FE83761DD
CA28C19EE74089E124B9654B37BA892B14A81B1F13829E41C922713AF181BAEE
6230A063F41A27FBE06CB9582575A69A428F23B0F9B9964996063E7B82B49E11
333EC491A1C1788004A86B7B9473AB763E3B857A6D938A6F839F284FD11A9EB6
EA524E58396F7F02BD62A3E3DFC6405AD7352024DAC997631E4C4E72327A3F87
41F7E764077B3C75912E05C6773A7E26264844D298BEE09799DB36FF163E0A0A
A836B5DDE56AE33FE09A84FE343CDE4874E49EC086A3FDFEF9CA4A67A2D22FB1
819178BA330D1825F739C9E1C26EB7257643C202A474E410873028E94E9FA318
B8787A38619E2E5928147D4CAD199479529262726414B4F9A6E18C9F6FB0ABF9
6C07656ACD575FEDE8A3C29A5FAF1AF51D2167259C323AECFCBFF1BFED8BFF4F
2E9D12F664832D0659597C594852FCB33110189962C44A48EB0453370647B615
74A9A90D9ECCC3730A2D34A6D6980E0E633ACC9A5A0E56973E51B882C1372A1E
759A8754BA7B7C01A56A4940FE7711DE8AE972CED40BC94E7465C3CAFC3DF995
E942AB284A1EBE7A30D6E58BA48EF451F1213E4AAE753E34A76E1D9BBECD710A
18071BAC638B442A8884BBBB9395111A971A519C13D5F49EEB326C2335E4EC82
E5BF60FDEB1592F46445CB9EEC2C5AF7D2458ED5D4B7E69574D96EAB1FBDC7DF
187DECD5A68F2E474470B49CF103318B37BD96C93C5A53901E19AE73223D8C7C
2A0CA66154F9748BE595C7744D871F7C3B616300D64112E73739DDBA01F406D2
448E77E90F45AE40989E7B65C18BA9972A98C9AE6E95EE8C30016EFDDC00F3E9
A1C329D1D24E130C5613C2B6F1A24D94C9874DE41C6BC3FE3D04023E1E9364F0
0E4602A8701B4CC36E2A4498BA12CE6BB82D42FDA01FAB9F633F6E53EB3367D8
880357E50171D753E98B435E0CEB64AA674E3145E6A0563D25FD79E7D9DB5E01
4A6CB3F83849E17E5A20D71297EBA7DA74A693DD5376AB2725C983FC8BAAADA7
F810C86070F5628E7E8E8BC8DE997A19A9417F6B80C22E83FEFA7C4CDFCE056F
51F6055C25BE975CC1894101B91F7ECE62D37AC01036C2DFAE37575A57A35D82
887AE5C9024FB844E83B29B527867203216AF96969DB692B2B3DED2BE1B28B6E
B1C56C9BD1D8F77C23CA0ED57CC6FC7271D0BDC12F07955A4A3838FCF288EB41
EE5647F7DABFA9B9D38EAA56E550E34B1EF15554A24CC597B395DF24AB11CEBB
A8A6BADAD92A8089A73339D08231935E9B6CACDE69E7B499C26BAE5D7ABB7D62
EE9ECC41FDFF0180E2E4D841786E54D7BBD32A693FF8BE68BBC5A225CB703309
5FAAE5953F659D3AF3B275A4D5896A7D628DDADE8A5D99B42851853F526A4976
33CE46808CE654C57D1554691E5107BBA16EE498EB0C7A796CF43C696630E27E
C5553F9FD90CB0AD4FF5DBDA1A8B7924ADD0819F3A0E2E27C6E5C4E5CBA98EF4
B408271129563AE83DF8867BE62008EB6C17545A302E6EED5A81BDD1725C9EC8
A9CAC5D1A40FDE74EE8DC39EB875ECCF285BCAEBBBFDA5ADF88E6964CEBD2722
C71408C9065A549730A05917400D275B151E180AB47AD32D0AB901014C5CE75E
B6D3E26815C389EB93244304BD3D19DC4EEEE9B81B041F907BF228556F7D5998
54F6F841D054B08B9AD11ADB9CA9D1CAD02039122B48AA1E99521B4EB5736DCB
826EF2CD107853612CB37B5B024F17FF1515621892DBAEFF4D7BDB323B351FB5
047394833CA3F6F7DDAC38813AC8F8E4A9ECE847D29C7858E40334A1AAFE1D35
DA97E4A968B570A4B5A30AD3A99F890F5FFBD1C41B3595735344A9C05DCF1AA3
E8D8AE8C4266ED4F87FB952CBDB6D3FEE56D79FA659D77D2C8CB781E10B7340F
47DE36D72A01E4EEE200B6F640530E930D679DF9F7A084927D353397BE777BA1
16238C91699608A3B4589A4679203C61D8E5DED9B83E31F9B20262E87CD5E1CB
76710312437D1D986DBFD899CAD59EEBA7F5DC2C1B2895E57FC359AC99D9D5AC
1D789E613D18845E9F0FB439B97E98AFFE71134457105FFC28D8C9C7F20BD99B
6571F4DE0B91F210F06F5182C876EA6933217045E58320037CABAD4996A1ED90
FEDE6053057C863AD1E8390DB4603353580D605CF6F5B71307FF3387AB76AA6B
EF1A8D3A8A63119E9F3281FBD1EC7A94C9A7713D78F437DAE501F7354B673527
2D59BA8E814B95715F1CA4594119302A5438261F9690A30D821F0BD2EA33BFA3
43378E943C48BCD723E37E949C0F6C79245F97D34A044BF79B1B45211D451710
94174A61C89C283AE64FD6FDF04D7F13D8B2D3E11AF004C775C35ED40CB0BCD3
1B51B69463E7CECEF94FEB9A66C39FAF005A0E14EF20302F6C4884C57CECE0AB
8C81F76D09DF3F9BDB2F0C589C7F5D6D7C6B3D590DF1E4833CD79038D8A9ECAE
82AE3F607EAC2AB29887B89ED8FAD91952354936B74595DEF81F0C2549C6F8EB
28972B395603688A59CDB0426F8E6F49B0BF3535ABBE976D0E5A4AB72DB5C17C
1A7CC231DFEBB9B9F4AB1C4C6DCAFCF31BD429B9E8507C895E9F06C03007618E
2DDA9417823EEF5073F8345CD43B8A1ECC76E6B210FAF08C593AD11E7B6280F6
69E93B30BC52700BB69B599E97BFB2EA9DE4EA0A8E876CC27BC9EA45B785CBBC
41F2425CE3ECC2079829A8E6E00B85479514C16CC2F0AB67E9F0127D28E5CE9D
ABF56C1D0A2005400FF0A9B53CC023FD13844CBE988682E38A1B89983916936B
C1350C0925EA43780554194FF5D87CC464139419373923D5145E5EEFC5CA8E4E
8182EC01C3DBCEA30C2C0F86EA030CEF3710BD4C291A85151F5124665F8547EE
1527391CC1EA9058521FED723F0DE4F4298FE6BF2963F224DECBC10A9A6861C7
94E9881C2AF22CD1DA7BCF98C3EF58E42C7264E247A61FB334FA1C923A27E272
BDA7041316D73DAF668ECE239973B50E022C6E526852DE2D5D1F379B99D738F0
2EF350B0CB7C73D34502F0313005994DC324925C6212B013DB23CC4EB0F4C019
22115BFA2B6EA011A3C0600CFB773EFF1D79FFF6D49AB62CED70248C75BD201A
79BCDE96E8592C8A1FA5D19F40B608CF25778269A4665A358233DB18F1E77965
6AD768A730A753CDD33441485AA314273B061C2E61DD5F528BD9BD4B13DF0D64
5960C85D769EE747DC10C200B2862C5453CB57D0EC1B94
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (typical.dvi)
@start /Fa 215[83 40[{}1 74.7198 /MSAM10 rf /Fb 207[18
48[{}1 49.8132 /CMSY6 rf /Fc 203[30 30 30 30 49[{}4 49.8132
/CMR6 rf /Fd 172[43 50 6[53 1[21 73[{}4 74.7198 /CMSS9
rf /Fe 133[36 41 41 61 1[46 25 36 36 1[46 46 46 66 25
41 1[25 46 46 25 41 46 41 46 46 13[46 56 2[66 8[56 3[56
56 11[46 46 46 46 46 46 1[23 46[{ TeXBase1Encoding ReEncodeFont }36
91.3242 /NimbusRomNo9L-ReguItal rf /Ff 134[37 4[27 28
28 2[35 1[59 20 2[20 39 35 1[31 39 31 39 35 32[55 17[20
46[{}17 66.4176 /CMR8 rf /Fg 134[42 4[23 42 28 2[46 1[69
18 2[18 1[46 1[46 3[46 20[46 4[65 3[60 55 21[23 44[{
 TeXBase1Encoding ReEncodeFont }16 83.022 /NimbusSanL-Regu
rf /Fh 134[50 4[28 1[33 5[22 2[22 55 2[55 55 50 1[55
13[66 5[83 55 4[78 24[28 46[{ TeXBase1Encoding ReEncodeFont }15
99.6264 /NimbusSanL-Regu rf /Fi 136[116 83 91 50 83 58
2[91 2[42 2[42 1[91 1[83 91 83 91 83 20[91 76[{
 TeXBase1Encoding ReEncodeFont }16 149.44 /NimbusSanL-Bold
rf /Fj 149[21 2[38 38 17[42 20[60 60 4[43 43 5[51 16[77
17[38 38 3[60 9[60{}14 74.7198 /CMSY9 rf /Fk 133[36 38
44 55 37 44 28 36 2[39 14[41 12[45 47 2[49 4[65 8[58
58 5[21 21 43[34 14[{}19 74.7198 /CMMI9 rf /Fl 134[41
41 55 1[43 30 30 30 1[43 38 43 64 21 41 23 21 43 38 23
34 43 34 43 38 3[21 1[21 3[79 2[55 43 57 1[52 60 1[70
1[60 2[58 60 2[59 55 54 4[60 2[21 6[38 38 38 1[38 21
26 21 2[30 30 21 5[21 31[64 1[{}52 74.7198 /CMR9 rf /Fm
134[50 1[72 1[55 33 39 44 1[55 50 55 83 28 2[28 1[50
1[44 55 44 1[50 7[72 1[100 1[72 66 55 72 1[61 78 72 94
66 78 1[39 78 78 61 66 72 72 66 72 11[50 50 50 50 50
2[25 46[{ TeXBase1Encoding ReEncodeFont }44 99.6264 /NimbusRomNo9L-Medi
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
/setpagedevice where
{ pop << /PageSize [595 842] >> setpagedevice }
{ /a4 where { pop a4 } if }
ifelse
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 TeXcolorgray Black -9 307 a
 /pssetRGBcolor /setrgbcolor load def /pssetCMYKcolor /setcmykcolor
load def /pssetGraycolor /setgray load def
 -9
307 a -9 307 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -9 307 a -9 307 a
tx@Dict begin  gsave STV CP T /ps@refangle 0.  def grestore  end
 -9 307 a 0 TeXcolorgray
-9 307 a
tx@Dict begin  gsave STV CP T /ps@rot 0 def grestore  end
 -9 307 a 83 x Fm(K)n(eyw)o(ords)-9 482 y Fl(higher)22
b(category)g(theory)-6 b(,)22 b(concurrency)-6 b(,)22
b(message-passing,)-9 569 y(t)n(yp)r(es,)j(Curry-Ho)n(w)n(ard)-9
768 y Fm(ABSTRA)-5 b(CT)-9 859 y Fl(W)f(e)27 b(presen)n(t)h(an)g
(approac)n(h)f(to)h(logics)i(and)d(t)n(yp)r(es)h(in)f(terms)-9
946 y(of)f(category)g(theory)-6 b(.)p 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 2 2
TeXDict begin 2 1 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
932 570 a Fi(Logics)42 b(as)g(distrib)m(utive)f(la)n(ws)916
914 y Fh(Michael)29 b(Sta)m(y)1066 1001 y Fg(Google)940
1088 y Ff(sta)n(y@go)r(ogle.com)2032 914 y Fh(L.G.)e(Meredith)2016
1001 y Fg(Biosimilar)q(ity)-8 b(,)25 b(LLC)1823 1088
y Ff(lgreg.meredith@biosimilarit)n(y)-6 b(.com)p 0 TeXcolorgray
-9 1660 a Fm(1.)99 b(INTR)m(ODUCTION)-9 1752 y Fl(TBD)13
1964 y Fe(1.0.1)90 b(Related)22 b(work)-9 2056 y Fl(TBD)13
2268 y Fe(1.0.2)90 b(Or)m(ganization)21 b(of)i(the)f(r)m(est)g(of)h
(the)f(paper)-9 2359 y Fl(TBD)-9 2572 y Fm(2.)99 b(THE)25
b(CALCULUS)-9 2663 y Fl(TBD)-9 2876 y Fm(2.1)99 b(Our)25
b(running)h(pr)n(ocess)f(calculus)13 3001 y Fe(2.1.1)90
b(Syntax)-9 3092 y Fl(TBD)-9 3266 y(Due)28 b(to)h(space)h(limitations)g
(w)n(e)g(do)f(not)f(treat)i(replication,)-9 3354 y(!)p
Fk(P)11 b Fl(.)13 3566 y Fe(2.1.2)90 b(F)-5 b(r)m(ee)21
b(and)h(bound)f(names)-9 3657 y Fl(TBD)13 3870 y Fe(2.1.3)90
b(Structur)o(al)21 b(congruence)-9 3961 y Fl(TBD)13 4174
y Fe(2.1.4)90 b(Oper)o(ational)21 b(Semantics)-9 4265
y Fl(TBD)13 4477 y Fe(2.1.5)90 b(Bisimulation)-9 4569
y Fl(TBD)p 0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray 0 TeXcolorgray 1980 1660
a Fm(3.)99 b(CA)-9 b(TEGORICAL)24 b(MA)-5 b(CHINER)m(Y)1980
1752 y Fl(Here's)23 b(ho)n(w)h(our)f(construction)f(w)n(ould)i(w)n(ork)
f(with)g(the)f(S,K)1980 1839 y(com)n(binator)k(basis)g(to)g(mo)r(del)g
(head)f(normal)h(form.)1980 2013 y(Monoidal)h(2-category)-6
b(.)1980 2210 y Fm(4.)99 b(THE)26 b(INTERPRET)-9 b(A)g(TION)1980
2302 y Fl(One)25 b(ob)t(ject)h Fj(T)45 b Fl(of)26 b(terms.)35
b(Generating)26 b(morphisms)p 0 TeXcolorgray 2091 2532
a Fj(\017)p 0 TeXcolorgray 38 w Fd(S)21 b Fl(:)g Fd(I)h
Fj(!)f(T)p 0 TeXcolorgray 2091 2676 a(\017)p 0 TeXcolorgray
38 w Fd(K)h Fl(:)f Fd(I)h Fj(!)f(T)p 0 TeXcolorgray 2091
2821 a(\017)p 0 TeXcolorgray 38 w Fl(\(\))g(:)g Fj(T)37
b(\012)17 b(T)40 b(!)21 b(T)45 b Fl(//)26 b(application)p
0 TeXcolorgray 2091 2966 a Fj(\017)p 0 TeXcolorgray 38
w Fk(\016)e Fl(:)e Fj(T)40 b(!)21 b Fd(I)26 b Fl(//)h(delete)e(a)h
(subterm)p 0 TeXcolorgray 2091 3111 a Fj(\017)p 0 TeXcolorgray
38 w Fl(\001)21 b(:)h Fj(T)40 b(!)21 b(T)37 b(\012)17
b(T)44 b Fl(//)27 b(duplicate)e(a)h(subterm)p 0 TeXcolorgray
2091 3256 a Fj(\017)p 0 TeXcolorgray 38 w Fd(R)21 b Fl(:)g
Fj(T)41 b(!)21 b(T)45 b Fl(//)26 b(Reduction)f(con)n(text)1980
3486 y(Generating)h(rewrites)p 0 TeXcolorgray 2091 3715
a Fj(\017)p 0 TeXcolorgray 38 w(8)21 b Fk(x;)12 b(y)s(;)h(z)24
b Fd(R)p Fl(\(\()p Fk(xy)s Fl(\))p Fk(z)s Fl(\))c Fj(!)h
Fd(R)p Fl(\()p Fd(R)p Fl(\()p Fk(xy)s Fl(\))p Fk(z)s
Fl(\))p 0 TeXcolorgray 2091 3860 a Fj(\017)p 0 TeXcolorgray
38 w(8)g Fk(x;)12 b(y)24 b Fd(R)p Fl(\()p Fd(R)p Fl(\()p
Fk(K)5 b(x)p Fl(\))p Fk(y)s Fl(\))20 b Fj(!)h Fk(x)c
Fj(\012)f Fk(\016)s Fl(\()p Fk(y)s Fl(\))p 0 TeXcolorgray
2091 4005 a Fj(\017)p 0 TeXcolorgray 38 w(8)31 b Fk(x;)12
b(y)s(;)h(z)34 b Fd(R)p Fl(\()p Fd(R)p Fl(\()p Fd(R)p
Fl(\()p Fk(S)t(x)p Fl(\))p Fk(y)s Fl(\))p Fk(z)s Fl(\))29
b Fj(!)h Fd(R)p Fl(\(\()p Fj(\000)3274 4013 y Fc(1)3308
4005 y Fj(\000)3368 4013 y Fc(2)3403 4005 y Fl(\)\()p
Fj(\000)3523 4013 y Fc(3)3557 4005 y Fj(\000)3617 4013
y Fc(4)3651 4005 y Fl(\)\))21 b Fj(\016)2167 4092 y Fl(\()p
Fk(T)11 b Fj(\012)p Fk(sw)r(ap)p Fj(\012)p Fk(T)g Fl(\))p
Fj(\016)p Fl(\()p Fk(T)g Fj(\012)p Fk(T)g Fj(\012)p Fl(\001\)\()p
Fk(x;)d(y)s(;)13 b(z)s Fl(\))j(i.e.)33 b Fd(R)p Fl(\(\()p
Fk(xz)s Fl(\)\()p Fk(y)s(z)s Fl(\)\))1980 4322 y(W)-6
b(e)25 b(can)h(tak)n(e)f(the)g(2-category)h(to)g(b)r(e)f(P)n(oset)h(as)
h(b)r(efore.)1980 4496 y(This)f(is)g(a)g(completely)g(un)n(t)n(yp)r(ed)
d(com)n(binator)j(calculus.)1980 4694 y Fm(4.1)99 b(Semantics)1980
4785 y Fl(T)-6 b(o)20 b(get)g(t)n(yp)r(es,)g(w)n(e)g(can)g(consider)g
(sets)g(of)g(terms)g(that)f(satisfy)1980 4872 y(a)26
b(prop)r(osition:)p 0 TeXcolorgray 2091 5118 a Fj(\017)p
0 TeXcolorgray 38 w Fl([)-13 b([)p Fj(>)p Fl(])g(])23
b(=)e Fj(T)p 0 TeXcolorgray 2091 5262 a(\017)p 0 TeXcolorgray
38 w Fl([)-13 b([)p Fj(?)p Fl(])g(])23 b(=)p 0 TeXcolorgray
2091 5407 a Fj(\017)p 0 TeXcolorgray 38 w Fl([)-13 b([)p
Fk(S)t Fl(])g(])23 b(=)e Fj(f)p Fk(S)t Fj(g)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 3 3
TeXDict begin 3 2 bop 0 TeXcolorgray 0 TeXcolorgray 0
TeXcolorgray 0 TeXcolorgray 102 390 a Fj(\017)p 0 TeXcolorgray
37 w Fl([)-13 b([)p Fk(K)5 b Fl(])-13 b(])24 b(=)d Fj(f)p
Fk(K)5 b Fj(g)p 0 TeXcolorgray 102 537 a(\017)p 0 TeXcolorgray
37 w Fl([)-13 b([)p Fk(A)p Fl(1)p Fk(B)t Fl(])g(])35
b(=)d Fj(f)p Fk(t)h Fj(2)g(T)20 b(j9)p Fk(u)33 b Fj(2)g
Fl([)-13 b([)p Fk(A)p Fl(])g(])p Fk(;)14 b(v)36 b Fj(2)d
Fk(B)t(;)13 b(t)1422 505 y Fb(0)1477 537 y Fj(2)33 b(T)19
b Fk(:t)33 b Fj(!)177 624 y Fk(t)205 593 y Fb(0)227 624
y Fk(;)14 b Fl(\()p Fk(v)s(u)p Fl(\))21 b Fj(!)g Fk(t)553
593 y Fb(0)575 624 y Fj(g)p 0 TeXcolorgray 102 771 a(\017)p
0 TeXcolorgray 37 w Fl([)-13 b([)p Fk(A)p Fl(2)p Fk(B)t
Fl(])g(])28 b(=)e Fj(f)p Fk(t)h Fj(2)f(T)19 b(j9)p Fk(u)27
b Fj(2)f Fl([)-13 b([)p Fk(A)p Fl(])g(])p Fk(;)15 b(v)29
b Fj(2)d Fl([)-13 b([)p Fk(B)t Fl(])g(])p Fk(;)15 b(t)1429
740 y Fb(0)1478 771 y Fj(2)26 b(T)19 b Fk(:v)30 b Fj(!)177
858 y Fk(t)205 827 y Fb(0)227 858 y Fk(;)14 b Fl(\()p
Fk(tu)p Fl(\))21 b Fj(!)g Fk(t)541 827 y Fb(0)563 858
y Fj(g)p 0 TeXcolorgray 102 1005 a(\017)p 0 TeXcolorgray
37 w Fl([)-13 b([)p Fk(A)p Fl(3)p Fk(B)t Fl(])g(])28
b(=)e Fj(f)p Fk(t)h Fj(2)f(T)19 b(j9)p Fk(u)27 b Fj(2)f
Fl([)-13 b([)p Fk(A)p Fl(])g(])p Fk(;)15 b(v)29 b Fj(2)d
Fl([)-13 b([)p Fk(B)t Fl(])g(])p Fk(;)15 b(t)1429 974
y Fb(0)1478 1005 y Fj(2)26 b(T)19 b Fk(:v)30 b Fj(!)177
1093 y Fk(t)205 1061 y Fb(0)227 1093 y Fk(;)14 b Fl(\()p
Fk(ut)p Fl(\))21 b Fj(!)g Fk(t)541 1061 y Fb(0)563 1093
y Fj(g)26 b Fl(etc.)-9 1343 y(W)-6 b(e)25 b(often)h(use)f
Fa(\()h Fl(to)g(mean)f(2.)13 1543 y Fe(4.1.1)90 b(Bisimulation)23
b(a)o(gain)-9 1634 y Fl(TBD)-9 1833 y Fm(5.)99 b(CONCLUSIONS)18
b(AND)h(FUTURE)h(W)o(ORK)-9 1924 y Fl(TBD)-9 2198 y Fe(Ac)n
(knowledgments.)38 b Fl(TBD)p 0 TeXcolorgray 0 TeXcolorgray
0 TeXcolorgray 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
